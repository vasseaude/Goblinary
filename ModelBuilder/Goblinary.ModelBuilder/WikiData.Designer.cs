//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Goblinary.ModelBuilder {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("WikiData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class WikiData : global::System.Data.DataSet {
        
        private AdvancementsDataTable tableAdvancements;
        
        private AdvancementRanksDataTable tableAdvancementRanks;
        
        private AdvancementRankFactsDataTable tableAdvancementRankFacts;
        
        private AbilitiesDataTable tableAbilities;
        
        private AchievementCategoriesDataTable tableAchievementCategories;
        
        private AchievementsDataTable tableAchievements;
        
        private AchievementLevelsDataTable tableAchievementLevels;
        
        private AchievementLevelFactsDataTable tableAchievementLevelFacts;
        
        private AdvRankCatReqsDataTable tableAdvRankCatReqs;
        
        private AdvRankAdvReqsDataTable tableAdvRankAdvReqs;
        
        private AdvRankAchReqsDataTable tableAdvRankAchReqs;
        
        private AdvRankAbilReqsDataTable tableAdvRankAbilReqs;
        
        private AdvRankAbilBonusesDataTable tableAdvRankAbilBonuses;
        
        private AdvancementRankFactStringsDataTable tableAdvancementRankFactStrings;
        
        private FeatsDataTable tableFeats;
        
        private RolesDataTable tableRoles;
        
        private AttackFormsDataTable tableAttackForms;
        
        private WeaponCategoriesDataTable tableWeaponCategories;
        
        private SpecificWeaponsDataTable tableSpecificWeapons;
        
        private SchoolsDataTable tableSchools;
        
        private EffectChannelsDataTable tableEffectChannels;
        
        private ActiveFeatsDataTable tableActiveFeats;
        
        private StandardAttacksDataTable tableStandardAttacks;
        
        private PowerAttacksDataTable tablePowerAttacks;
        
        private CantripsDataTable tableCantrips;
        
        private ChanneledFeatsDataTable tableChanneledFeats;
        
        private AttackBonusesDataTable tableAttackBonuses;
        
        private RoleAchievementsDataTable tableRoleAchievements;
        
        private CraftAchievementsDataTable tableCraftAchievements;
        
        private CraftingAchievementsDataTable tableCraftingAchievements;
        
        private CraftingSkillsDataTable tableCraftingSkills;
        
        private RefiningSkillsDataTable tableRefiningSkills;
        
        private RefiningAchievementsDataTable tableRefiningAchievements;
        
        private CounterAchievementLevelsDataTable tableCounterAchievementLevels;
        
        private CraftAchievementLevelsDataTable tableCraftAchievementLevels;
        
        private AchLevelCatBonusesDataTable tableAchLevelCatBonuses;
        
        private AchLevelAdvReqsDataTable tableAchLevelAdvReqs;
        
        private AchievementLevelFactStringsDataTable tableAchievementLevelFactStrings;
        
        private FeatRanksDataTable tableFeatRanks;
        
        private EffectDescriptionsDataTable tableEffectDescriptions;
        
        private EffectTermsDataTable tableEffectTerms;
        
        private EffectsDataTable tableEffects;
        
        private ConditionalsDataTable tableConditionals;
        
        private EffectConditionalsDataTable tableEffectConditionals;
        
        private FeatFactsDataTable tableFeatFacts;
        
        private FeatRankFactsDataTable tableFeatRankFacts;
        
        private FeatEffectsDataTable tableFeatEffects;
        
        private FeatRankEffectsDataTable tableFeatRankEffects;
        
        private FeatRankKeywordDataTable tableFeatRankKeyword;
        
        private KeywordTypesDataTable tableKeywordTypes;
        
        private KeywordsDataTable tableKeywords;
        
        private KeywordValuesDataTable tableKeywordValues;
        
        private global::System.Data.DataRelation relationFK_Advancements_AdvancementRanks;
        
        private global::System.Data.DataRelation relationFK_AdvancementRanks_AdvancementRankFacts;
        
        private global::System.Data.DataRelation relationFK_Achievements_AchievementLevels;
        
        private global::System.Data.DataRelation relationFK_AchievementLevels_AchievementLevelFacts;
        
        private global::System.Data.DataRelation relationFK_AchievementCategories_AdvRankCatReq;
        
        private global::System.Data.DataRelation relationFK_AdvancementRankFacts_AdvRankCatReq;
        
        private global::System.Data.DataRelation relationFK_AdvancementRanks_AdvRankAdvReq;
        
        private global::System.Data.DataRelation relationFK_AdvancementRankFacts_AdvRankAdvReq;
        
        private global::System.Data.DataRelation relationFK_AchievementLevels_AdvRankAchReq;
        
        private global::System.Data.DataRelation relationFK_AdvancementRankFacts_AdvRankAchReq;
        
        private global::System.Data.DataRelation relationFK_Abilities_AdvRankAbilReq;
        
        private global::System.Data.DataRelation relationFK_AdvancementRankFacts_AdvRankAbilReq;
        
        private global::System.Data.DataRelation relationFK_Abilities_AdvRankAbilBonus;
        
        private global::System.Data.DataRelation relationFK_AdvancementRankFacts_AdvRankAbilBonus;
        
        private global::System.Data.DataRelation relationFK_AdvancementRanks_AdvancementRankFactStrings;
        
        private global::System.Data.DataRelation relationFK_Advancements_Feats;
        
        private global::System.Data.DataRelation relationFK_Roles_Feats;
        
        private global::System.Data.DataRelation relationFK_Feats_ActiveFeats;
        
        private global::System.Data.DataRelation relationFK_WeaponCategories_ActiveFeats;
        
        private global::System.Data.DataRelation relationFK_ActiveFeats_StandardAttacks;
        
        private global::System.Data.DataRelation relationFK_AttackForms_StandardAttacks;
        
        private global::System.Data.DataRelation relationFK_SpecificWeapons_StandardAttacks;
        
        private global::System.Data.DataRelation relationFK_ActiveFeats_PowerAttacks;
        
        private global::System.Data.DataRelation relationFK_AttackBonuses_PowerAttacks;
        
        private global::System.Data.DataRelation relationFK_StandardAttacks_Cantrips;
        
        private global::System.Data.DataRelation relationFK_Schools_Cantrips;
        
        private global::System.Data.DataRelation relationFK_Feats_ChanneledFeats;
        
        private global::System.Data.DataRelation relationFK_EffectChannels_ChanneledFeats;
        
        private global::System.Data.DataRelation relationFK_ChanneledFeats_AttackBonuses;
        
        private global::System.Data.DataRelation relationFK_Roles_RoleAchievements;
        
        private global::System.Data.DataRelation relationFK_Achievements_RoleAchievements;
        
        private global::System.Data.DataRelation relationFK_Achievements_CraftAchievements;
        
        private global::System.Data.DataRelation relationFK_CraftAchievements_CraftingAchievement;
        
        private global::System.Data.DataRelation relationFK_CraftingSkills_CraftingAchievement;
        
        private global::System.Data.DataRelation relationFK_ChanneledFeats_CraftingSkills;
        
        private global::System.Data.DataRelation relationFK_ChanneledFeats_RefiningSkills;
        
        private global::System.Data.DataRelation relationFK_CraftAchievements_RefiningAchievement;
        
        private global::System.Data.DataRelation relationFK_RefiningSkills_RefiningAchievement;
        
        private global::System.Data.DataRelation relationFK_AchievementLevels_CounterAchievementLevels;
        
        private global::System.Data.DataRelation relationFK_AchievementLevels_CraftAchievementLevels;
        
        private global::System.Data.DataRelation relationFK_AchievementLevelFacts_AchLevelCatBonuses;
        
        private global::System.Data.DataRelation relationFK_AchievementCategories_AchLevelCatBonuses;
        
        private global::System.Data.DataRelation relationFK_AchievementLevelFacts_AchLevelAdvReqs;
        
        private global::System.Data.DataRelation relationFK_AdvancementRanks_AchLevelAdvReqs;
        
        private global::System.Data.DataRelation relationFK_AchievementLevels_AchievementLevelFactStrings;
        
        private global::System.Data.DataRelation relationFK_Feats_FeatRanks;
        
        private global::System.Data.DataRelation relationFK_Feats_FeatRanks1;
        
        private global::System.Data.DataRelation relationFK_AdvancementRanks_FeatRanks;
        
        private global::System.Data.DataRelation relationFK_Effects_EffectDescriptions;
        
        private global::System.Data.DataRelation relationFK_Conditionals_EffectDescriptions;
        
        private global::System.Data.DataRelation relationFK_EffectChannels_EffectTerms;
        
        private global::System.Data.DataRelation relationFK_EffectTerms_Effects;
        
        private global::System.Data.DataRelation relationFK_Conditionals_EffectConditionals;
        
        private global::System.Data.DataRelation relationFK_Effects_EffectConditionals;
        
        private global::System.Data.DataRelation relationFK_Feats_FeatFacts;
        
        private global::System.Data.DataRelation relationFK_FeatRanks_FeatRankFacts;
        
        private global::System.Data.DataRelation relationFK_EffectDescriptions_FeatEffects;
        
        private global::System.Data.DataRelation relationFK_FeatFacts_FeatEffects;
        
        private global::System.Data.DataRelation relationFK_EffectDescriptions_FeatRankEffects;
        
        private global::System.Data.DataRelation relationFK_FeatRankFacts_FeatRankEffects;
        
        private global::System.Data.DataRelation relationFK_Keywords_FeatRankKeyword;
        
        private global::System.Data.DataRelation relationFK_FeatRankFacts_FeatRankKeyword;
        
        private global::System.Data.DataRelation relationFK_KeywordValues_Keywords;
        
        private global::System.Data.DataRelation relationFK_KeywordTypes_Keywords;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public WikiData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected WikiData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Advancements"] != null)) {
                    base.Tables.Add(new AdvancementsDataTable(ds.Tables["Advancements"]));
                }
                if ((ds.Tables["AdvancementRanks"] != null)) {
                    base.Tables.Add(new AdvancementRanksDataTable(ds.Tables["AdvancementRanks"]));
                }
                if ((ds.Tables["AdvancementRankFacts"] != null)) {
                    base.Tables.Add(new AdvancementRankFactsDataTable(ds.Tables["AdvancementRankFacts"]));
                }
                if ((ds.Tables["Abilities"] != null)) {
                    base.Tables.Add(new AbilitiesDataTable(ds.Tables["Abilities"]));
                }
                if ((ds.Tables["AchievementCategories"] != null)) {
                    base.Tables.Add(new AchievementCategoriesDataTable(ds.Tables["AchievementCategories"]));
                }
                if ((ds.Tables["Achievements"] != null)) {
                    base.Tables.Add(new AchievementsDataTable(ds.Tables["Achievements"]));
                }
                if ((ds.Tables["AchievementLevels"] != null)) {
                    base.Tables.Add(new AchievementLevelsDataTable(ds.Tables["AchievementLevels"]));
                }
                if ((ds.Tables["AchievementLevelFacts"] != null)) {
                    base.Tables.Add(new AchievementLevelFactsDataTable(ds.Tables["AchievementLevelFacts"]));
                }
                if ((ds.Tables["AdvRankCatReqs"] != null)) {
                    base.Tables.Add(new AdvRankCatReqsDataTable(ds.Tables["AdvRankCatReqs"]));
                }
                if ((ds.Tables["AdvRankAdvReqs"] != null)) {
                    base.Tables.Add(new AdvRankAdvReqsDataTable(ds.Tables["AdvRankAdvReqs"]));
                }
                if ((ds.Tables["AdvRankAchReqs"] != null)) {
                    base.Tables.Add(new AdvRankAchReqsDataTable(ds.Tables["AdvRankAchReqs"]));
                }
                if ((ds.Tables["AdvRankAbilReqs"] != null)) {
                    base.Tables.Add(new AdvRankAbilReqsDataTable(ds.Tables["AdvRankAbilReqs"]));
                }
                if ((ds.Tables["AdvRankAbilBonuses"] != null)) {
                    base.Tables.Add(new AdvRankAbilBonusesDataTable(ds.Tables["AdvRankAbilBonuses"]));
                }
                if ((ds.Tables["AdvancementRankFactStrings"] != null)) {
                    base.Tables.Add(new AdvancementRankFactStringsDataTable(ds.Tables["AdvancementRankFactStrings"]));
                }
                if ((ds.Tables["Feats"] != null)) {
                    base.Tables.Add(new FeatsDataTable(ds.Tables["Feats"]));
                }
                if ((ds.Tables["Roles"] != null)) {
                    base.Tables.Add(new RolesDataTable(ds.Tables["Roles"]));
                }
                if ((ds.Tables["AttackForms"] != null)) {
                    base.Tables.Add(new AttackFormsDataTable(ds.Tables["AttackForms"]));
                }
                if ((ds.Tables["WeaponCategories"] != null)) {
                    base.Tables.Add(new WeaponCategoriesDataTable(ds.Tables["WeaponCategories"]));
                }
                if ((ds.Tables["SpecificWeapons"] != null)) {
                    base.Tables.Add(new SpecificWeaponsDataTable(ds.Tables["SpecificWeapons"]));
                }
                if ((ds.Tables["Schools"] != null)) {
                    base.Tables.Add(new SchoolsDataTable(ds.Tables["Schools"]));
                }
                if ((ds.Tables["EffectChannels"] != null)) {
                    base.Tables.Add(new EffectChannelsDataTable(ds.Tables["EffectChannels"]));
                }
                if ((ds.Tables["ActiveFeats"] != null)) {
                    base.Tables.Add(new ActiveFeatsDataTable(ds.Tables["ActiveFeats"]));
                }
                if ((ds.Tables["StandardAttacks"] != null)) {
                    base.Tables.Add(new StandardAttacksDataTable(ds.Tables["StandardAttacks"]));
                }
                if ((ds.Tables["PowerAttacks"] != null)) {
                    base.Tables.Add(new PowerAttacksDataTable(ds.Tables["PowerAttacks"]));
                }
                if ((ds.Tables["Cantrips"] != null)) {
                    base.Tables.Add(new CantripsDataTable(ds.Tables["Cantrips"]));
                }
                if ((ds.Tables["ChanneledFeats"] != null)) {
                    base.Tables.Add(new ChanneledFeatsDataTable(ds.Tables["ChanneledFeats"]));
                }
                if ((ds.Tables["AttackBonuses"] != null)) {
                    base.Tables.Add(new AttackBonusesDataTable(ds.Tables["AttackBonuses"]));
                }
                if ((ds.Tables["RoleAchievements"] != null)) {
                    base.Tables.Add(new RoleAchievementsDataTable(ds.Tables["RoleAchievements"]));
                }
                if ((ds.Tables["CraftAchievements"] != null)) {
                    base.Tables.Add(new CraftAchievementsDataTable(ds.Tables["CraftAchievements"]));
                }
                if ((ds.Tables["CraftingAchievements"] != null)) {
                    base.Tables.Add(new CraftingAchievementsDataTable(ds.Tables["CraftingAchievements"]));
                }
                if ((ds.Tables["CraftingSkills"] != null)) {
                    base.Tables.Add(new CraftingSkillsDataTable(ds.Tables["CraftingSkills"]));
                }
                if ((ds.Tables["RefiningSkills"] != null)) {
                    base.Tables.Add(new RefiningSkillsDataTable(ds.Tables["RefiningSkills"]));
                }
                if ((ds.Tables["RefiningAchievements"] != null)) {
                    base.Tables.Add(new RefiningAchievementsDataTable(ds.Tables["RefiningAchievements"]));
                }
                if ((ds.Tables["CounterAchievementLevels"] != null)) {
                    base.Tables.Add(new CounterAchievementLevelsDataTable(ds.Tables["CounterAchievementLevels"]));
                }
                if ((ds.Tables["CraftAchievementLevels"] != null)) {
                    base.Tables.Add(new CraftAchievementLevelsDataTable(ds.Tables["CraftAchievementLevels"]));
                }
                if ((ds.Tables["AchLevelCatBonuses"] != null)) {
                    base.Tables.Add(new AchLevelCatBonusesDataTable(ds.Tables["AchLevelCatBonuses"]));
                }
                if ((ds.Tables["AchLevelAdvReqs"] != null)) {
                    base.Tables.Add(new AchLevelAdvReqsDataTable(ds.Tables["AchLevelAdvReqs"]));
                }
                if ((ds.Tables["AchievementLevelFactStrings"] != null)) {
                    base.Tables.Add(new AchievementLevelFactStringsDataTable(ds.Tables["AchievementLevelFactStrings"]));
                }
                if ((ds.Tables["FeatRanks"] != null)) {
                    base.Tables.Add(new FeatRanksDataTable(ds.Tables["FeatRanks"]));
                }
                if ((ds.Tables["EffectDescriptions"] != null)) {
                    base.Tables.Add(new EffectDescriptionsDataTable(ds.Tables["EffectDescriptions"]));
                }
                if ((ds.Tables["EffectTerms"] != null)) {
                    base.Tables.Add(new EffectTermsDataTable(ds.Tables["EffectTerms"]));
                }
                if ((ds.Tables["Effects"] != null)) {
                    base.Tables.Add(new EffectsDataTable(ds.Tables["Effects"]));
                }
                if ((ds.Tables["Conditionals"] != null)) {
                    base.Tables.Add(new ConditionalsDataTable(ds.Tables["Conditionals"]));
                }
                if ((ds.Tables["EffectConditionals"] != null)) {
                    base.Tables.Add(new EffectConditionalsDataTable(ds.Tables["EffectConditionals"]));
                }
                if ((ds.Tables["FeatFacts"] != null)) {
                    base.Tables.Add(new FeatFactsDataTable(ds.Tables["FeatFacts"]));
                }
                if ((ds.Tables["FeatRankFacts"] != null)) {
                    base.Tables.Add(new FeatRankFactsDataTable(ds.Tables["FeatRankFacts"]));
                }
                if ((ds.Tables["FeatEffects"] != null)) {
                    base.Tables.Add(new FeatEffectsDataTable(ds.Tables["FeatEffects"]));
                }
                if ((ds.Tables["FeatRankEffects"] != null)) {
                    base.Tables.Add(new FeatRankEffectsDataTable(ds.Tables["FeatRankEffects"]));
                }
                if ((ds.Tables["FeatRankKeyword"] != null)) {
                    base.Tables.Add(new FeatRankKeywordDataTable(ds.Tables["FeatRankKeyword"]));
                }
                if ((ds.Tables["KeywordTypes"] != null)) {
                    base.Tables.Add(new KeywordTypesDataTable(ds.Tables["KeywordTypes"]));
                }
                if ((ds.Tables["Keywords"] != null)) {
                    base.Tables.Add(new KeywordsDataTable(ds.Tables["Keywords"]));
                }
                if ((ds.Tables["KeywordValues"] != null)) {
                    base.Tables.Add(new KeywordValuesDataTable(ds.Tables["KeywordValues"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AdvancementsDataTable Advancements {
            get {
                return this.tableAdvancements;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AdvancementRanksDataTable AdvancementRanks {
            get {
                return this.tableAdvancementRanks;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AdvancementRankFactsDataTable AdvancementRankFacts {
            get {
                return this.tableAdvancementRankFacts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AbilitiesDataTable Abilities {
            get {
                return this.tableAbilities;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AchievementCategoriesDataTable AchievementCategories {
            get {
                return this.tableAchievementCategories;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AchievementsDataTable Achievements {
            get {
                return this.tableAchievements;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AchievementLevelsDataTable AchievementLevels {
            get {
                return this.tableAchievementLevels;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AchievementLevelFactsDataTable AchievementLevelFacts {
            get {
                return this.tableAchievementLevelFacts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AdvRankCatReqsDataTable AdvRankCatReqs {
            get {
                return this.tableAdvRankCatReqs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AdvRankAdvReqsDataTable AdvRankAdvReqs {
            get {
                return this.tableAdvRankAdvReqs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AdvRankAchReqsDataTable AdvRankAchReqs {
            get {
                return this.tableAdvRankAchReqs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AdvRankAbilReqsDataTable AdvRankAbilReqs {
            get {
                return this.tableAdvRankAbilReqs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AdvRankAbilBonusesDataTable AdvRankAbilBonuses {
            get {
                return this.tableAdvRankAbilBonuses;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AdvancementRankFactStringsDataTable AdvancementRankFactStrings {
            get {
                return this.tableAdvancementRankFactStrings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FeatsDataTable Feats {
            get {
                return this.tableFeats;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RolesDataTable Roles {
            get {
                return this.tableRoles;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AttackFormsDataTable AttackForms {
            get {
                return this.tableAttackForms;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WeaponCategoriesDataTable WeaponCategories {
            get {
                return this.tableWeaponCategories;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SpecificWeaponsDataTable SpecificWeapons {
            get {
                return this.tableSpecificWeapons;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SchoolsDataTable Schools {
            get {
                return this.tableSchools;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EffectChannelsDataTable EffectChannels {
            get {
                return this.tableEffectChannels;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ActiveFeatsDataTable ActiveFeats {
            get {
                return this.tableActiveFeats;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StandardAttacksDataTable StandardAttacks {
            get {
                return this.tableStandardAttacks;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PowerAttacksDataTable PowerAttacks {
            get {
                return this.tablePowerAttacks;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CantripsDataTable Cantrips {
            get {
                return this.tableCantrips;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ChanneledFeatsDataTable ChanneledFeats {
            get {
                return this.tableChanneledFeats;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AttackBonusesDataTable AttackBonuses {
            get {
                return this.tableAttackBonuses;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RoleAchievementsDataTable RoleAchievements {
            get {
                return this.tableRoleAchievements;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CraftAchievementsDataTable CraftAchievements {
            get {
                return this.tableCraftAchievements;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CraftingAchievementsDataTable CraftingAchievements {
            get {
                return this.tableCraftingAchievements;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CraftingSkillsDataTable CraftingSkills {
            get {
                return this.tableCraftingSkills;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RefiningSkillsDataTable RefiningSkills {
            get {
                return this.tableRefiningSkills;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RefiningAchievementsDataTable RefiningAchievements {
            get {
                return this.tableRefiningAchievements;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CounterAchievementLevelsDataTable CounterAchievementLevels {
            get {
                return this.tableCounterAchievementLevels;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CraftAchievementLevelsDataTable CraftAchievementLevels {
            get {
                return this.tableCraftAchievementLevels;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AchLevelCatBonusesDataTable AchLevelCatBonuses {
            get {
                return this.tableAchLevelCatBonuses;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AchLevelAdvReqsDataTable AchLevelAdvReqs {
            get {
                return this.tableAchLevelAdvReqs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AchievementLevelFactStringsDataTable AchievementLevelFactStrings {
            get {
                return this.tableAchievementLevelFactStrings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FeatRanksDataTable FeatRanks {
            get {
                return this.tableFeatRanks;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EffectDescriptionsDataTable EffectDescriptions {
            get {
                return this.tableEffectDescriptions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EffectTermsDataTable EffectTerms {
            get {
                return this.tableEffectTerms;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EffectsDataTable Effects {
            get {
                return this.tableEffects;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ConditionalsDataTable Conditionals {
            get {
                return this.tableConditionals;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EffectConditionalsDataTable EffectConditionals {
            get {
                return this.tableEffectConditionals;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FeatFactsDataTable FeatFacts {
            get {
                return this.tableFeatFacts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FeatRankFactsDataTable FeatRankFacts {
            get {
                return this.tableFeatRankFacts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FeatEffectsDataTable FeatEffects {
            get {
                return this.tableFeatEffects;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FeatRankEffectsDataTable FeatRankEffects {
            get {
                return this.tableFeatRankEffects;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FeatRankKeywordDataTable FeatRankKeyword {
            get {
                return this.tableFeatRankKeyword;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KeywordTypesDataTable KeywordTypes {
            get {
                return this.tableKeywordTypes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KeywordsDataTable Keywords {
            get {
                return this.tableKeywords;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KeywordValuesDataTable KeywordValues {
            get {
                return this.tableKeywordValues;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            WikiData cln = ((WikiData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Advancements"] != null)) {
                    base.Tables.Add(new AdvancementsDataTable(ds.Tables["Advancements"]));
                }
                if ((ds.Tables["AdvancementRanks"] != null)) {
                    base.Tables.Add(new AdvancementRanksDataTable(ds.Tables["AdvancementRanks"]));
                }
                if ((ds.Tables["AdvancementRankFacts"] != null)) {
                    base.Tables.Add(new AdvancementRankFactsDataTable(ds.Tables["AdvancementRankFacts"]));
                }
                if ((ds.Tables["Abilities"] != null)) {
                    base.Tables.Add(new AbilitiesDataTable(ds.Tables["Abilities"]));
                }
                if ((ds.Tables["AchievementCategories"] != null)) {
                    base.Tables.Add(new AchievementCategoriesDataTable(ds.Tables["AchievementCategories"]));
                }
                if ((ds.Tables["Achievements"] != null)) {
                    base.Tables.Add(new AchievementsDataTable(ds.Tables["Achievements"]));
                }
                if ((ds.Tables["AchievementLevels"] != null)) {
                    base.Tables.Add(new AchievementLevelsDataTable(ds.Tables["AchievementLevels"]));
                }
                if ((ds.Tables["AchievementLevelFacts"] != null)) {
                    base.Tables.Add(new AchievementLevelFactsDataTable(ds.Tables["AchievementLevelFacts"]));
                }
                if ((ds.Tables["AdvRankCatReqs"] != null)) {
                    base.Tables.Add(new AdvRankCatReqsDataTable(ds.Tables["AdvRankCatReqs"]));
                }
                if ((ds.Tables["AdvRankAdvReqs"] != null)) {
                    base.Tables.Add(new AdvRankAdvReqsDataTable(ds.Tables["AdvRankAdvReqs"]));
                }
                if ((ds.Tables["AdvRankAchReqs"] != null)) {
                    base.Tables.Add(new AdvRankAchReqsDataTable(ds.Tables["AdvRankAchReqs"]));
                }
                if ((ds.Tables["AdvRankAbilReqs"] != null)) {
                    base.Tables.Add(new AdvRankAbilReqsDataTable(ds.Tables["AdvRankAbilReqs"]));
                }
                if ((ds.Tables["AdvRankAbilBonuses"] != null)) {
                    base.Tables.Add(new AdvRankAbilBonusesDataTable(ds.Tables["AdvRankAbilBonuses"]));
                }
                if ((ds.Tables["AdvancementRankFactStrings"] != null)) {
                    base.Tables.Add(new AdvancementRankFactStringsDataTable(ds.Tables["AdvancementRankFactStrings"]));
                }
                if ((ds.Tables["Feats"] != null)) {
                    base.Tables.Add(new FeatsDataTable(ds.Tables["Feats"]));
                }
                if ((ds.Tables["Roles"] != null)) {
                    base.Tables.Add(new RolesDataTable(ds.Tables["Roles"]));
                }
                if ((ds.Tables["AttackForms"] != null)) {
                    base.Tables.Add(new AttackFormsDataTable(ds.Tables["AttackForms"]));
                }
                if ((ds.Tables["WeaponCategories"] != null)) {
                    base.Tables.Add(new WeaponCategoriesDataTable(ds.Tables["WeaponCategories"]));
                }
                if ((ds.Tables["SpecificWeapons"] != null)) {
                    base.Tables.Add(new SpecificWeaponsDataTable(ds.Tables["SpecificWeapons"]));
                }
                if ((ds.Tables["Schools"] != null)) {
                    base.Tables.Add(new SchoolsDataTable(ds.Tables["Schools"]));
                }
                if ((ds.Tables["EffectChannels"] != null)) {
                    base.Tables.Add(new EffectChannelsDataTable(ds.Tables["EffectChannels"]));
                }
                if ((ds.Tables["ActiveFeats"] != null)) {
                    base.Tables.Add(new ActiveFeatsDataTable(ds.Tables["ActiveFeats"]));
                }
                if ((ds.Tables["StandardAttacks"] != null)) {
                    base.Tables.Add(new StandardAttacksDataTable(ds.Tables["StandardAttacks"]));
                }
                if ((ds.Tables["PowerAttacks"] != null)) {
                    base.Tables.Add(new PowerAttacksDataTable(ds.Tables["PowerAttacks"]));
                }
                if ((ds.Tables["Cantrips"] != null)) {
                    base.Tables.Add(new CantripsDataTable(ds.Tables["Cantrips"]));
                }
                if ((ds.Tables["ChanneledFeats"] != null)) {
                    base.Tables.Add(new ChanneledFeatsDataTable(ds.Tables["ChanneledFeats"]));
                }
                if ((ds.Tables["AttackBonuses"] != null)) {
                    base.Tables.Add(new AttackBonusesDataTable(ds.Tables["AttackBonuses"]));
                }
                if ((ds.Tables["RoleAchievements"] != null)) {
                    base.Tables.Add(new RoleAchievementsDataTable(ds.Tables["RoleAchievements"]));
                }
                if ((ds.Tables["CraftAchievements"] != null)) {
                    base.Tables.Add(new CraftAchievementsDataTable(ds.Tables["CraftAchievements"]));
                }
                if ((ds.Tables["CraftingAchievements"] != null)) {
                    base.Tables.Add(new CraftingAchievementsDataTable(ds.Tables["CraftingAchievements"]));
                }
                if ((ds.Tables["CraftingSkills"] != null)) {
                    base.Tables.Add(new CraftingSkillsDataTable(ds.Tables["CraftingSkills"]));
                }
                if ((ds.Tables["RefiningSkills"] != null)) {
                    base.Tables.Add(new RefiningSkillsDataTable(ds.Tables["RefiningSkills"]));
                }
                if ((ds.Tables["RefiningAchievements"] != null)) {
                    base.Tables.Add(new RefiningAchievementsDataTable(ds.Tables["RefiningAchievements"]));
                }
                if ((ds.Tables["CounterAchievementLevels"] != null)) {
                    base.Tables.Add(new CounterAchievementLevelsDataTable(ds.Tables["CounterAchievementLevels"]));
                }
                if ((ds.Tables["CraftAchievementLevels"] != null)) {
                    base.Tables.Add(new CraftAchievementLevelsDataTable(ds.Tables["CraftAchievementLevels"]));
                }
                if ((ds.Tables["AchLevelCatBonuses"] != null)) {
                    base.Tables.Add(new AchLevelCatBonusesDataTable(ds.Tables["AchLevelCatBonuses"]));
                }
                if ((ds.Tables["AchLevelAdvReqs"] != null)) {
                    base.Tables.Add(new AchLevelAdvReqsDataTable(ds.Tables["AchLevelAdvReqs"]));
                }
                if ((ds.Tables["AchievementLevelFactStrings"] != null)) {
                    base.Tables.Add(new AchievementLevelFactStringsDataTable(ds.Tables["AchievementLevelFactStrings"]));
                }
                if ((ds.Tables["FeatRanks"] != null)) {
                    base.Tables.Add(new FeatRanksDataTable(ds.Tables["FeatRanks"]));
                }
                if ((ds.Tables["EffectDescriptions"] != null)) {
                    base.Tables.Add(new EffectDescriptionsDataTable(ds.Tables["EffectDescriptions"]));
                }
                if ((ds.Tables["EffectTerms"] != null)) {
                    base.Tables.Add(new EffectTermsDataTable(ds.Tables["EffectTerms"]));
                }
                if ((ds.Tables["Effects"] != null)) {
                    base.Tables.Add(new EffectsDataTable(ds.Tables["Effects"]));
                }
                if ((ds.Tables["Conditionals"] != null)) {
                    base.Tables.Add(new ConditionalsDataTable(ds.Tables["Conditionals"]));
                }
                if ((ds.Tables["EffectConditionals"] != null)) {
                    base.Tables.Add(new EffectConditionalsDataTable(ds.Tables["EffectConditionals"]));
                }
                if ((ds.Tables["FeatFacts"] != null)) {
                    base.Tables.Add(new FeatFactsDataTable(ds.Tables["FeatFacts"]));
                }
                if ((ds.Tables["FeatRankFacts"] != null)) {
                    base.Tables.Add(new FeatRankFactsDataTable(ds.Tables["FeatRankFacts"]));
                }
                if ((ds.Tables["FeatEffects"] != null)) {
                    base.Tables.Add(new FeatEffectsDataTable(ds.Tables["FeatEffects"]));
                }
                if ((ds.Tables["FeatRankEffects"] != null)) {
                    base.Tables.Add(new FeatRankEffectsDataTable(ds.Tables["FeatRankEffects"]));
                }
                if ((ds.Tables["FeatRankKeyword"] != null)) {
                    base.Tables.Add(new FeatRankKeywordDataTable(ds.Tables["FeatRankKeyword"]));
                }
                if ((ds.Tables["KeywordTypes"] != null)) {
                    base.Tables.Add(new KeywordTypesDataTable(ds.Tables["KeywordTypes"]));
                }
                if ((ds.Tables["Keywords"] != null)) {
                    base.Tables.Add(new KeywordsDataTable(ds.Tables["Keywords"]));
                }
                if ((ds.Tables["KeywordValues"] != null)) {
                    base.Tables.Add(new KeywordValuesDataTable(ds.Tables["KeywordValues"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableAdvancements = ((AdvancementsDataTable)(base.Tables["Advancements"]));
            if ((initTable == true)) {
                if ((this.tableAdvancements != null)) {
                    this.tableAdvancements.InitVars();
                }
            }
            this.tableAdvancementRanks = ((AdvancementRanksDataTable)(base.Tables["AdvancementRanks"]));
            if ((initTable == true)) {
                if ((this.tableAdvancementRanks != null)) {
                    this.tableAdvancementRanks.InitVars();
                }
            }
            this.tableAdvancementRankFacts = ((AdvancementRankFactsDataTable)(base.Tables["AdvancementRankFacts"]));
            if ((initTable == true)) {
                if ((this.tableAdvancementRankFacts != null)) {
                    this.tableAdvancementRankFacts.InitVars();
                }
            }
            this.tableAbilities = ((AbilitiesDataTable)(base.Tables["Abilities"]));
            if ((initTable == true)) {
                if ((this.tableAbilities != null)) {
                    this.tableAbilities.InitVars();
                }
            }
            this.tableAchievementCategories = ((AchievementCategoriesDataTable)(base.Tables["AchievementCategories"]));
            if ((initTable == true)) {
                if ((this.tableAchievementCategories != null)) {
                    this.tableAchievementCategories.InitVars();
                }
            }
            this.tableAchievements = ((AchievementsDataTable)(base.Tables["Achievements"]));
            if ((initTable == true)) {
                if ((this.tableAchievements != null)) {
                    this.tableAchievements.InitVars();
                }
            }
            this.tableAchievementLevels = ((AchievementLevelsDataTable)(base.Tables["AchievementLevels"]));
            if ((initTable == true)) {
                if ((this.tableAchievementLevels != null)) {
                    this.tableAchievementLevels.InitVars();
                }
            }
            this.tableAchievementLevelFacts = ((AchievementLevelFactsDataTable)(base.Tables["AchievementLevelFacts"]));
            if ((initTable == true)) {
                if ((this.tableAchievementLevelFacts != null)) {
                    this.tableAchievementLevelFacts.InitVars();
                }
            }
            this.tableAdvRankCatReqs = ((AdvRankCatReqsDataTable)(base.Tables["AdvRankCatReqs"]));
            if ((initTable == true)) {
                if ((this.tableAdvRankCatReqs != null)) {
                    this.tableAdvRankCatReqs.InitVars();
                }
            }
            this.tableAdvRankAdvReqs = ((AdvRankAdvReqsDataTable)(base.Tables["AdvRankAdvReqs"]));
            if ((initTable == true)) {
                if ((this.tableAdvRankAdvReqs != null)) {
                    this.tableAdvRankAdvReqs.InitVars();
                }
            }
            this.tableAdvRankAchReqs = ((AdvRankAchReqsDataTable)(base.Tables["AdvRankAchReqs"]));
            if ((initTable == true)) {
                if ((this.tableAdvRankAchReqs != null)) {
                    this.tableAdvRankAchReqs.InitVars();
                }
            }
            this.tableAdvRankAbilReqs = ((AdvRankAbilReqsDataTable)(base.Tables["AdvRankAbilReqs"]));
            if ((initTable == true)) {
                if ((this.tableAdvRankAbilReqs != null)) {
                    this.tableAdvRankAbilReqs.InitVars();
                }
            }
            this.tableAdvRankAbilBonuses = ((AdvRankAbilBonusesDataTable)(base.Tables["AdvRankAbilBonuses"]));
            if ((initTable == true)) {
                if ((this.tableAdvRankAbilBonuses != null)) {
                    this.tableAdvRankAbilBonuses.InitVars();
                }
            }
            this.tableAdvancementRankFactStrings = ((AdvancementRankFactStringsDataTable)(base.Tables["AdvancementRankFactStrings"]));
            if ((initTable == true)) {
                if ((this.tableAdvancementRankFactStrings != null)) {
                    this.tableAdvancementRankFactStrings.InitVars();
                }
            }
            this.tableFeats = ((FeatsDataTable)(base.Tables["Feats"]));
            if ((initTable == true)) {
                if ((this.tableFeats != null)) {
                    this.tableFeats.InitVars();
                }
            }
            this.tableRoles = ((RolesDataTable)(base.Tables["Roles"]));
            if ((initTable == true)) {
                if ((this.tableRoles != null)) {
                    this.tableRoles.InitVars();
                }
            }
            this.tableAttackForms = ((AttackFormsDataTable)(base.Tables["AttackForms"]));
            if ((initTable == true)) {
                if ((this.tableAttackForms != null)) {
                    this.tableAttackForms.InitVars();
                }
            }
            this.tableWeaponCategories = ((WeaponCategoriesDataTable)(base.Tables["WeaponCategories"]));
            if ((initTable == true)) {
                if ((this.tableWeaponCategories != null)) {
                    this.tableWeaponCategories.InitVars();
                }
            }
            this.tableSpecificWeapons = ((SpecificWeaponsDataTable)(base.Tables["SpecificWeapons"]));
            if ((initTable == true)) {
                if ((this.tableSpecificWeapons != null)) {
                    this.tableSpecificWeapons.InitVars();
                }
            }
            this.tableSchools = ((SchoolsDataTable)(base.Tables["Schools"]));
            if ((initTable == true)) {
                if ((this.tableSchools != null)) {
                    this.tableSchools.InitVars();
                }
            }
            this.tableEffectChannels = ((EffectChannelsDataTable)(base.Tables["EffectChannels"]));
            if ((initTable == true)) {
                if ((this.tableEffectChannels != null)) {
                    this.tableEffectChannels.InitVars();
                }
            }
            this.tableActiveFeats = ((ActiveFeatsDataTable)(base.Tables["ActiveFeats"]));
            if ((initTable == true)) {
                if ((this.tableActiveFeats != null)) {
                    this.tableActiveFeats.InitVars();
                }
            }
            this.tableStandardAttacks = ((StandardAttacksDataTable)(base.Tables["StandardAttacks"]));
            if ((initTable == true)) {
                if ((this.tableStandardAttacks != null)) {
                    this.tableStandardAttacks.InitVars();
                }
            }
            this.tablePowerAttacks = ((PowerAttacksDataTable)(base.Tables["PowerAttacks"]));
            if ((initTable == true)) {
                if ((this.tablePowerAttacks != null)) {
                    this.tablePowerAttacks.InitVars();
                }
            }
            this.tableCantrips = ((CantripsDataTable)(base.Tables["Cantrips"]));
            if ((initTable == true)) {
                if ((this.tableCantrips != null)) {
                    this.tableCantrips.InitVars();
                }
            }
            this.tableChanneledFeats = ((ChanneledFeatsDataTable)(base.Tables["ChanneledFeats"]));
            if ((initTable == true)) {
                if ((this.tableChanneledFeats != null)) {
                    this.tableChanneledFeats.InitVars();
                }
            }
            this.tableAttackBonuses = ((AttackBonusesDataTable)(base.Tables["AttackBonuses"]));
            if ((initTable == true)) {
                if ((this.tableAttackBonuses != null)) {
                    this.tableAttackBonuses.InitVars();
                }
            }
            this.tableRoleAchievements = ((RoleAchievementsDataTable)(base.Tables["RoleAchievements"]));
            if ((initTable == true)) {
                if ((this.tableRoleAchievements != null)) {
                    this.tableRoleAchievements.InitVars();
                }
            }
            this.tableCraftAchievements = ((CraftAchievementsDataTable)(base.Tables["CraftAchievements"]));
            if ((initTable == true)) {
                if ((this.tableCraftAchievements != null)) {
                    this.tableCraftAchievements.InitVars();
                }
            }
            this.tableCraftingAchievements = ((CraftingAchievementsDataTable)(base.Tables["CraftingAchievements"]));
            if ((initTable == true)) {
                if ((this.tableCraftingAchievements != null)) {
                    this.tableCraftingAchievements.InitVars();
                }
            }
            this.tableCraftingSkills = ((CraftingSkillsDataTable)(base.Tables["CraftingSkills"]));
            if ((initTable == true)) {
                if ((this.tableCraftingSkills != null)) {
                    this.tableCraftingSkills.InitVars();
                }
            }
            this.tableRefiningSkills = ((RefiningSkillsDataTable)(base.Tables["RefiningSkills"]));
            if ((initTable == true)) {
                if ((this.tableRefiningSkills != null)) {
                    this.tableRefiningSkills.InitVars();
                }
            }
            this.tableRefiningAchievements = ((RefiningAchievementsDataTable)(base.Tables["RefiningAchievements"]));
            if ((initTable == true)) {
                if ((this.tableRefiningAchievements != null)) {
                    this.tableRefiningAchievements.InitVars();
                }
            }
            this.tableCounterAchievementLevels = ((CounterAchievementLevelsDataTable)(base.Tables["CounterAchievementLevels"]));
            if ((initTable == true)) {
                if ((this.tableCounterAchievementLevels != null)) {
                    this.tableCounterAchievementLevels.InitVars();
                }
            }
            this.tableCraftAchievementLevels = ((CraftAchievementLevelsDataTable)(base.Tables["CraftAchievementLevels"]));
            if ((initTable == true)) {
                if ((this.tableCraftAchievementLevels != null)) {
                    this.tableCraftAchievementLevels.InitVars();
                }
            }
            this.tableAchLevelCatBonuses = ((AchLevelCatBonusesDataTable)(base.Tables["AchLevelCatBonuses"]));
            if ((initTable == true)) {
                if ((this.tableAchLevelCatBonuses != null)) {
                    this.tableAchLevelCatBonuses.InitVars();
                }
            }
            this.tableAchLevelAdvReqs = ((AchLevelAdvReqsDataTable)(base.Tables["AchLevelAdvReqs"]));
            if ((initTable == true)) {
                if ((this.tableAchLevelAdvReqs != null)) {
                    this.tableAchLevelAdvReqs.InitVars();
                }
            }
            this.tableAchievementLevelFactStrings = ((AchievementLevelFactStringsDataTable)(base.Tables["AchievementLevelFactStrings"]));
            if ((initTable == true)) {
                if ((this.tableAchievementLevelFactStrings != null)) {
                    this.tableAchievementLevelFactStrings.InitVars();
                }
            }
            this.tableFeatRanks = ((FeatRanksDataTable)(base.Tables["FeatRanks"]));
            if ((initTable == true)) {
                if ((this.tableFeatRanks != null)) {
                    this.tableFeatRanks.InitVars();
                }
            }
            this.tableEffectDescriptions = ((EffectDescriptionsDataTable)(base.Tables["EffectDescriptions"]));
            if ((initTable == true)) {
                if ((this.tableEffectDescriptions != null)) {
                    this.tableEffectDescriptions.InitVars();
                }
            }
            this.tableEffectTerms = ((EffectTermsDataTable)(base.Tables["EffectTerms"]));
            if ((initTable == true)) {
                if ((this.tableEffectTerms != null)) {
                    this.tableEffectTerms.InitVars();
                }
            }
            this.tableEffects = ((EffectsDataTable)(base.Tables["Effects"]));
            if ((initTable == true)) {
                if ((this.tableEffects != null)) {
                    this.tableEffects.InitVars();
                }
            }
            this.tableConditionals = ((ConditionalsDataTable)(base.Tables["Conditionals"]));
            if ((initTable == true)) {
                if ((this.tableConditionals != null)) {
                    this.tableConditionals.InitVars();
                }
            }
            this.tableEffectConditionals = ((EffectConditionalsDataTable)(base.Tables["EffectConditionals"]));
            if ((initTable == true)) {
                if ((this.tableEffectConditionals != null)) {
                    this.tableEffectConditionals.InitVars();
                }
            }
            this.tableFeatFacts = ((FeatFactsDataTable)(base.Tables["FeatFacts"]));
            if ((initTable == true)) {
                if ((this.tableFeatFacts != null)) {
                    this.tableFeatFacts.InitVars();
                }
            }
            this.tableFeatRankFacts = ((FeatRankFactsDataTable)(base.Tables["FeatRankFacts"]));
            if ((initTable == true)) {
                if ((this.tableFeatRankFacts != null)) {
                    this.tableFeatRankFacts.InitVars();
                }
            }
            this.tableFeatEffects = ((FeatEffectsDataTable)(base.Tables["FeatEffects"]));
            if ((initTable == true)) {
                if ((this.tableFeatEffects != null)) {
                    this.tableFeatEffects.InitVars();
                }
            }
            this.tableFeatRankEffects = ((FeatRankEffectsDataTable)(base.Tables["FeatRankEffects"]));
            if ((initTable == true)) {
                if ((this.tableFeatRankEffects != null)) {
                    this.tableFeatRankEffects.InitVars();
                }
            }
            this.tableFeatRankKeyword = ((FeatRankKeywordDataTable)(base.Tables["FeatRankKeyword"]));
            if ((initTable == true)) {
                if ((this.tableFeatRankKeyword != null)) {
                    this.tableFeatRankKeyword.InitVars();
                }
            }
            this.tableKeywordTypes = ((KeywordTypesDataTable)(base.Tables["KeywordTypes"]));
            if ((initTable == true)) {
                if ((this.tableKeywordTypes != null)) {
                    this.tableKeywordTypes.InitVars();
                }
            }
            this.tableKeywords = ((KeywordsDataTable)(base.Tables["Keywords"]));
            if ((initTable == true)) {
                if ((this.tableKeywords != null)) {
                    this.tableKeywords.InitVars();
                }
            }
            this.tableKeywordValues = ((KeywordValuesDataTable)(base.Tables["KeywordValues"]));
            if ((initTable == true)) {
                if ((this.tableKeywordValues != null)) {
                    this.tableKeywordValues.InitVars();
                }
            }
            this.relationFK_Advancements_AdvancementRanks = this.Relations["FK_Advancements_AdvancementRanks"];
            this.relationFK_AdvancementRanks_AdvancementRankFacts = this.Relations["FK_AdvancementRanks_AdvancementRankFacts"];
            this.relationFK_Achievements_AchievementLevels = this.Relations["FK_Achievements_AchievementLevels"];
            this.relationFK_AchievementLevels_AchievementLevelFacts = this.Relations["FK_AchievementLevels_AchievementLevelFacts"];
            this.relationFK_AchievementCategories_AdvRankCatReq = this.Relations["FK_AchievementCategories_AdvRankCatReq"];
            this.relationFK_AdvancementRankFacts_AdvRankCatReq = this.Relations["FK_AdvancementRankFacts_AdvRankCatReq"];
            this.relationFK_AdvancementRanks_AdvRankAdvReq = this.Relations["FK_AdvancementRanks_AdvRankAdvReq"];
            this.relationFK_AdvancementRankFacts_AdvRankAdvReq = this.Relations["FK_AdvancementRankFacts_AdvRankAdvReq"];
            this.relationFK_AchievementLevels_AdvRankAchReq = this.Relations["FK_AchievementLevels_AdvRankAchReq"];
            this.relationFK_AdvancementRankFacts_AdvRankAchReq = this.Relations["FK_AdvancementRankFacts_AdvRankAchReq"];
            this.relationFK_Abilities_AdvRankAbilReq = this.Relations["FK_Abilities_AdvRankAbilReq"];
            this.relationFK_AdvancementRankFacts_AdvRankAbilReq = this.Relations["FK_AdvancementRankFacts_AdvRankAbilReq"];
            this.relationFK_Abilities_AdvRankAbilBonus = this.Relations["FK_Abilities_AdvRankAbilBonus"];
            this.relationFK_AdvancementRankFacts_AdvRankAbilBonus = this.Relations["FK_AdvancementRankFacts_AdvRankAbilBonus"];
            this.relationFK_AdvancementRanks_AdvancementRankFactStrings = this.Relations["FK_AdvancementRanks_AdvancementRankFactStrings"];
            this.relationFK_Advancements_Feats = this.Relations["FK_Advancements_Feats"];
            this.relationFK_Roles_Feats = this.Relations["FK_Roles_Feats"];
            this.relationFK_Feats_ActiveFeats = this.Relations["FK_Feats_ActiveFeats"];
            this.relationFK_WeaponCategories_ActiveFeats = this.Relations["FK_WeaponCategories_ActiveFeats"];
            this.relationFK_ActiveFeats_StandardAttacks = this.Relations["FK_ActiveFeats_StandardAttacks"];
            this.relationFK_AttackForms_StandardAttacks = this.Relations["FK_AttackForms_StandardAttacks"];
            this.relationFK_SpecificWeapons_StandardAttacks = this.Relations["FK_SpecificWeapons_StandardAttacks"];
            this.relationFK_ActiveFeats_PowerAttacks = this.Relations["FK_ActiveFeats_PowerAttacks"];
            this.relationFK_AttackBonuses_PowerAttacks = this.Relations["FK_AttackBonuses_PowerAttacks"];
            this.relationFK_StandardAttacks_Cantrips = this.Relations["FK_StandardAttacks_Cantrips"];
            this.relationFK_Schools_Cantrips = this.Relations["FK_Schools_Cantrips"];
            this.relationFK_Feats_ChanneledFeats = this.Relations["FK_Feats_ChanneledFeats"];
            this.relationFK_EffectChannels_ChanneledFeats = this.Relations["FK_EffectChannels_ChanneledFeats"];
            this.relationFK_ChanneledFeats_AttackBonuses = this.Relations["FK_ChanneledFeats_AttackBonuses"];
            this.relationFK_Roles_RoleAchievements = this.Relations["FK_Roles_RoleAchievements"];
            this.relationFK_Achievements_RoleAchievements = this.Relations["FK_Achievements_RoleAchievements"];
            this.relationFK_Achievements_CraftAchievements = this.Relations["FK_Achievements_CraftAchievements"];
            this.relationFK_CraftAchievements_CraftingAchievement = this.Relations["FK_CraftAchievements_CraftingAchievement"];
            this.relationFK_CraftingSkills_CraftingAchievement = this.Relations["FK_CraftingSkills_CraftingAchievement"];
            this.relationFK_ChanneledFeats_CraftingSkills = this.Relations["FK_ChanneledFeats_CraftingSkills"];
            this.relationFK_ChanneledFeats_RefiningSkills = this.Relations["FK_ChanneledFeats_RefiningSkills"];
            this.relationFK_CraftAchievements_RefiningAchievement = this.Relations["FK_CraftAchievements_RefiningAchievement"];
            this.relationFK_RefiningSkills_RefiningAchievement = this.Relations["FK_RefiningSkills_RefiningAchievement"];
            this.relationFK_AchievementLevels_CounterAchievementLevels = this.Relations["FK_AchievementLevels_CounterAchievementLevels"];
            this.relationFK_AchievementLevels_CraftAchievementLevels = this.Relations["FK_AchievementLevels_CraftAchievementLevels"];
            this.relationFK_AchievementLevelFacts_AchLevelCatBonuses = this.Relations["FK_AchievementLevelFacts_AchLevelCatBonuses"];
            this.relationFK_AchievementCategories_AchLevelCatBonuses = this.Relations["FK_AchievementCategories_AchLevelCatBonuses"];
            this.relationFK_AchievementLevelFacts_AchLevelAdvReqs = this.Relations["FK_AchievementLevelFacts_AchLevelAdvReqs"];
            this.relationFK_AdvancementRanks_AchLevelAdvReqs = this.Relations["FK_AdvancementRanks_AchLevelAdvReqs"];
            this.relationFK_AchievementLevels_AchievementLevelFactStrings = this.Relations["FK_AchievementLevels_AchievementLevelFactStrings"];
            this.relationFK_Feats_FeatRanks = this.Relations["FK_Feats_FeatRanks"];
            this.relationFK_Feats_FeatRanks1 = this.Relations["FK_Feats_FeatRanks1"];
            this.relationFK_AdvancementRanks_FeatRanks = this.Relations["FK_AdvancementRanks_FeatRanks"];
            this.relationFK_Effects_EffectDescriptions = this.Relations["FK_Effects_EffectDescriptions"];
            this.relationFK_Conditionals_EffectDescriptions = this.Relations["FK_Conditionals_EffectDescriptions"];
            this.relationFK_EffectChannels_EffectTerms = this.Relations["FK_EffectChannels_EffectTerms"];
            this.relationFK_EffectTerms_Effects = this.Relations["FK_EffectTerms_Effects"];
            this.relationFK_Conditionals_EffectConditionals = this.Relations["FK_Conditionals_EffectConditionals"];
            this.relationFK_Effects_EffectConditionals = this.Relations["FK_Effects_EffectConditionals"];
            this.relationFK_Feats_FeatFacts = this.Relations["FK_Feats_FeatFacts"];
            this.relationFK_FeatRanks_FeatRankFacts = this.Relations["FK_FeatRanks_FeatRankFacts"];
            this.relationFK_EffectDescriptions_FeatEffects = this.Relations["FK_EffectDescriptions_FeatEffects"];
            this.relationFK_FeatFacts_FeatEffects = this.Relations["FK_FeatFacts_FeatEffects"];
            this.relationFK_EffectDescriptions_FeatRankEffects = this.Relations["FK_EffectDescriptions_FeatRankEffects"];
            this.relationFK_FeatRankFacts_FeatRankEffects = this.Relations["FK_FeatRankFacts_FeatRankEffects"];
            this.relationFK_Keywords_FeatRankKeyword = this.Relations["FK_Keywords_FeatRankKeyword"];
            this.relationFK_FeatRankFacts_FeatRankKeyword = this.Relations["FK_FeatRankFacts_FeatRankKeyword"];
            this.relationFK_KeywordValues_Keywords = this.Relations["FK_KeywordValues_Keywords"];
            this.relationFK_KeywordTypes_Keywords = this.Relations["FK_KeywordTypes_Keywords"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "WikiData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/WikiData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAdvancements = new AdvancementsDataTable();
            base.Tables.Add(this.tableAdvancements);
            this.tableAdvancementRanks = new AdvancementRanksDataTable();
            base.Tables.Add(this.tableAdvancementRanks);
            this.tableAdvancementRankFacts = new AdvancementRankFactsDataTable();
            base.Tables.Add(this.tableAdvancementRankFacts);
            this.tableAbilities = new AbilitiesDataTable();
            base.Tables.Add(this.tableAbilities);
            this.tableAchievementCategories = new AchievementCategoriesDataTable();
            base.Tables.Add(this.tableAchievementCategories);
            this.tableAchievements = new AchievementsDataTable();
            base.Tables.Add(this.tableAchievements);
            this.tableAchievementLevels = new AchievementLevelsDataTable();
            base.Tables.Add(this.tableAchievementLevels);
            this.tableAchievementLevelFacts = new AchievementLevelFactsDataTable();
            base.Tables.Add(this.tableAchievementLevelFacts);
            this.tableAdvRankCatReqs = new AdvRankCatReqsDataTable();
            base.Tables.Add(this.tableAdvRankCatReqs);
            this.tableAdvRankAdvReqs = new AdvRankAdvReqsDataTable();
            base.Tables.Add(this.tableAdvRankAdvReqs);
            this.tableAdvRankAchReqs = new AdvRankAchReqsDataTable();
            base.Tables.Add(this.tableAdvRankAchReqs);
            this.tableAdvRankAbilReqs = new AdvRankAbilReqsDataTable();
            base.Tables.Add(this.tableAdvRankAbilReqs);
            this.tableAdvRankAbilBonuses = new AdvRankAbilBonusesDataTable();
            base.Tables.Add(this.tableAdvRankAbilBonuses);
            this.tableAdvancementRankFactStrings = new AdvancementRankFactStringsDataTable();
            base.Tables.Add(this.tableAdvancementRankFactStrings);
            this.tableFeats = new FeatsDataTable();
            base.Tables.Add(this.tableFeats);
            this.tableRoles = new RolesDataTable();
            base.Tables.Add(this.tableRoles);
            this.tableAttackForms = new AttackFormsDataTable();
            base.Tables.Add(this.tableAttackForms);
            this.tableWeaponCategories = new WeaponCategoriesDataTable();
            base.Tables.Add(this.tableWeaponCategories);
            this.tableSpecificWeapons = new SpecificWeaponsDataTable();
            base.Tables.Add(this.tableSpecificWeapons);
            this.tableSchools = new SchoolsDataTable();
            base.Tables.Add(this.tableSchools);
            this.tableEffectChannels = new EffectChannelsDataTable();
            base.Tables.Add(this.tableEffectChannels);
            this.tableActiveFeats = new ActiveFeatsDataTable();
            base.Tables.Add(this.tableActiveFeats);
            this.tableStandardAttacks = new StandardAttacksDataTable();
            base.Tables.Add(this.tableStandardAttacks);
            this.tablePowerAttacks = new PowerAttacksDataTable();
            base.Tables.Add(this.tablePowerAttacks);
            this.tableCantrips = new CantripsDataTable();
            base.Tables.Add(this.tableCantrips);
            this.tableChanneledFeats = new ChanneledFeatsDataTable();
            base.Tables.Add(this.tableChanneledFeats);
            this.tableAttackBonuses = new AttackBonusesDataTable();
            base.Tables.Add(this.tableAttackBonuses);
            this.tableRoleAchievements = new RoleAchievementsDataTable();
            base.Tables.Add(this.tableRoleAchievements);
            this.tableCraftAchievements = new CraftAchievementsDataTable();
            base.Tables.Add(this.tableCraftAchievements);
            this.tableCraftingAchievements = new CraftingAchievementsDataTable();
            base.Tables.Add(this.tableCraftingAchievements);
            this.tableCraftingSkills = new CraftingSkillsDataTable();
            base.Tables.Add(this.tableCraftingSkills);
            this.tableRefiningSkills = new RefiningSkillsDataTable();
            base.Tables.Add(this.tableRefiningSkills);
            this.tableRefiningAchievements = new RefiningAchievementsDataTable();
            base.Tables.Add(this.tableRefiningAchievements);
            this.tableCounterAchievementLevels = new CounterAchievementLevelsDataTable();
            base.Tables.Add(this.tableCounterAchievementLevels);
            this.tableCraftAchievementLevels = new CraftAchievementLevelsDataTable();
            base.Tables.Add(this.tableCraftAchievementLevels);
            this.tableAchLevelCatBonuses = new AchLevelCatBonusesDataTable();
            base.Tables.Add(this.tableAchLevelCatBonuses);
            this.tableAchLevelAdvReqs = new AchLevelAdvReqsDataTable();
            base.Tables.Add(this.tableAchLevelAdvReqs);
            this.tableAchievementLevelFactStrings = new AchievementLevelFactStringsDataTable();
            base.Tables.Add(this.tableAchievementLevelFactStrings);
            this.tableFeatRanks = new FeatRanksDataTable();
            base.Tables.Add(this.tableFeatRanks);
            this.tableEffectDescriptions = new EffectDescriptionsDataTable();
            base.Tables.Add(this.tableEffectDescriptions);
            this.tableEffectTerms = new EffectTermsDataTable();
            base.Tables.Add(this.tableEffectTerms);
            this.tableEffects = new EffectsDataTable();
            base.Tables.Add(this.tableEffects);
            this.tableConditionals = new ConditionalsDataTable();
            base.Tables.Add(this.tableConditionals);
            this.tableEffectConditionals = new EffectConditionalsDataTable();
            base.Tables.Add(this.tableEffectConditionals);
            this.tableFeatFacts = new FeatFactsDataTable();
            base.Tables.Add(this.tableFeatFacts);
            this.tableFeatRankFacts = new FeatRankFactsDataTable();
            base.Tables.Add(this.tableFeatRankFacts);
            this.tableFeatEffects = new FeatEffectsDataTable();
            base.Tables.Add(this.tableFeatEffects);
            this.tableFeatRankEffects = new FeatRankEffectsDataTable();
            base.Tables.Add(this.tableFeatRankEffects);
            this.tableFeatRankKeyword = new FeatRankKeywordDataTable();
            base.Tables.Add(this.tableFeatRankKeyword);
            this.tableKeywordTypes = new KeywordTypesDataTable();
            base.Tables.Add(this.tableKeywordTypes);
            this.tableKeywords = new KeywordsDataTable();
            base.Tables.Add(this.tableKeywords);
            this.tableKeywordValues = new KeywordValuesDataTable();
            base.Tables.Add(this.tableKeywordValues);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Advancements_AdvancementRanks", new global::System.Data.DataColumn[] {
                        this.tableAdvancements.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvancementRanks.Advancement_NameColumn});
            this.tableAdvancementRanks.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AdvancementRanks_AdvancementRankFacts", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRanks.Advancement_NameColumn,
                        this.tableAdvancementRanks.RankColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvancementRankFacts.Advancement_NameColumn,
                        this.tableAdvancementRankFacts.Advancement_RankColumn});
            this.tableAdvancementRankFacts.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Achievements_AchievementLevels", new global::System.Data.DataColumn[] {
                        this.tableAchievements.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableAchievementLevels.Achievement_NameColumn});
            this.tableAchievementLevels.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AchievementLevels_AchievementLevelFacts", new global::System.Data.DataColumn[] {
                        this.tableAchievementLevels.Achievement_NameColumn,
                        this.tableAchievementLevels.LevelColumn}, new global::System.Data.DataColumn[] {
                        this.tableAchievementLevelFacts.Achievement_NameColumn,
                        this.tableAchievementLevelFacts.Achievement_LevelColumn});
            this.tableAchievementLevelFacts.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AchievementCategories_AdvRankCatReq", new global::System.Data.DataColumn[] {
                        this.tableAchievementCategories.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankCatReqs.RequiredCategory_NameColumn});
            this.tableAdvRankCatReqs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AdvancementRankFacts_AdvRankCatReq", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRankFacts.Advancement_NameColumn,
                        this.tableAdvancementRankFacts.Advancement_RankColumn,
                        this.tableAdvancementRankFacts.FactTypeColumn,
                        this.tableAdvancementRankFacts.FactNoColumn,
                        this.tableAdvancementRankFacts.OptionNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankCatReqs.Advancement_NameColumn,
                        this.tableAdvRankCatReqs.Advancement_RankColumn,
                        this.tableAdvRankCatReqs.FactTypeColumn,
                        this.tableAdvRankCatReqs.FactNoColumn,
                        this.tableAdvRankCatReqs.OptionNoColumn});
            this.tableAdvRankCatReqs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AdvancementRanks_AdvRankAdvReq", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRanks.Advancement_NameColumn,
                        this.tableAdvancementRanks.RankColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAdvReqs.RequiredAdvancement_NameColumn,
                        this.tableAdvRankAdvReqs.RequiredAdvancement_RankColumn});
            this.tableAdvRankAdvReqs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AdvancementRankFacts_AdvRankAdvReq", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRankFacts.Advancement_NameColumn,
                        this.tableAdvancementRankFacts.Advancement_RankColumn,
                        this.tableAdvancementRankFacts.FactTypeColumn,
                        this.tableAdvancementRankFacts.FactNoColumn,
                        this.tableAdvancementRankFacts.OptionNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAdvReqs.Advancement_NameColumn,
                        this.tableAdvRankAdvReqs.Advancement_RankColumn,
                        this.tableAdvRankAdvReqs.FactTypeColumn,
                        this.tableAdvRankAdvReqs.FactNoColumn,
                        this.tableAdvRankAdvReqs.OptionNoColumn});
            this.tableAdvRankAdvReqs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AchievementLevels_AdvRankAchReq", new global::System.Data.DataColumn[] {
                        this.tableAchievementLevels.Achievement_NameColumn,
                        this.tableAchievementLevels.LevelColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAchReqs.RequiredAchievement_NameColumn,
                        this.tableAdvRankAchReqs.RequiredAchievement_LevelColumn});
            this.tableAdvRankAchReqs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AdvancementRankFacts_AdvRankAchReq", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRankFacts.Advancement_NameColumn,
                        this.tableAdvancementRankFacts.Advancement_RankColumn,
                        this.tableAdvancementRankFacts.FactTypeColumn,
                        this.tableAdvancementRankFacts.FactNoColumn,
                        this.tableAdvancementRankFacts.OptionNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAchReqs.Advancement_NameColumn,
                        this.tableAdvRankAchReqs.Advancement_RankColumn,
                        this.tableAdvRankAchReqs.FactTypeColumn,
                        this.tableAdvRankAchReqs.FactNoColumn,
                        this.tableAdvRankAchReqs.OptionNoColumn});
            this.tableAdvRankAchReqs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Abilities_AdvRankAbilReq", new global::System.Data.DataColumn[] {
                        this.tableAbilities.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAbilReqs.RequiredAbility_NameColumn});
            this.tableAdvRankAbilReqs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AdvancementRankFacts_AdvRankAbilReq", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRankFacts.Advancement_NameColumn,
                        this.tableAdvancementRankFacts.Advancement_RankColumn,
                        this.tableAdvancementRankFacts.FactTypeColumn,
                        this.tableAdvancementRankFacts.FactNoColumn,
                        this.tableAdvancementRankFacts.OptionNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAbilReqs.Advancement_NameColumn,
                        this.tableAdvRankAbilReqs.Advancement_RankColumn,
                        this.tableAdvRankAbilReqs.FactTypeColumn,
                        this.tableAdvRankAbilReqs.FactNoColumn,
                        this.tableAdvRankAbilReqs.OptionNoColumn});
            this.tableAdvRankAbilReqs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Abilities_AdvRankAbilBonus", new global::System.Data.DataColumn[] {
                        this.tableAbilities.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAbilBonuses.BonusAbilityNameColumn});
            this.tableAdvRankAbilBonuses.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AdvancementRankFacts_AdvRankAbilBonus", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRankFacts.Advancement_NameColumn,
                        this.tableAdvancementRankFacts.Advancement_RankColumn,
                        this.tableAdvancementRankFacts.FactTypeColumn,
                        this.tableAdvancementRankFacts.FactNoColumn,
                        this.tableAdvancementRankFacts.OptionNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAbilBonuses.Advancement_NameColumn,
                        this.tableAdvRankAbilBonuses.Advancement_RankColumn,
                        this.tableAdvRankAbilBonuses.FactTypeColumn,
                        this.tableAdvRankAbilBonuses.FactNoColumn,
                        this.tableAdvRankAbilBonuses.OptionNoColumn});
            this.tableAdvRankAbilBonuses.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AdvancementRanks_AdvancementRankFactStrings", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRanks.Advancement_NameColumn,
                        this.tableAdvancementRanks.RankColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvancementRankFactStrings.Advancement_NameColumn,
                        this.tableAdvancementRankFactStrings.Advancement_RankColumn});
            this.tableAdvancementRankFactStrings.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Advancements_Feats", new global::System.Data.DataColumn[] {
                        this.tableAdvancements.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeats.Advancement_NameColumn});
            this.tableFeats.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Roles_Feats", new global::System.Data.DataColumn[] {
                        this.tableRoles.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeats.Role_NameColumn});
            this.tableFeats.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Feats_ActiveFeats", new global::System.Data.DataColumn[] {
                        this.tableFeats.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableActiveFeats.Feat_NameColumn});
            this.tableActiveFeats.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_WeaponCategories_ActiveFeats", new global::System.Data.DataColumn[] {
                        this.tableWeaponCategories.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableActiveFeats.WeaponCategory_NameColumn});
            this.tableActiveFeats.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_ActiveFeats_StandardAttacks", new global::System.Data.DataColumn[] {
                        this.tableActiveFeats.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableStandardAttacks.Feat_NameColumn});
            this.tableStandardAttacks.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AttackForms_StandardAttacks", new global::System.Data.DataColumn[] {
                        this.tableAttackForms.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableStandardAttacks.AttackForm_NameColumn});
            this.tableStandardAttacks.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_SpecificWeapons_StandardAttacks", new global::System.Data.DataColumn[] {
                        this.tableSpecificWeapons.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableStandardAttacks.SpecificWeapon_NameColumn});
            this.tableStandardAttacks.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_ActiveFeats_PowerAttacks", new global::System.Data.DataColumn[] {
                        this.tableActiveFeats.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tablePowerAttacks.Feat_NameColumn});
            this.tablePowerAttacks.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AttackBonuses_PowerAttacks", new global::System.Data.DataColumn[] {
                        this.tableAttackBonuses.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tablePowerAttacks.AttackBonus_NameColumn});
            this.tablePowerAttacks.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_StandardAttacks_Cantrips", new global::System.Data.DataColumn[] {
                        this.tableStandardAttacks.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableCantrips.Feat_NameColumn});
            this.tableCantrips.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Schools_Cantrips", new global::System.Data.DataColumn[] {
                        this.tableSchools.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableCantrips.School_NameColumn});
            this.tableCantrips.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Feats_ChanneledFeats", new global::System.Data.DataColumn[] {
                        this.tableFeats.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableChanneledFeats.Feat_NameColumn});
            this.tableChanneledFeats.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_EffectChannels_ChanneledFeats", new global::System.Data.DataColumn[] {
                        this.tableEffectChannels.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableChanneledFeats.Channel_NameColumn});
            this.tableChanneledFeats.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_ChanneledFeats_AttackBonuses", new global::System.Data.DataColumn[] {
                        this.tableChanneledFeats.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableAttackBonuses.Feat_NameColumn});
            this.tableAttackBonuses.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Roles_RoleAchievements", new global::System.Data.DataColumn[] {
                        this.tableRoles.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableRoleAchievements.Role_NameColumn});
            this.tableRoleAchievements.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Achievements_RoleAchievements", new global::System.Data.DataColumn[] {
                        this.tableAchievements.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableRoleAchievements.Achievement_NameColumn});
            this.tableRoleAchievements.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Achievements_CraftAchievements", new global::System.Data.DataColumn[] {
                        this.tableAchievements.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableCraftAchievements.Achievement_NameColumn});
            this.tableCraftAchievements.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_CraftAchievements_CraftingAchievement", new global::System.Data.DataColumn[] {
                        this.tableCraftAchievements.Achievement_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableCraftingAchievements.Achievement_NameColumn});
            this.tableCraftingAchievements.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_CraftingSkills_CraftingAchievement", new global::System.Data.DataColumn[] {
                        this.tableCraftingSkills.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableCraftingAchievements.CraftingSkill_NameColumn});
            this.tableCraftingAchievements.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_ChanneledFeats_CraftingSkills", new global::System.Data.DataColumn[] {
                        this.tableChanneledFeats.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableCraftingSkills.Feat_NameColumn});
            this.tableCraftingSkills.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_ChanneledFeats_RefiningSkills", new global::System.Data.DataColumn[] {
                        this.tableChanneledFeats.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableRefiningSkills.Feat_NameColumn});
            this.tableRefiningSkills.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_CraftAchievements_RefiningAchievement", new global::System.Data.DataColumn[] {
                        this.tableCraftAchievements.Achievement_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableRefiningAchievements.Achievement_NameColumn});
            this.tableRefiningAchievements.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_RefiningSkills_RefiningAchievement", new global::System.Data.DataColumn[] {
                        this.tableRefiningSkills.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableRefiningAchievements.RefiningSkill_NameColumn});
            this.tableRefiningAchievements.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AchievementLevels_CounterAchievementLevels", new global::System.Data.DataColumn[] {
                        this.tableAchievementLevels.Achievement_NameColumn,
                        this.tableAchievementLevels.LevelColumn}, new global::System.Data.DataColumn[] {
                        this.tableCounterAchievementLevels.Achievement_NameColumn,
                        this.tableCounterAchievementLevels.Achievement_LevelColumn});
            this.tableCounterAchievementLevels.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AchievementLevels_CraftAchievementLevels", new global::System.Data.DataColumn[] {
                        this.tableAchievementLevels.Achievement_NameColumn,
                        this.tableAchievementLevels.LevelColumn}, new global::System.Data.DataColumn[] {
                        this.tableCraftAchievementLevels.Achievement_NameColumn,
                        this.tableCraftAchievementLevels.Achievement_LevelColumn});
            this.tableCraftAchievementLevels.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AchievementLevelFacts_AchLevelCatBonuses", new global::System.Data.DataColumn[] {
                        this.tableAchievementLevelFacts.Achievement_NameColumn,
                        this.tableAchievementLevelFacts.Achievement_LevelColumn,
                        this.tableAchievementLevelFacts.FactTypeColumn,
                        this.tableAchievementLevelFacts.FactNoColumn,
                        this.tableAchievementLevelFacts.OptionNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableAchLevelCatBonuses.Achievement_NameColumn,
                        this.tableAchLevelCatBonuses.Achievement_LevelColumn,
                        this.tableAchLevelCatBonuses.FactTypeColumn,
                        this.tableAchLevelCatBonuses.FactNoColumn,
                        this.tableAchLevelCatBonuses.OptionNoColumn});
            this.tableAchLevelCatBonuses.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AchievementCategories_AchLevelCatBonuses", new global::System.Data.DataColumn[] {
                        this.tableAchievementCategories.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableAchLevelCatBonuses.BonusCategory_NameColumn});
            this.tableAchLevelCatBonuses.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AchievementLevelFacts_AchLevelAdvReqs", new global::System.Data.DataColumn[] {
                        this.tableAchievementLevelFacts.Achievement_NameColumn,
                        this.tableAchievementLevelFacts.Achievement_LevelColumn,
                        this.tableAchievementLevelFacts.FactTypeColumn,
                        this.tableAchievementLevelFacts.FactNoColumn,
                        this.tableAchievementLevelFacts.OptionNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableAchLevelAdvReqs.Achievement_NameColumn,
                        this.tableAchLevelAdvReqs.Achievement_LevelColumn,
                        this.tableAchLevelAdvReqs.FactTypeColumn,
                        this.tableAchLevelAdvReqs.FactNoColumn,
                        this.tableAchLevelAdvReqs.OptionNoColumn});
            this.tableAchLevelAdvReqs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AdvancementRanks_AchLevelAdvReqs", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRanks.Advancement_NameColumn,
                        this.tableAdvancementRanks.RankColumn}, new global::System.Data.DataColumn[] {
                        this.tableAchLevelAdvReqs.RequiredAdvancement_NameColumn,
                        this.tableAchLevelAdvReqs.RequiredAdvancement_RankColumn});
            this.tableAchLevelAdvReqs.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AchievementLevels_AchievementLevelFactStrings", new global::System.Data.DataColumn[] {
                        this.tableAchievementLevels.Achievement_NameColumn,
                        this.tableAchievementLevels.LevelColumn}, new global::System.Data.DataColumn[] {
                        this.tableAchievementLevelFactStrings.Achievement_NameColumn,
                        this.tableAchievementLevelFactStrings.Achievement_LevelColumn});
            this.tableAchievementLevelFactStrings.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Feats_FeatRanks", new global::System.Data.DataColumn[] {
                        this.tableFeats.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRanks.Feat_NameColumn});
            this.tableFeatRanks.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Feats_FeatRanks1", new global::System.Data.DataColumn[] {
                        this.tableFeats.NameColumn,
                        this.tableFeats.Advancement_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRanks.Feat_NameColumn,
                        this.tableFeatRanks.Advancement_NameColumn});
            this.tableFeatRanks.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_AdvancementRanks_FeatRanks", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRanks.Advancement_NameColumn,
                        this.tableAdvancementRanks.RankColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRanks.Advancement_NameColumn,
                        this.tableFeatRanks.RankColumn});
            this.tableFeatRanks.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Effects_EffectDescriptions", new global::System.Data.DataColumn[] {
                        this.tableEffects.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableEffectDescriptions.Effect_NameColumn});
            this.tableEffectDescriptions.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Conditionals_EffectDescriptions", new global::System.Data.DataColumn[] {
                        this.tableConditionals.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableEffectDescriptions.Conditional_NameColumn});
            this.tableEffectDescriptions.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_EffectChannels_EffectTerms", new global::System.Data.DataColumn[] {
                        this.tableEffectChannels.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableEffectTerms.Channel_NameColumn});
            this.tableEffectTerms.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_EffectTerms_Effects", new global::System.Data.DataColumn[] {
                        this.tableEffectTerms.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableEffects.EffectTerm_NameColumn});
            this.tableEffects.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Conditionals_EffectConditionals", new global::System.Data.DataColumn[] {
                        this.tableConditionals.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableEffectConditionals.Conditional_NameColumn});
            this.tableEffectConditionals.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Effects_EffectConditionals", new global::System.Data.DataColumn[] {
                        this.tableEffects.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableEffectConditionals.Conditional_NameColumn});
            this.tableEffectConditionals.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Feats_FeatFacts", new global::System.Data.DataColumn[] {
                        this.tableFeats.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatFacts.Feat_NameColumn});
            this.tableFeatFacts.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FeatRanks_FeatRankFacts", new global::System.Data.DataColumn[] {
                        this.tableFeatRanks.Feat_NameColumn,
                        this.tableFeatRanks.RankColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRankFacts.Feat_NameColumn,
                        this.tableFeatRankFacts.Feat_RankColumn});
            this.tableFeatRankFacts.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_EffectDescriptions_FeatEffects", new global::System.Data.DataColumn[] {
                        this.tableEffectDescriptions.TextColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatEffects.EffectDescription_TextColumn});
            this.tableFeatEffects.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FeatFacts_FeatEffects", new global::System.Data.DataColumn[] {
                        this.tableFeatFacts.Feat_NameColumn,
                        this.tableFeatFacts.FactTypeColumn,
                        this.tableFeatFacts.FactNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatEffects.Feat_NameColumn,
                        this.tableFeatEffects.FactTypeColumn,
                        this.tableFeatEffects.FactNoColumn});
            this.tableFeatEffects.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_EffectDescriptions_FeatRankEffects", new global::System.Data.DataColumn[] {
                        this.tableEffectDescriptions.TextColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRankEffects.EffectDescription_TextColumn});
            this.tableFeatRankEffects.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FeatRankFacts_FeatRankEffects", new global::System.Data.DataColumn[] {
                        this.tableFeatRankFacts.Feat_NameColumn,
                        this.tableFeatRankFacts.Feat_RankColumn,
                        this.tableFeatRankFacts.FactTypeColumn,
                        this.tableFeatRankFacts.FactNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRankEffects.Feat_NameColumn,
                        this.tableFeatRankEffects.Feat_RankColumn,
                        this.tableFeatRankEffects.FactTypeColumn,
                        this.tableFeatRankEffects.FactNoColumn});
            this.tableFeatRankEffects.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Keywords_FeatRankKeyword", new global::System.Data.DataColumn[] {
                        this.tableKeywords.Type_NameColumn,
                        this.tableKeywords.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRankKeyword.KeywordType_NameColumn,
                        this.tableFeatRankKeyword.Keyword_NameColumn});
            this.tableFeatRankKeyword.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_FeatRankFacts_FeatRankKeyword", new global::System.Data.DataColumn[] {
                        this.tableFeatRankFacts.Feat_NameColumn,
                        this.tableFeatRankFacts.Feat_RankColumn,
                        this.tableFeatRankFacts.FactTypeColumn,
                        this.tableFeatRankFacts.FactNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRankKeyword.Feat_NameColumn,
                        this.tableFeatRankKeyword.Feat_RankColumn,
                        this.tableFeatRankKeyword.FactTypeColumn,
                        this.tableFeatRankKeyword.FactNoColumn});
            this.tableFeatRankKeyword.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_KeywordValues_Keywords", new global::System.Data.DataColumn[] {
                        this.tableKeywordValues.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableKeywords.Value_NameColumn});
            this.tableKeywords.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_KeywordTypes_Keywords", new global::System.Data.DataColumn[] {
                        this.tableKeywordTypes.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableKeywords.Type_NameColumn});
            this.tableKeywords.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationFK_Advancements_AdvancementRanks = new global::System.Data.DataRelation("FK_Advancements_AdvancementRanks", new global::System.Data.DataColumn[] {
                        this.tableAdvancements.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvancementRanks.Advancement_NameColumn}, false);
            this.Relations.Add(this.relationFK_Advancements_AdvancementRanks);
            this.relationFK_AdvancementRanks_AdvancementRankFacts = new global::System.Data.DataRelation("FK_AdvancementRanks_AdvancementRankFacts", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRanks.Advancement_NameColumn,
                        this.tableAdvancementRanks.RankColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvancementRankFacts.Advancement_NameColumn,
                        this.tableAdvancementRankFacts.Advancement_RankColumn}, false);
            this.Relations.Add(this.relationFK_AdvancementRanks_AdvancementRankFacts);
            this.relationFK_Achievements_AchievementLevels = new global::System.Data.DataRelation("FK_Achievements_AchievementLevels", new global::System.Data.DataColumn[] {
                        this.tableAchievements.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableAchievementLevels.Achievement_NameColumn}, false);
            this.Relations.Add(this.relationFK_Achievements_AchievementLevels);
            this.relationFK_AchievementLevels_AchievementLevelFacts = new global::System.Data.DataRelation("FK_AchievementLevels_AchievementLevelFacts", new global::System.Data.DataColumn[] {
                        this.tableAchievementLevels.Achievement_NameColumn,
                        this.tableAchievementLevels.LevelColumn}, new global::System.Data.DataColumn[] {
                        this.tableAchievementLevelFacts.Achievement_NameColumn,
                        this.tableAchievementLevelFacts.Achievement_LevelColumn}, false);
            this.Relations.Add(this.relationFK_AchievementLevels_AchievementLevelFacts);
            this.relationFK_AchievementCategories_AdvRankCatReq = new global::System.Data.DataRelation("FK_AchievementCategories_AdvRankCatReq", new global::System.Data.DataColumn[] {
                        this.tableAchievementCategories.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankCatReqs.RequiredCategory_NameColumn}, false);
            this.Relations.Add(this.relationFK_AchievementCategories_AdvRankCatReq);
            this.relationFK_AdvancementRankFacts_AdvRankCatReq = new global::System.Data.DataRelation("FK_AdvancementRankFacts_AdvRankCatReq", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRankFacts.Advancement_NameColumn,
                        this.tableAdvancementRankFacts.Advancement_RankColumn,
                        this.tableAdvancementRankFacts.FactTypeColumn,
                        this.tableAdvancementRankFacts.FactNoColumn,
                        this.tableAdvancementRankFacts.OptionNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankCatReqs.Advancement_NameColumn,
                        this.tableAdvRankCatReqs.Advancement_RankColumn,
                        this.tableAdvRankCatReqs.FactTypeColumn,
                        this.tableAdvRankCatReqs.FactNoColumn,
                        this.tableAdvRankCatReqs.OptionNoColumn}, false);
            this.Relations.Add(this.relationFK_AdvancementRankFacts_AdvRankCatReq);
            this.relationFK_AdvancementRanks_AdvRankAdvReq = new global::System.Data.DataRelation("FK_AdvancementRanks_AdvRankAdvReq", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRanks.Advancement_NameColumn,
                        this.tableAdvancementRanks.RankColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAdvReqs.RequiredAdvancement_NameColumn,
                        this.tableAdvRankAdvReqs.RequiredAdvancement_RankColumn}, false);
            this.Relations.Add(this.relationFK_AdvancementRanks_AdvRankAdvReq);
            this.relationFK_AdvancementRankFacts_AdvRankAdvReq = new global::System.Data.DataRelation("FK_AdvancementRankFacts_AdvRankAdvReq", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRankFacts.Advancement_NameColumn,
                        this.tableAdvancementRankFacts.Advancement_RankColumn,
                        this.tableAdvancementRankFacts.FactTypeColumn,
                        this.tableAdvancementRankFacts.FactNoColumn,
                        this.tableAdvancementRankFacts.OptionNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAdvReqs.Advancement_NameColumn,
                        this.tableAdvRankAdvReqs.Advancement_RankColumn,
                        this.tableAdvRankAdvReqs.FactTypeColumn,
                        this.tableAdvRankAdvReqs.FactNoColumn,
                        this.tableAdvRankAdvReqs.OptionNoColumn}, false);
            this.Relations.Add(this.relationFK_AdvancementRankFacts_AdvRankAdvReq);
            this.relationFK_AchievementLevels_AdvRankAchReq = new global::System.Data.DataRelation("FK_AchievementLevels_AdvRankAchReq", new global::System.Data.DataColumn[] {
                        this.tableAchievementLevels.Achievement_NameColumn,
                        this.tableAchievementLevels.LevelColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAchReqs.RequiredAchievement_NameColumn,
                        this.tableAdvRankAchReqs.RequiredAchievement_LevelColumn}, false);
            this.Relations.Add(this.relationFK_AchievementLevels_AdvRankAchReq);
            this.relationFK_AdvancementRankFacts_AdvRankAchReq = new global::System.Data.DataRelation("FK_AdvancementRankFacts_AdvRankAchReq", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRankFacts.Advancement_NameColumn,
                        this.tableAdvancementRankFacts.Advancement_RankColumn,
                        this.tableAdvancementRankFacts.FactTypeColumn,
                        this.tableAdvancementRankFacts.FactNoColumn,
                        this.tableAdvancementRankFacts.OptionNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAchReqs.Advancement_NameColumn,
                        this.tableAdvRankAchReqs.Advancement_RankColumn,
                        this.tableAdvRankAchReqs.FactTypeColumn,
                        this.tableAdvRankAchReqs.FactNoColumn,
                        this.tableAdvRankAchReqs.OptionNoColumn}, false);
            this.Relations.Add(this.relationFK_AdvancementRankFacts_AdvRankAchReq);
            this.relationFK_Abilities_AdvRankAbilReq = new global::System.Data.DataRelation("FK_Abilities_AdvRankAbilReq", new global::System.Data.DataColumn[] {
                        this.tableAbilities.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAbilReqs.RequiredAbility_NameColumn}, false);
            this.Relations.Add(this.relationFK_Abilities_AdvRankAbilReq);
            this.relationFK_AdvancementRankFacts_AdvRankAbilReq = new global::System.Data.DataRelation("FK_AdvancementRankFacts_AdvRankAbilReq", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRankFacts.Advancement_NameColumn,
                        this.tableAdvancementRankFacts.Advancement_RankColumn,
                        this.tableAdvancementRankFacts.FactTypeColumn,
                        this.tableAdvancementRankFacts.FactNoColumn,
                        this.tableAdvancementRankFacts.OptionNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAbilReqs.Advancement_NameColumn,
                        this.tableAdvRankAbilReqs.Advancement_RankColumn,
                        this.tableAdvRankAbilReqs.FactTypeColumn,
                        this.tableAdvRankAbilReqs.FactNoColumn,
                        this.tableAdvRankAbilReqs.OptionNoColumn}, false);
            this.Relations.Add(this.relationFK_AdvancementRankFacts_AdvRankAbilReq);
            this.relationFK_Abilities_AdvRankAbilBonus = new global::System.Data.DataRelation("FK_Abilities_AdvRankAbilBonus", new global::System.Data.DataColumn[] {
                        this.tableAbilities.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAbilBonuses.BonusAbilityNameColumn}, false);
            this.Relations.Add(this.relationFK_Abilities_AdvRankAbilBonus);
            this.relationFK_AdvancementRankFacts_AdvRankAbilBonus = new global::System.Data.DataRelation("FK_AdvancementRankFacts_AdvRankAbilBonus", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRankFacts.Advancement_NameColumn,
                        this.tableAdvancementRankFacts.Advancement_RankColumn,
                        this.tableAdvancementRankFacts.FactTypeColumn,
                        this.tableAdvancementRankFacts.FactNoColumn,
                        this.tableAdvancementRankFacts.OptionNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvRankAbilBonuses.Advancement_NameColumn,
                        this.tableAdvRankAbilBonuses.Advancement_RankColumn,
                        this.tableAdvRankAbilBonuses.FactTypeColumn,
                        this.tableAdvRankAbilBonuses.FactNoColumn,
                        this.tableAdvRankAbilBonuses.OptionNoColumn}, false);
            this.Relations.Add(this.relationFK_AdvancementRankFacts_AdvRankAbilBonus);
            this.relationFK_AdvancementRanks_AdvancementRankFactStrings = new global::System.Data.DataRelation("FK_AdvancementRanks_AdvancementRankFactStrings", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRanks.Advancement_NameColumn,
                        this.tableAdvancementRanks.RankColumn}, new global::System.Data.DataColumn[] {
                        this.tableAdvancementRankFactStrings.Advancement_NameColumn,
                        this.tableAdvancementRankFactStrings.Advancement_RankColumn}, false);
            this.Relations.Add(this.relationFK_AdvancementRanks_AdvancementRankFactStrings);
            this.relationFK_Advancements_Feats = new global::System.Data.DataRelation("FK_Advancements_Feats", new global::System.Data.DataColumn[] {
                        this.tableAdvancements.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeats.Advancement_NameColumn}, false);
            this.Relations.Add(this.relationFK_Advancements_Feats);
            this.relationFK_Roles_Feats = new global::System.Data.DataRelation("FK_Roles_Feats", new global::System.Data.DataColumn[] {
                        this.tableRoles.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeats.Role_NameColumn}, false);
            this.Relations.Add(this.relationFK_Roles_Feats);
            this.relationFK_Feats_ActiveFeats = new global::System.Data.DataRelation("FK_Feats_ActiveFeats", new global::System.Data.DataColumn[] {
                        this.tableFeats.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableActiveFeats.Feat_NameColumn}, false);
            this.Relations.Add(this.relationFK_Feats_ActiveFeats);
            this.relationFK_WeaponCategories_ActiveFeats = new global::System.Data.DataRelation("FK_WeaponCategories_ActiveFeats", new global::System.Data.DataColumn[] {
                        this.tableWeaponCategories.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableActiveFeats.WeaponCategory_NameColumn}, false);
            this.Relations.Add(this.relationFK_WeaponCategories_ActiveFeats);
            this.relationFK_ActiveFeats_StandardAttacks = new global::System.Data.DataRelation("FK_ActiveFeats_StandardAttacks", new global::System.Data.DataColumn[] {
                        this.tableActiveFeats.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableStandardAttacks.Feat_NameColumn}, false);
            this.Relations.Add(this.relationFK_ActiveFeats_StandardAttacks);
            this.relationFK_AttackForms_StandardAttacks = new global::System.Data.DataRelation("FK_AttackForms_StandardAttacks", new global::System.Data.DataColumn[] {
                        this.tableAttackForms.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableStandardAttacks.AttackForm_NameColumn}, false);
            this.Relations.Add(this.relationFK_AttackForms_StandardAttacks);
            this.relationFK_SpecificWeapons_StandardAttacks = new global::System.Data.DataRelation("FK_SpecificWeapons_StandardAttacks", new global::System.Data.DataColumn[] {
                        this.tableSpecificWeapons.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableStandardAttacks.SpecificWeapon_NameColumn}, false);
            this.Relations.Add(this.relationFK_SpecificWeapons_StandardAttacks);
            this.relationFK_ActiveFeats_PowerAttacks = new global::System.Data.DataRelation("FK_ActiveFeats_PowerAttacks", new global::System.Data.DataColumn[] {
                        this.tableActiveFeats.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tablePowerAttacks.Feat_NameColumn}, false);
            this.Relations.Add(this.relationFK_ActiveFeats_PowerAttacks);
            this.relationFK_AttackBonuses_PowerAttacks = new global::System.Data.DataRelation("FK_AttackBonuses_PowerAttacks", new global::System.Data.DataColumn[] {
                        this.tableAttackBonuses.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tablePowerAttacks.AttackBonus_NameColumn}, false);
            this.Relations.Add(this.relationFK_AttackBonuses_PowerAttacks);
            this.relationFK_StandardAttacks_Cantrips = new global::System.Data.DataRelation("FK_StandardAttacks_Cantrips", new global::System.Data.DataColumn[] {
                        this.tableStandardAttacks.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableCantrips.Feat_NameColumn}, false);
            this.Relations.Add(this.relationFK_StandardAttacks_Cantrips);
            this.relationFK_Schools_Cantrips = new global::System.Data.DataRelation("FK_Schools_Cantrips", new global::System.Data.DataColumn[] {
                        this.tableSchools.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableCantrips.School_NameColumn}, false);
            this.Relations.Add(this.relationFK_Schools_Cantrips);
            this.relationFK_Feats_ChanneledFeats = new global::System.Data.DataRelation("FK_Feats_ChanneledFeats", new global::System.Data.DataColumn[] {
                        this.tableFeats.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableChanneledFeats.Feat_NameColumn}, false);
            this.Relations.Add(this.relationFK_Feats_ChanneledFeats);
            this.relationFK_EffectChannels_ChanneledFeats = new global::System.Data.DataRelation("FK_EffectChannels_ChanneledFeats", new global::System.Data.DataColumn[] {
                        this.tableEffectChannels.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableChanneledFeats.Channel_NameColumn}, false);
            this.Relations.Add(this.relationFK_EffectChannels_ChanneledFeats);
            this.relationFK_ChanneledFeats_AttackBonuses = new global::System.Data.DataRelation("FK_ChanneledFeats_AttackBonuses", new global::System.Data.DataColumn[] {
                        this.tableChanneledFeats.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableAttackBonuses.Feat_NameColumn}, false);
            this.Relations.Add(this.relationFK_ChanneledFeats_AttackBonuses);
            this.relationFK_Roles_RoleAchievements = new global::System.Data.DataRelation("FK_Roles_RoleAchievements", new global::System.Data.DataColumn[] {
                        this.tableRoles.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableRoleAchievements.Role_NameColumn}, false);
            this.Relations.Add(this.relationFK_Roles_RoleAchievements);
            this.relationFK_Achievements_RoleAchievements = new global::System.Data.DataRelation("FK_Achievements_RoleAchievements", new global::System.Data.DataColumn[] {
                        this.tableAchievements.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableRoleAchievements.Achievement_NameColumn}, false);
            this.Relations.Add(this.relationFK_Achievements_RoleAchievements);
            this.relationFK_Achievements_CraftAchievements = new global::System.Data.DataRelation("FK_Achievements_CraftAchievements", new global::System.Data.DataColumn[] {
                        this.tableAchievements.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableCraftAchievements.Achievement_NameColumn}, false);
            this.Relations.Add(this.relationFK_Achievements_CraftAchievements);
            this.relationFK_CraftAchievements_CraftingAchievement = new global::System.Data.DataRelation("FK_CraftAchievements_CraftingAchievement", new global::System.Data.DataColumn[] {
                        this.tableCraftAchievements.Achievement_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableCraftingAchievements.Achievement_NameColumn}, false);
            this.Relations.Add(this.relationFK_CraftAchievements_CraftingAchievement);
            this.relationFK_CraftingSkills_CraftingAchievement = new global::System.Data.DataRelation("FK_CraftingSkills_CraftingAchievement", new global::System.Data.DataColumn[] {
                        this.tableCraftingSkills.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableCraftingAchievements.CraftingSkill_NameColumn}, false);
            this.Relations.Add(this.relationFK_CraftingSkills_CraftingAchievement);
            this.relationFK_ChanneledFeats_CraftingSkills = new global::System.Data.DataRelation("FK_ChanneledFeats_CraftingSkills", new global::System.Data.DataColumn[] {
                        this.tableChanneledFeats.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableCraftingSkills.Feat_NameColumn}, false);
            this.Relations.Add(this.relationFK_ChanneledFeats_CraftingSkills);
            this.relationFK_ChanneledFeats_RefiningSkills = new global::System.Data.DataRelation("FK_ChanneledFeats_RefiningSkills", new global::System.Data.DataColumn[] {
                        this.tableChanneledFeats.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableRefiningSkills.Feat_NameColumn}, false);
            this.Relations.Add(this.relationFK_ChanneledFeats_RefiningSkills);
            this.relationFK_CraftAchievements_RefiningAchievement = new global::System.Data.DataRelation("FK_CraftAchievements_RefiningAchievement", new global::System.Data.DataColumn[] {
                        this.tableCraftAchievements.Achievement_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableRefiningAchievements.Achievement_NameColumn}, false);
            this.Relations.Add(this.relationFK_CraftAchievements_RefiningAchievement);
            this.relationFK_RefiningSkills_RefiningAchievement = new global::System.Data.DataRelation("FK_RefiningSkills_RefiningAchievement", new global::System.Data.DataColumn[] {
                        this.tableRefiningSkills.Feat_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableRefiningAchievements.RefiningSkill_NameColumn}, false);
            this.Relations.Add(this.relationFK_RefiningSkills_RefiningAchievement);
            this.relationFK_AchievementLevels_CounterAchievementLevels = new global::System.Data.DataRelation("FK_AchievementLevels_CounterAchievementLevels", new global::System.Data.DataColumn[] {
                        this.tableAchievementLevels.Achievement_NameColumn,
                        this.tableAchievementLevels.LevelColumn}, new global::System.Data.DataColumn[] {
                        this.tableCounterAchievementLevels.Achievement_NameColumn,
                        this.tableCounterAchievementLevels.Achievement_LevelColumn}, false);
            this.Relations.Add(this.relationFK_AchievementLevels_CounterAchievementLevels);
            this.relationFK_AchievementLevels_CraftAchievementLevels = new global::System.Data.DataRelation("FK_AchievementLevels_CraftAchievementLevels", new global::System.Data.DataColumn[] {
                        this.tableAchievementLevels.Achievement_NameColumn,
                        this.tableAchievementLevels.LevelColumn}, new global::System.Data.DataColumn[] {
                        this.tableCraftAchievementLevels.Achievement_NameColumn,
                        this.tableCraftAchievementLevels.Achievement_LevelColumn}, false);
            this.Relations.Add(this.relationFK_AchievementLevels_CraftAchievementLevels);
            this.relationFK_AchievementLevelFacts_AchLevelCatBonuses = new global::System.Data.DataRelation("FK_AchievementLevelFacts_AchLevelCatBonuses", new global::System.Data.DataColumn[] {
                        this.tableAchievementLevelFacts.Achievement_NameColumn,
                        this.tableAchievementLevelFacts.Achievement_LevelColumn,
                        this.tableAchievementLevelFacts.FactTypeColumn,
                        this.tableAchievementLevelFacts.FactNoColumn,
                        this.tableAchievementLevelFacts.OptionNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableAchLevelCatBonuses.Achievement_NameColumn,
                        this.tableAchLevelCatBonuses.Achievement_LevelColumn,
                        this.tableAchLevelCatBonuses.FactTypeColumn,
                        this.tableAchLevelCatBonuses.FactNoColumn,
                        this.tableAchLevelCatBonuses.OptionNoColumn}, false);
            this.Relations.Add(this.relationFK_AchievementLevelFacts_AchLevelCatBonuses);
            this.relationFK_AchievementCategories_AchLevelCatBonuses = new global::System.Data.DataRelation("FK_AchievementCategories_AchLevelCatBonuses", new global::System.Data.DataColumn[] {
                        this.tableAchievementCategories.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableAchLevelCatBonuses.BonusCategory_NameColumn}, false);
            this.Relations.Add(this.relationFK_AchievementCategories_AchLevelCatBonuses);
            this.relationFK_AchievementLevelFacts_AchLevelAdvReqs = new global::System.Data.DataRelation("FK_AchievementLevelFacts_AchLevelAdvReqs", new global::System.Data.DataColumn[] {
                        this.tableAchievementLevelFacts.Achievement_NameColumn,
                        this.tableAchievementLevelFacts.Achievement_LevelColumn,
                        this.tableAchievementLevelFacts.FactTypeColumn,
                        this.tableAchievementLevelFacts.FactNoColumn,
                        this.tableAchievementLevelFacts.OptionNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableAchLevelAdvReqs.Achievement_NameColumn,
                        this.tableAchLevelAdvReqs.Achievement_LevelColumn,
                        this.tableAchLevelAdvReqs.FactTypeColumn,
                        this.tableAchLevelAdvReqs.FactNoColumn,
                        this.tableAchLevelAdvReqs.OptionNoColumn}, false);
            this.Relations.Add(this.relationFK_AchievementLevelFacts_AchLevelAdvReqs);
            this.relationFK_AdvancementRanks_AchLevelAdvReqs = new global::System.Data.DataRelation("FK_AdvancementRanks_AchLevelAdvReqs", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRanks.Advancement_NameColumn,
                        this.tableAdvancementRanks.RankColumn}, new global::System.Data.DataColumn[] {
                        this.tableAchLevelAdvReqs.RequiredAdvancement_NameColumn,
                        this.tableAchLevelAdvReqs.RequiredAdvancement_RankColumn}, false);
            this.Relations.Add(this.relationFK_AdvancementRanks_AchLevelAdvReqs);
            this.relationFK_AchievementLevels_AchievementLevelFactStrings = new global::System.Data.DataRelation("FK_AchievementLevels_AchievementLevelFactStrings", new global::System.Data.DataColumn[] {
                        this.tableAchievementLevels.Achievement_NameColumn,
                        this.tableAchievementLevels.LevelColumn}, new global::System.Data.DataColumn[] {
                        this.tableAchievementLevelFactStrings.Achievement_NameColumn,
                        this.tableAchievementLevelFactStrings.Achievement_LevelColumn}, false);
            this.Relations.Add(this.relationFK_AchievementLevels_AchievementLevelFactStrings);
            this.relationFK_Feats_FeatRanks = new global::System.Data.DataRelation("FK_Feats_FeatRanks", new global::System.Data.DataColumn[] {
                        this.tableFeats.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRanks.Feat_NameColumn}, false);
            this.Relations.Add(this.relationFK_Feats_FeatRanks);
            this.relationFK_Feats_FeatRanks1 = new global::System.Data.DataRelation("FK_Feats_FeatRanks1", new global::System.Data.DataColumn[] {
                        this.tableFeats.NameColumn,
                        this.tableFeats.Advancement_NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRanks.Feat_NameColumn,
                        this.tableFeatRanks.Advancement_NameColumn}, false);
            this.Relations.Add(this.relationFK_Feats_FeatRanks1);
            this.relationFK_AdvancementRanks_FeatRanks = new global::System.Data.DataRelation("FK_AdvancementRanks_FeatRanks", new global::System.Data.DataColumn[] {
                        this.tableAdvancementRanks.Advancement_NameColumn,
                        this.tableAdvancementRanks.RankColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRanks.Advancement_NameColumn,
                        this.tableFeatRanks.RankColumn}, false);
            this.Relations.Add(this.relationFK_AdvancementRanks_FeatRanks);
            this.relationFK_Effects_EffectDescriptions = new global::System.Data.DataRelation("FK_Effects_EffectDescriptions", new global::System.Data.DataColumn[] {
                        this.tableEffects.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableEffectDescriptions.Effect_NameColumn}, false);
            this.Relations.Add(this.relationFK_Effects_EffectDescriptions);
            this.relationFK_Conditionals_EffectDescriptions = new global::System.Data.DataRelation("FK_Conditionals_EffectDescriptions", new global::System.Data.DataColumn[] {
                        this.tableConditionals.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableEffectDescriptions.Conditional_NameColumn}, false);
            this.Relations.Add(this.relationFK_Conditionals_EffectDescriptions);
            this.relationFK_EffectChannels_EffectTerms = new global::System.Data.DataRelation("FK_EffectChannels_EffectTerms", new global::System.Data.DataColumn[] {
                        this.tableEffectChannels.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableEffectTerms.Channel_NameColumn}, false);
            this.Relations.Add(this.relationFK_EffectChannels_EffectTerms);
            this.relationFK_EffectTerms_Effects = new global::System.Data.DataRelation("FK_EffectTerms_Effects", new global::System.Data.DataColumn[] {
                        this.tableEffectTerms.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableEffects.EffectTerm_NameColumn}, false);
            this.Relations.Add(this.relationFK_EffectTerms_Effects);
            this.relationFK_Conditionals_EffectConditionals = new global::System.Data.DataRelation("FK_Conditionals_EffectConditionals", new global::System.Data.DataColumn[] {
                        this.tableConditionals.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableEffectConditionals.Conditional_NameColumn}, false);
            this.Relations.Add(this.relationFK_Conditionals_EffectConditionals);
            this.relationFK_Effects_EffectConditionals = new global::System.Data.DataRelation("FK_Effects_EffectConditionals", new global::System.Data.DataColumn[] {
                        this.tableEffects.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableEffectConditionals.Conditional_NameColumn}, false);
            this.Relations.Add(this.relationFK_Effects_EffectConditionals);
            this.relationFK_Feats_FeatFacts = new global::System.Data.DataRelation("FK_Feats_FeatFacts", new global::System.Data.DataColumn[] {
                        this.tableFeats.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatFacts.Feat_NameColumn}, false);
            this.Relations.Add(this.relationFK_Feats_FeatFacts);
            this.relationFK_FeatRanks_FeatRankFacts = new global::System.Data.DataRelation("FK_FeatRanks_FeatRankFacts", new global::System.Data.DataColumn[] {
                        this.tableFeatRanks.Feat_NameColumn,
                        this.tableFeatRanks.RankColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRankFacts.Feat_NameColumn,
                        this.tableFeatRankFacts.Feat_RankColumn}, false);
            this.Relations.Add(this.relationFK_FeatRanks_FeatRankFacts);
            this.relationFK_EffectDescriptions_FeatEffects = new global::System.Data.DataRelation("FK_EffectDescriptions_FeatEffects", new global::System.Data.DataColumn[] {
                        this.tableEffectDescriptions.TextColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatEffects.EffectDescription_TextColumn}, false);
            this.Relations.Add(this.relationFK_EffectDescriptions_FeatEffects);
            this.relationFK_FeatFacts_FeatEffects = new global::System.Data.DataRelation("FK_FeatFacts_FeatEffects", new global::System.Data.DataColumn[] {
                        this.tableFeatFacts.Feat_NameColumn,
                        this.tableFeatFacts.FactTypeColumn,
                        this.tableFeatFacts.FactNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatEffects.Feat_NameColumn,
                        this.tableFeatEffects.FactTypeColumn,
                        this.tableFeatEffects.FactNoColumn}, false);
            this.Relations.Add(this.relationFK_FeatFacts_FeatEffects);
            this.relationFK_EffectDescriptions_FeatRankEffects = new global::System.Data.DataRelation("FK_EffectDescriptions_FeatRankEffects", new global::System.Data.DataColumn[] {
                        this.tableEffectDescriptions.TextColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRankEffects.EffectDescription_TextColumn}, false);
            this.Relations.Add(this.relationFK_EffectDescriptions_FeatRankEffects);
            this.relationFK_FeatRankFacts_FeatRankEffects = new global::System.Data.DataRelation("FK_FeatRankFacts_FeatRankEffects", new global::System.Data.DataColumn[] {
                        this.tableFeatRankFacts.Feat_NameColumn,
                        this.tableFeatRankFacts.Feat_RankColumn,
                        this.tableFeatRankFacts.FactTypeColumn,
                        this.tableFeatRankFacts.FactNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRankEffects.Feat_NameColumn,
                        this.tableFeatRankEffects.Feat_RankColumn,
                        this.tableFeatRankEffects.FactTypeColumn,
                        this.tableFeatRankEffects.FactNoColumn}, false);
            this.Relations.Add(this.relationFK_FeatRankFacts_FeatRankEffects);
            this.relationFK_Keywords_FeatRankKeyword = new global::System.Data.DataRelation("FK_Keywords_FeatRankKeyword", new global::System.Data.DataColumn[] {
                        this.tableKeywords.Type_NameColumn,
                        this.tableKeywords.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRankKeyword.KeywordType_NameColumn,
                        this.tableFeatRankKeyword.Keyword_NameColumn}, false);
            this.Relations.Add(this.relationFK_Keywords_FeatRankKeyword);
            this.relationFK_FeatRankFacts_FeatRankKeyword = new global::System.Data.DataRelation("FK_FeatRankFacts_FeatRankKeyword", new global::System.Data.DataColumn[] {
                        this.tableFeatRankFacts.Feat_NameColumn,
                        this.tableFeatRankFacts.Feat_RankColumn,
                        this.tableFeatRankFacts.FactTypeColumn,
                        this.tableFeatRankFacts.FactNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableFeatRankKeyword.Feat_NameColumn,
                        this.tableFeatRankKeyword.Feat_RankColumn,
                        this.tableFeatRankKeyword.FactTypeColumn,
                        this.tableFeatRankKeyword.FactNoColumn}, false);
            this.Relations.Add(this.relationFK_FeatRankFacts_FeatRankKeyword);
            this.relationFK_KeywordValues_Keywords = new global::System.Data.DataRelation("FK_KeywordValues_Keywords", new global::System.Data.DataColumn[] {
                        this.tableKeywordValues.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableKeywords.Value_NameColumn}, false);
            this.Relations.Add(this.relationFK_KeywordValues_Keywords);
            this.relationFK_KeywordTypes_Keywords = new global::System.Data.DataRelation("FK_KeywordTypes_Keywords", new global::System.Data.DataColumn[] {
                        this.tableKeywordTypes.NameColumn}, new global::System.Data.DataColumn[] {
                        this.tableKeywords.Type_NameColumn}, false);
            this.Relations.Add(this.relationFK_KeywordTypes_Keywords);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAdvancements() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAdvancementRanks() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAdvancementRankFacts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAbilities() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAchievementCategories() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAchievements() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAchievementLevels() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAchievementLevelFacts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAdvRankCatReqs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAdvRankAdvReqs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAdvRankAchReqs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAdvRankAbilReqs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAdvRankAbilBonuses() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAdvancementRankFactStrings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFeats() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRoles() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAttackForms() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeWeaponCategories() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSpecificWeapons() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSchools() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEffectChannels() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeActiveFeats() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStandardAttacks() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePowerAttacks() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCantrips() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeChanneledFeats() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAttackBonuses() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRoleAchievements() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCraftAchievements() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCraftingAchievements() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCraftingSkills() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRefiningSkills() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRefiningAchievements() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCounterAchievementLevels() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCraftAchievementLevels() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAchLevelCatBonuses() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAchLevelAdvReqs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAchievementLevelFactStrings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFeatRanks() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEffectDescriptions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEffectTerms() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEffects() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeConditionals() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEffectConditionals() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFeatFacts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFeatRankFacts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFeatEffects() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFeatRankEffects() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFeatRankKeyword() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeKeywordTypes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeKeywords() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeKeywordValues() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            WikiData ds = new WikiData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AdvancementsRowChangeEventHandler(object sender, AdvancementsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AdvancementRanksRowChangeEventHandler(object sender, AdvancementRanksRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AdvancementRankFactsRowChangeEventHandler(object sender, AdvancementRankFactsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AbilitiesRowChangeEventHandler(object sender, AbilitiesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AchievementCategoriesRowChangeEventHandler(object sender, AchievementCategoriesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AchievementsRowChangeEventHandler(object sender, AchievementsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AchievementLevelsRowChangeEventHandler(object sender, AchievementLevelsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AchievementLevelFactsRowChangeEventHandler(object sender, AchievementLevelFactsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AdvRankCatReqsRowChangeEventHandler(object sender, AdvRankCatReqsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AdvRankAdvReqsRowChangeEventHandler(object sender, AdvRankAdvReqsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AdvRankAchReqsRowChangeEventHandler(object sender, AdvRankAchReqsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AdvRankAbilReqsRowChangeEventHandler(object sender, AdvRankAbilReqsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AdvRankAbilBonusesRowChangeEventHandler(object sender, AdvRankAbilBonusesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AdvancementRankFactStringsRowChangeEventHandler(object sender, AdvancementRankFactStringsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FeatsRowChangeEventHandler(object sender, FeatsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RolesRowChangeEventHandler(object sender, RolesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AttackFormsRowChangeEventHandler(object sender, AttackFormsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void WeaponCategoriesRowChangeEventHandler(object sender, WeaponCategoriesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SpecificWeaponsRowChangeEventHandler(object sender, SpecificWeaponsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SchoolsRowChangeEventHandler(object sender, SchoolsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EffectChannelsRowChangeEventHandler(object sender, EffectChannelsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ActiveFeatsRowChangeEventHandler(object sender, ActiveFeatsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void StandardAttacksRowChangeEventHandler(object sender, StandardAttacksRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PowerAttacksRowChangeEventHandler(object sender, PowerAttacksRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CantripsRowChangeEventHandler(object sender, CantripsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ChanneledFeatsRowChangeEventHandler(object sender, ChanneledFeatsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AttackBonusesRowChangeEventHandler(object sender, AttackBonusesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RoleAchievementsRowChangeEventHandler(object sender, RoleAchievementsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CraftAchievementsRowChangeEventHandler(object sender, CraftAchievementsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CraftingAchievementsRowChangeEventHandler(object sender, CraftingAchievementsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CraftingSkillsRowChangeEventHandler(object sender, CraftingSkillsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RefiningSkillsRowChangeEventHandler(object sender, RefiningSkillsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void RefiningAchievementsRowChangeEventHandler(object sender, RefiningAchievementsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CounterAchievementLevelsRowChangeEventHandler(object sender, CounterAchievementLevelsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CraftAchievementLevelsRowChangeEventHandler(object sender, CraftAchievementLevelsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AchLevelCatBonusesRowChangeEventHandler(object sender, AchLevelCatBonusesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AchLevelAdvReqsRowChangeEventHandler(object sender, AchLevelAdvReqsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AchievementLevelFactStringsRowChangeEventHandler(object sender, AchievementLevelFactStringsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FeatRanksRowChangeEventHandler(object sender, FeatRanksRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EffectDescriptionsRowChangeEventHandler(object sender, EffectDescriptionsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EffectTermsRowChangeEventHandler(object sender, EffectTermsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EffectsRowChangeEventHandler(object sender, EffectsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ConditionalsRowChangeEventHandler(object sender, ConditionalsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EffectConditionalsRowChangeEventHandler(object sender, EffectConditionalsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FeatFactsRowChangeEventHandler(object sender, FeatFactsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FeatRankFactsRowChangeEventHandler(object sender, FeatRankFactsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FeatEffectsRowChangeEventHandler(object sender, FeatEffectsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FeatRankEffectsRowChangeEventHandler(object sender, FeatRankEffectsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FeatRankKeywordRowChangeEventHandler(object sender, FeatRankKeywordRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void KeywordTypesRowChangeEventHandler(object sender, KeywordTypesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void KeywordsRowChangeEventHandler(object sender, KeywordsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void KeywordValuesRowChangeEventHandler(object sender, KeywordValuesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AdvancementsDataTable : global::System.Data.TypedTableBase<AdvancementsRow> {
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementsDataTable() {
                this.TableName = "Advancements";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvancementsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AdvancementsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementsRow this[int index] {
                get {
                    return ((AdvancementsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementsRowChangeEventHandler AdvancementsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementsRowChangeEventHandler AdvancementsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementsRowChangeEventHandler AdvancementsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementsRowChangeEventHandler AdvancementsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAdvancementsRow(AdvancementsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementsRow AddAdvancementsRow(string Name) {
                AdvancementsRow rowAdvancementsRow = ((AdvancementsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name};
                rowAdvancementsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAdvancementsRow);
                return rowAdvancementsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementsRow FindByName(string Name) {
                return ((AdvancementsRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AdvancementsDataTable cln = ((AdvancementsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AdvancementsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementsRow NewAdvancementsRow() {
                return ((AdvancementsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AdvancementsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AdvancementsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AdvancementsRowChanged != null)) {
                    this.AdvancementsRowChanged(this, new AdvancementsRowChangeEvent(((AdvancementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AdvancementsRowChanging != null)) {
                    this.AdvancementsRowChanging(this, new AdvancementsRowChangeEvent(((AdvancementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AdvancementsRowDeleted != null)) {
                    this.AdvancementsRowDeleted(this, new AdvancementsRowChangeEvent(((AdvancementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AdvancementsRowDeleting != null)) {
                    this.AdvancementsRowDeleting(this, new AdvancementsRowChangeEvent(((AdvancementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAdvancementsRow(AdvancementsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AdvancementsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AdvancementRanksDataTable : global::System.Data.TypedTableBase<AdvancementRanksRow> {
            
            private global::System.Data.DataColumn columnAdvancement_Name;
            
            private global::System.Data.DataColumn columnRank;
            
            private global::System.Data.DataColumn columnExpCost;
            
            private global::System.Data.DataColumn columnCoinCost;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRanksDataTable() {
                this.TableName = "AdvancementRanks";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvancementRanksDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AdvancementRanksDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_NameColumn {
                get {
                    return this.columnAdvancement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RankColumn {
                get {
                    return this.columnRank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpCostColumn {
                get {
                    return this.columnExpCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoinCostColumn {
                get {
                    return this.columnCoinCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRanksRow this[int index] {
                get {
                    return ((AdvancementRanksRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementRanksRowChangeEventHandler AdvancementRanksRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementRanksRowChangeEventHandler AdvancementRanksRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementRanksRowChangeEventHandler AdvancementRanksRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementRanksRowChangeEventHandler AdvancementRanksRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAdvancementRanksRow(AdvancementRanksRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRanksRow AddAdvancementRanksRow(AdvancementsRow parentAdvancementsRowByFK_Advancements_AdvancementRanks, int Rank, int ExpCost, int CoinCost) {
                AdvancementRanksRow rowAdvancementRanksRow = ((AdvancementRanksRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Rank,
                        ExpCost,
                        CoinCost};
                if ((parentAdvancementsRowByFK_Advancements_AdvancementRanks != null)) {
                    columnValuesArray[0] = parentAdvancementsRowByFK_Advancements_AdvancementRanks[0];
                }
                rowAdvancementRanksRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAdvancementRanksRow);
                return rowAdvancementRanksRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRanksRow FindByAdvancement_NameRank(string Advancement_Name, int Rank) {
                return ((AdvancementRanksRow)(this.Rows.Find(new object[] {
                            Advancement_Name,
                            Rank})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AdvancementRanksDataTable cln = ((AdvancementRanksDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AdvancementRanksDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAdvancement_Name = base.Columns["Advancement_Name"];
                this.columnRank = base.Columns["Rank"];
                this.columnExpCost = base.Columns["ExpCost"];
                this.columnCoinCost = base.Columns["CoinCost"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAdvancement_Name = new global::System.Data.DataColumn("Advancement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Name);
                this.columnRank = new global::System.Data.DataColumn("Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRank);
                this.columnExpCost = new global::System.Data.DataColumn("ExpCost", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpCost);
                this.columnCoinCost = new global::System.Data.DataColumn("CoinCost", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoinCost);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAdvancement_Name,
                                this.columnRank}, true));
                this.columnAdvancement_Name.AllowDBNull = false;
                this.columnRank.AllowDBNull = false;
                this.columnExpCost.AllowDBNull = false;
                this.columnCoinCost.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRanksRow NewAdvancementRanksRow() {
                return ((AdvancementRanksRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AdvancementRanksRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AdvancementRanksRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AdvancementRanksRowChanged != null)) {
                    this.AdvancementRanksRowChanged(this, new AdvancementRanksRowChangeEvent(((AdvancementRanksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AdvancementRanksRowChanging != null)) {
                    this.AdvancementRanksRowChanging(this, new AdvancementRanksRowChangeEvent(((AdvancementRanksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AdvancementRanksRowDeleted != null)) {
                    this.AdvancementRanksRowDeleted(this, new AdvancementRanksRowChangeEvent(((AdvancementRanksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AdvancementRanksRowDeleting != null)) {
                    this.AdvancementRanksRowDeleting(this, new AdvancementRanksRowChangeEvent(((AdvancementRanksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAdvancementRanksRow(AdvancementRanksRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AdvancementRanksDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AdvancementRankFactsDataTable : global::System.Data.TypedTableBase<AdvancementRankFactsRow> {
            
            private global::System.Data.DataColumn columnAdvancement_Name;
            
            private global::System.Data.DataColumn columnAdvancement_Rank;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactNo;
            
            private global::System.Data.DataColumn columnOptionNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactsDataTable() {
                this.TableName = "AdvancementRankFacts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvancementRankFactsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AdvancementRankFactsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_NameColumn {
                get {
                    return this.columnAdvancement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_RankColumn {
                get {
                    return this.columnAdvancement_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactNoColumn {
                get {
                    return this.columnFactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionNoColumn {
                get {
                    return this.columnOptionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactsRow this[int index] {
                get {
                    return ((AdvancementRankFactsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementRankFactsRowChangeEventHandler AdvancementRankFactsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementRankFactsRowChangeEventHandler AdvancementRankFactsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementRankFactsRowChangeEventHandler AdvancementRankFactsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementRankFactsRowChangeEventHandler AdvancementRankFactsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAdvancementRankFactsRow(AdvancementRankFactsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactsRow AddAdvancementRankFactsRow(string Advancement_Name, int Advancement_Rank, string FactType, int FactNo, int OptionNo) {
                AdvancementRankFactsRow rowAdvancementRankFactsRow = ((AdvancementRankFactsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Advancement_Name,
                        Advancement_Rank,
                        FactType,
                        FactNo,
                        OptionNo};
                rowAdvancementRankFactsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAdvancementRankFactsRow);
                return rowAdvancementRankFactsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactsRow FindByAdvancement_NameAdvancement_RankFactTypeFactNoOptionNo(string Advancement_Name, int Advancement_Rank, string FactType, int FactNo, int OptionNo) {
                return ((AdvancementRankFactsRow)(this.Rows.Find(new object[] {
                            Advancement_Name,
                            Advancement_Rank,
                            FactType,
                            FactNo,
                            OptionNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AdvancementRankFactsDataTable cln = ((AdvancementRankFactsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AdvancementRankFactsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAdvancement_Name = base.Columns["Advancement_Name"];
                this.columnAdvancement_Rank = base.Columns["Advancement_Rank"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactNo = base.Columns["FactNo"];
                this.columnOptionNo = base.Columns["OptionNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAdvancement_Name = new global::System.Data.DataColumn("Advancement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Name);
                this.columnAdvancement_Rank = new global::System.Data.DataColumn("Advancement_Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Rank);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactNo = new global::System.Data.DataColumn("FactNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactNo);
                this.columnOptionNo = new global::System.Data.DataColumn("OptionNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAdvancement_Name,
                                this.columnAdvancement_Rank,
                                this.columnFactType,
                                this.columnFactNo,
                                this.columnOptionNo}, true));
                this.columnAdvancement_Name.AllowDBNull = false;
                this.columnAdvancement_Rank.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactNo.AllowDBNull = false;
                this.columnOptionNo.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactsRow NewAdvancementRankFactsRow() {
                return ((AdvancementRankFactsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AdvancementRankFactsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AdvancementRankFactsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AdvancementRankFactsRowChanged != null)) {
                    this.AdvancementRankFactsRowChanged(this, new AdvancementRankFactsRowChangeEvent(((AdvancementRankFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AdvancementRankFactsRowChanging != null)) {
                    this.AdvancementRankFactsRowChanging(this, new AdvancementRankFactsRowChangeEvent(((AdvancementRankFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AdvancementRankFactsRowDeleted != null)) {
                    this.AdvancementRankFactsRowDeleted(this, new AdvancementRankFactsRowChangeEvent(((AdvancementRankFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AdvancementRankFactsRowDeleting != null)) {
                    this.AdvancementRankFactsRowDeleting(this, new AdvancementRankFactsRowChangeEvent(((AdvancementRankFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAdvancementRankFactsRow(AdvancementRankFactsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AdvancementRankFactsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AbilitiesDataTable : global::System.Data.TypedTableBase<AbilitiesRow> {
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbilitiesDataTable() {
                this.TableName = "Abilities";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AbilitiesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AbilitiesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbilitiesRow this[int index] {
                get {
                    return ((AbilitiesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AbilitiesRowChangeEventHandler AbilitiesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AbilitiesRowChangeEventHandler AbilitiesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AbilitiesRowChangeEventHandler AbilitiesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AbilitiesRowChangeEventHandler AbilitiesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAbilitiesRow(AbilitiesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbilitiesRow AddAbilitiesRow(string Name) {
                AbilitiesRow rowAbilitiesRow = ((AbilitiesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name};
                rowAbilitiesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAbilitiesRow);
                return rowAbilitiesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbilitiesRow FindByName(string Name) {
                return ((AbilitiesRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AbilitiesDataTable cln = ((AbilitiesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AbilitiesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbilitiesRow NewAbilitiesRow() {
                return ((AbilitiesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AbilitiesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AbilitiesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AbilitiesRowChanged != null)) {
                    this.AbilitiesRowChanged(this, new AbilitiesRowChangeEvent(((AbilitiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AbilitiesRowChanging != null)) {
                    this.AbilitiesRowChanging(this, new AbilitiesRowChangeEvent(((AbilitiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AbilitiesRowDeleted != null)) {
                    this.AbilitiesRowDeleted(this, new AbilitiesRowChangeEvent(((AbilitiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AbilitiesRowDeleting != null)) {
                    this.AbilitiesRowDeleting(this, new AbilitiesRowChangeEvent(((AbilitiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAbilitiesRow(AbilitiesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AbilitiesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AchievementCategoriesDataTable : global::System.Data.TypedTableBase<AchievementCategoriesRow> {
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementCategoriesDataTable() {
                this.TableName = "AchievementCategories";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AchievementCategoriesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AchievementCategoriesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementCategoriesRow this[int index] {
                get {
                    return ((AchievementCategoriesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementCategoriesRowChangeEventHandler AchievementCategoriesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementCategoriesRowChangeEventHandler AchievementCategoriesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementCategoriesRowChangeEventHandler AchievementCategoriesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementCategoriesRowChangeEventHandler AchievementCategoriesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAchievementCategoriesRow(AchievementCategoriesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementCategoriesRow AddAchievementCategoriesRow(string Name) {
                AchievementCategoriesRow rowAchievementCategoriesRow = ((AchievementCategoriesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name};
                rowAchievementCategoriesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAchievementCategoriesRow);
                return rowAchievementCategoriesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementCategoriesRow FindByName(string Name) {
                return ((AchievementCategoriesRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AchievementCategoriesDataTable cln = ((AchievementCategoriesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AchievementCategoriesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementCategoriesRow NewAchievementCategoriesRow() {
                return ((AchievementCategoriesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AchievementCategoriesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AchievementCategoriesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AchievementCategoriesRowChanged != null)) {
                    this.AchievementCategoriesRowChanged(this, new AchievementCategoriesRowChangeEvent(((AchievementCategoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AchievementCategoriesRowChanging != null)) {
                    this.AchievementCategoriesRowChanging(this, new AchievementCategoriesRowChangeEvent(((AchievementCategoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AchievementCategoriesRowDeleted != null)) {
                    this.AchievementCategoriesRowDeleted(this, new AchievementCategoriesRowChangeEvent(((AchievementCategoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AchievementCategoriesRowDeleting != null)) {
                    this.AchievementCategoriesRowDeleting(this, new AchievementCategoriesRowChangeEvent(((AchievementCategoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAchievementCategoriesRow(AchievementCategoriesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AchievementCategoriesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AchievementsDataTable : global::System.Data.TypedTableBase<AchievementsRow> {
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAchievementType;
            
            private global::System.Data.DataColumn columnDisplayName;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnAlwaysGainsInfluence;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementsDataTable() {
                this.TableName = "Achievements";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AchievementsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AchievementsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AchievementTypeColumn {
                get {
                    return this.columnAchievementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DisplayNameColumn {
                get {
                    return this.columnDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlwaysGainsInfluenceColumn {
                get {
                    return this.columnAlwaysGainsInfluence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementsRow this[int index] {
                get {
                    return ((AchievementsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementsRowChangeEventHandler AchievementsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementsRowChangeEventHandler AchievementsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementsRowChangeEventHandler AchievementsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementsRowChangeEventHandler AchievementsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAchievementsRow(AchievementsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementsRow AddAchievementsRow(string Name, string AchievementType, string DisplayName, string Description, bool AlwaysGainsInfluence) {
                AchievementsRow rowAchievementsRow = ((AchievementsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name,
                        AchievementType,
                        DisplayName,
                        Description,
                        AlwaysGainsInfluence};
                rowAchievementsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAchievementsRow);
                return rowAchievementsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementsRow FindByName(string Name) {
                return ((AchievementsRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AchievementsDataTable cln = ((AchievementsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AchievementsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnAchievementType = base.Columns["AchievementType"];
                this.columnDisplayName = base.Columns["DisplayName"];
                this.columnDescription = base.Columns["Description"];
                this.columnAlwaysGainsInfluence = base.Columns["AlwaysGainsInfluence"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAchievementType = new global::System.Data.DataColumn("AchievementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievementType);
                this.columnDisplayName = new global::System.Data.DataColumn("DisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnAlwaysGainsInfluence = new global::System.Data.DataColumn("AlwaysGainsInfluence", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlwaysGainsInfluence);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
                this.columnAchievementType.AllowDBNull = false;
                this.columnDisplayName.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
                this.columnAlwaysGainsInfluence.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementsRow NewAchievementsRow() {
                return ((AchievementsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AchievementsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AchievementsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AchievementsRowChanged != null)) {
                    this.AchievementsRowChanged(this, new AchievementsRowChangeEvent(((AchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AchievementsRowChanging != null)) {
                    this.AchievementsRowChanging(this, new AchievementsRowChangeEvent(((AchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AchievementsRowDeleted != null)) {
                    this.AchievementsRowDeleted(this, new AchievementsRowChangeEvent(((AchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AchievementsRowDeleting != null)) {
                    this.AchievementsRowDeleting(this, new AchievementsRowChangeEvent(((AchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAchievementsRow(AchievementsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AchievementsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AchievementLevelsDataTable : global::System.Data.TypedTableBase<AchievementLevelsRow> {
            
            private global::System.Data.DataColumn columnAchievement_Name;
            
            private global::System.Data.DataColumn columnLevel;
            
            private global::System.Data.DataColumn columnAchievementLevelType;
            
            private global::System.Data.DataColumn columnDisplayName;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelsDataTable() {
                this.TableName = "AchievementLevels";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AchievementLevelsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AchievementLevelsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_NameColumn {
                get {
                    return this.columnAchievement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LevelColumn {
                get {
                    return this.columnLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AchievementLevelTypeColumn {
                get {
                    return this.columnAchievementLevelType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DisplayNameColumn {
                get {
                    return this.columnDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelsRow this[int index] {
                get {
                    return ((AchievementLevelsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementLevelsRowChangeEventHandler AchievementLevelsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementLevelsRowChangeEventHandler AchievementLevelsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementLevelsRowChangeEventHandler AchievementLevelsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementLevelsRowChangeEventHandler AchievementLevelsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAchievementLevelsRow(AchievementLevelsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelsRow AddAchievementLevelsRow(AchievementsRow parentAchievementsRowByFK_Achievements_AchievementLevels, int Level, string AchievementLevelType, string DisplayName, string Description) {
                AchievementLevelsRow rowAchievementLevelsRow = ((AchievementLevelsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Level,
                        AchievementLevelType,
                        DisplayName,
                        Description};
                if ((parentAchievementsRowByFK_Achievements_AchievementLevels != null)) {
                    columnValuesArray[0] = parentAchievementsRowByFK_Achievements_AchievementLevels[0];
                }
                rowAchievementLevelsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAchievementLevelsRow);
                return rowAchievementLevelsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelsRow FindByAchievement_NameLevel(string Achievement_Name, int Level) {
                return ((AchievementLevelsRow)(this.Rows.Find(new object[] {
                            Achievement_Name,
                            Level})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AchievementLevelsDataTable cln = ((AchievementLevelsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AchievementLevelsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAchievement_Name = base.Columns["Achievement_Name"];
                this.columnLevel = base.Columns["Level"];
                this.columnAchievementLevelType = base.Columns["AchievementLevelType"];
                this.columnDisplayName = base.Columns["DisplayName"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAchievement_Name = new global::System.Data.DataColumn("Achievement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Name);
                this.columnLevel = new global::System.Data.DataColumn("Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLevel);
                this.columnAchievementLevelType = new global::System.Data.DataColumn("AchievementLevelType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievementLevelType);
                this.columnDisplayName = new global::System.Data.DataColumn("DisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAchievement_Name,
                                this.columnLevel}, true));
                this.columnAchievement_Name.AllowDBNull = false;
                this.columnLevel.AllowDBNull = false;
                this.columnAchievementLevelType.AllowDBNull = false;
                this.columnDisplayName.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelsRow NewAchievementLevelsRow() {
                return ((AchievementLevelsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AchievementLevelsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AchievementLevelsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AchievementLevelsRowChanged != null)) {
                    this.AchievementLevelsRowChanged(this, new AchievementLevelsRowChangeEvent(((AchievementLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AchievementLevelsRowChanging != null)) {
                    this.AchievementLevelsRowChanging(this, new AchievementLevelsRowChangeEvent(((AchievementLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AchievementLevelsRowDeleted != null)) {
                    this.AchievementLevelsRowDeleted(this, new AchievementLevelsRowChangeEvent(((AchievementLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AchievementLevelsRowDeleting != null)) {
                    this.AchievementLevelsRowDeleting(this, new AchievementLevelsRowChangeEvent(((AchievementLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAchievementLevelsRow(AchievementLevelsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AchievementLevelsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AchievementLevelFactsDataTable : global::System.Data.TypedTableBase<AchievementLevelFactsRow> {
            
            private global::System.Data.DataColumn columnAchievement_Name;
            
            private global::System.Data.DataColumn columnAchievement_Level;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactNo;
            
            private global::System.Data.DataColumn columnOptionNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactsDataTable() {
                this.TableName = "AchievementLevelFacts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AchievementLevelFactsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AchievementLevelFactsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_NameColumn {
                get {
                    return this.columnAchievement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_LevelColumn {
                get {
                    return this.columnAchievement_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactNoColumn {
                get {
                    return this.columnFactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionNoColumn {
                get {
                    return this.columnOptionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactsRow this[int index] {
                get {
                    return ((AchievementLevelFactsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementLevelFactsRowChangeEventHandler AchievementLevelFactsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementLevelFactsRowChangeEventHandler AchievementLevelFactsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementLevelFactsRowChangeEventHandler AchievementLevelFactsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementLevelFactsRowChangeEventHandler AchievementLevelFactsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAchievementLevelFactsRow(AchievementLevelFactsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactsRow AddAchievementLevelFactsRow(string Achievement_Name, int Achievement_Level, string FactType, int FactNo, int OptionNo) {
                AchievementLevelFactsRow rowAchievementLevelFactsRow = ((AchievementLevelFactsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Achievement_Name,
                        Achievement_Level,
                        FactType,
                        FactNo,
                        OptionNo};
                rowAchievementLevelFactsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAchievementLevelFactsRow);
                return rowAchievementLevelFactsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactsRow FindByAchievement_NameAchievement_LevelFactTypeFactNoOptionNo(string Achievement_Name, int Achievement_Level, string FactType, int FactNo, int OptionNo) {
                return ((AchievementLevelFactsRow)(this.Rows.Find(new object[] {
                            Achievement_Name,
                            Achievement_Level,
                            FactType,
                            FactNo,
                            OptionNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AchievementLevelFactsDataTable cln = ((AchievementLevelFactsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AchievementLevelFactsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAchievement_Name = base.Columns["Achievement_Name"];
                this.columnAchievement_Level = base.Columns["Achievement_Level"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactNo = base.Columns["FactNo"];
                this.columnOptionNo = base.Columns["OptionNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAchievement_Name = new global::System.Data.DataColumn("Achievement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Name);
                this.columnAchievement_Level = new global::System.Data.DataColumn("Achievement_Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Level);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactNo = new global::System.Data.DataColumn("FactNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactNo);
                this.columnOptionNo = new global::System.Data.DataColumn("OptionNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAchievement_Name,
                                this.columnAchievement_Level,
                                this.columnFactType,
                                this.columnFactNo,
                                this.columnOptionNo}, true));
                this.columnAchievement_Name.AllowDBNull = false;
                this.columnAchievement_Level.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactNo.AllowDBNull = false;
                this.columnOptionNo.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactsRow NewAchievementLevelFactsRow() {
                return ((AchievementLevelFactsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AchievementLevelFactsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AchievementLevelFactsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AchievementLevelFactsRowChanged != null)) {
                    this.AchievementLevelFactsRowChanged(this, new AchievementLevelFactsRowChangeEvent(((AchievementLevelFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AchievementLevelFactsRowChanging != null)) {
                    this.AchievementLevelFactsRowChanging(this, new AchievementLevelFactsRowChangeEvent(((AchievementLevelFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AchievementLevelFactsRowDeleted != null)) {
                    this.AchievementLevelFactsRowDeleted(this, new AchievementLevelFactsRowChangeEvent(((AchievementLevelFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AchievementLevelFactsRowDeleting != null)) {
                    this.AchievementLevelFactsRowDeleting(this, new AchievementLevelFactsRowChangeEvent(((AchievementLevelFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAchievementLevelFactsRow(AchievementLevelFactsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AchievementLevelFactsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AdvRankCatReqsDataTable : global::System.Data.TypedTableBase<AdvRankCatReqsRow> {
            
            private global::System.Data.DataColumn columnAdvancement_Name;
            
            private global::System.Data.DataColumn columnAdvancement_Rank;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactNo;
            
            private global::System.Data.DataColumn columnOptionNo;
            
            private global::System.Data.DataColumn columnRequiredCategory_Name;
            
            private global::System.Data.DataColumn columnRequiredCategoryPoints;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankCatReqsDataTable() {
                this.TableName = "AdvRankCatReqs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvRankCatReqsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AdvRankCatReqsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_NameColumn {
                get {
                    return this.columnAdvancement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_RankColumn {
                get {
                    return this.columnAdvancement_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactNoColumn {
                get {
                    return this.columnFactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionNoColumn {
                get {
                    return this.columnOptionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequiredCategory_NameColumn {
                get {
                    return this.columnRequiredCategory_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequiredCategoryPointsColumn {
                get {
                    return this.columnRequiredCategoryPoints;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankCatReqsRow this[int index] {
                get {
                    return ((AdvRankCatReqsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankCatReqsRowChangeEventHandler AdvRankCatReqsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankCatReqsRowChangeEventHandler AdvRankCatReqsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankCatReqsRowChangeEventHandler AdvRankCatReqsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankCatReqsRowChangeEventHandler AdvRankCatReqsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAdvRankCatReqsRow(AdvRankCatReqsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankCatReqsRow AddAdvRankCatReqsRow(string Advancement_Name, int Advancement_Rank, string FactType, int FactNo, int OptionNo, AchievementCategoriesRow parentAchievementCategoriesRowByFK_AchievementCategories_AdvRankCatReq, int RequiredCategoryPoints) {
                AdvRankCatReqsRow rowAdvRankCatReqsRow = ((AdvRankCatReqsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Advancement_Name,
                        Advancement_Rank,
                        FactType,
                        FactNo,
                        OptionNo,
                        null,
                        RequiredCategoryPoints};
                if ((parentAchievementCategoriesRowByFK_AchievementCategories_AdvRankCatReq != null)) {
                    columnValuesArray[5] = parentAchievementCategoriesRowByFK_AchievementCategories_AdvRankCatReq[0];
                }
                rowAdvRankCatReqsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAdvRankCatReqsRow);
                return rowAdvRankCatReqsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankCatReqsRow FindByAdvancement_NameAdvancement_RankFactTypeFactNoOptionNo(string Advancement_Name, int Advancement_Rank, string FactType, int FactNo, int OptionNo) {
                return ((AdvRankCatReqsRow)(this.Rows.Find(new object[] {
                            Advancement_Name,
                            Advancement_Rank,
                            FactType,
                            FactNo,
                            OptionNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AdvRankCatReqsDataTable cln = ((AdvRankCatReqsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AdvRankCatReqsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAdvancement_Name = base.Columns["Advancement_Name"];
                this.columnAdvancement_Rank = base.Columns["Advancement_Rank"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactNo = base.Columns["FactNo"];
                this.columnOptionNo = base.Columns["OptionNo"];
                this.columnRequiredCategory_Name = base.Columns["RequiredCategory_Name"];
                this.columnRequiredCategoryPoints = base.Columns["RequiredCategoryPoints"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAdvancement_Name = new global::System.Data.DataColumn("Advancement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Name);
                this.columnAdvancement_Rank = new global::System.Data.DataColumn("Advancement_Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Rank);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactNo = new global::System.Data.DataColumn("FactNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactNo);
                this.columnOptionNo = new global::System.Data.DataColumn("OptionNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionNo);
                this.columnRequiredCategory_Name = new global::System.Data.DataColumn("RequiredCategory_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredCategory_Name);
                this.columnRequiredCategoryPoints = new global::System.Data.DataColumn("RequiredCategoryPoints", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredCategoryPoints);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAdvancement_Name,
                                this.columnAdvancement_Rank,
                                this.columnFactType,
                                this.columnFactNo,
                                this.columnOptionNo}, true));
                this.columnAdvancement_Name.AllowDBNull = false;
                this.columnAdvancement_Rank.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactNo.AllowDBNull = false;
                this.columnOptionNo.AllowDBNull = false;
                this.columnRequiredCategory_Name.AllowDBNull = false;
                this.columnRequiredCategoryPoints.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankCatReqsRow NewAdvRankCatReqsRow() {
                return ((AdvRankCatReqsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AdvRankCatReqsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AdvRankCatReqsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AdvRankCatReqsRowChanged != null)) {
                    this.AdvRankCatReqsRowChanged(this, new AdvRankCatReqsRowChangeEvent(((AdvRankCatReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AdvRankCatReqsRowChanging != null)) {
                    this.AdvRankCatReqsRowChanging(this, new AdvRankCatReqsRowChangeEvent(((AdvRankCatReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AdvRankCatReqsRowDeleted != null)) {
                    this.AdvRankCatReqsRowDeleted(this, new AdvRankCatReqsRowChangeEvent(((AdvRankCatReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AdvRankCatReqsRowDeleting != null)) {
                    this.AdvRankCatReqsRowDeleting(this, new AdvRankCatReqsRowChangeEvent(((AdvRankCatReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAdvRankCatReqsRow(AdvRankCatReqsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AdvRankCatReqsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AdvRankAdvReqsDataTable : global::System.Data.TypedTableBase<AdvRankAdvReqsRow> {
            
            private global::System.Data.DataColumn columnAdvancement_Name;
            
            private global::System.Data.DataColumn columnAdvancement_Rank;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactNo;
            
            private global::System.Data.DataColumn columnOptionNo;
            
            private global::System.Data.DataColumn columnRequiredAdvancement_Name;
            
            private global::System.Data.DataColumn columnRequiredAdvancement_Rank;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAdvReqsDataTable() {
                this.TableName = "AdvRankAdvReqs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvRankAdvReqsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AdvRankAdvReqsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_NameColumn {
                get {
                    return this.columnAdvancement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_RankColumn {
                get {
                    return this.columnAdvancement_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactNoColumn {
                get {
                    return this.columnFactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionNoColumn {
                get {
                    return this.columnOptionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequiredAdvancement_NameColumn {
                get {
                    return this.columnRequiredAdvancement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequiredAdvancement_RankColumn {
                get {
                    return this.columnRequiredAdvancement_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAdvReqsRow this[int index] {
                get {
                    return ((AdvRankAdvReqsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAdvReqsRowChangeEventHandler AdvRankAdvReqsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAdvReqsRowChangeEventHandler AdvRankAdvReqsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAdvReqsRowChangeEventHandler AdvRankAdvReqsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAdvReqsRowChangeEventHandler AdvRankAdvReqsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAdvRankAdvReqsRow(AdvRankAdvReqsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAdvReqsRow AddAdvRankAdvReqsRow(string Advancement_Name, int Advancement_Rank, string FactType, int FactNo, int OptionNo, string RequiredAdvancement_Name, int RequiredAdvancement_Rank) {
                AdvRankAdvReqsRow rowAdvRankAdvReqsRow = ((AdvRankAdvReqsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Advancement_Name,
                        Advancement_Rank,
                        FactType,
                        FactNo,
                        OptionNo,
                        RequiredAdvancement_Name,
                        RequiredAdvancement_Rank};
                rowAdvRankAdvReqsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAdvRankAdvReqsRow);
                return rowAdvRankAdvReqsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAdvReqsRow FindByAdvancement_NameAdvancement_RankFactTypeFactNoOptionNo(string Advancement_Name, int Advancement_Rank, string FactType, int FactNo, int OptionNo) {
                return ((AdvRankAdvReqsRow)(this.Rows.Find(new object[] {
                            Advancement_Name,
                            Advancement_Rank,
                            FactType,
                            FactNo,
                            OptionNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AdvRankAdvReqsDataTable cln = ((AdvRankAdvReqsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AdvRankAdvReqsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAdvancement_Name = base.Columns["Advancement_Name"];
                this.columnAdvancement_Rank = base.Columns["Advancement_Rank"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactNo = base.Columns["FactNo"];
                this.columnOptionNo = base.Columns["OptionNo"];
                this.columnRequiredAdvancement_Name = base.Columns["RequiredAdvancement_Name"];
                this.columnRequiredAdvancement_Rank = base.Columns["RequiredAdvancement_Rank"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAdvancement_Name = new global::System.Data.DataColumn("Advancement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Name);
                this.columnAdvancement_Rank = new global::System.Data.DataColumn("Advancement_Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Rank);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactNo = new global::System.Data.DataColumn("FactNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactNo);
                this.columnOptionNo = new global::System.Data.DataColumn("OptionNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionNo);
                this.columnRequiredAdvancement_Name = new global::System.Data.DataColumn("RequiredAdvancement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredAdvancement_Name);
                this.columnRequiredAdvancement_Rank = new global::System.Data.DataColumn("RequiredAdvancement_Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredAdvancement_Rank);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAdvancement_Name,
                                this.columnAdvancement_Rank,
                                this.columnFactType,
                                this.columnFactNo,
                                this.columnOptionNo}, true));
                this.columnAdvancement_Name.AllowDBNull = false;
                this.columnAdvancement_Rank.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactNo.AllowDBNull = false;
                this.columnOptionNo.AllowDBNull = false;
                this.columnRequiredAdvancement_Name.AllowDBNull = false;
                this.columnRequiredAdvancement_Rank.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAdvReqsRow NewAdvRankAdvReqsRow() {
                return ((AdvRankAdvReqsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AdvRankAdvReqsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AdvRankAdvReqsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AdvRankAdvReqsRowChanged != null)) {
                    this.AdvRankAdvReqsRowChanged(this, new AdvRankAdvReqsRowChangeEvent(((AdvRankAdvReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AdvRankAdvReqsRowChanging != null)) {
                    this.AdvRankAdvReqsRowChanging(this, new AdvRankAdvReqsRowChangeEvent(((AdvRankAdvReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AdvRankAdvReqsRowDeleted != null)) {
                    this.AdvRankAdvReqsRowDeleted(this, new AdvRankAdvReqsRowChangeEvent(((AdvRankAdvReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AdvRankAdvReqsRowDeleting != null)) {
                    this.AdvRankAdvReqsRowDeleting(this, new AdvRankAdvReqsRowChangeEvent(((AdvRankAdvReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAdvRankAdvReqsRow(AdvRankAdvReqsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AdvRankAdvReqsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AdvRankAchReqsDataTable : global::System.Data.TypedTableBase<AdvRankAchReqsRow> {
            
            private global::System.Data.DataColumn columnAdvancement_Name;
            
            private global::System.Data.DataColumn columnAdvancement_Rank;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactNo;
            
            private global::System.Data.DataColumn columnOptionNo;
            
            private global::System.Data.DataColumn columnRequiredAchievement_Name;
            
            private global::System.Data.DataColumn columnRequiredAchievement_Level;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAchReqsDataTable() {
                this.TableName = "AdvRankAchReqs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvRankAchReqsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AdvRankAchReqsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_NameColumn {
                get {
                    return this.columnAdvancement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_RankColumn {
                get {
                    return this.columnAdvancement_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactNoColumn {
                get {
                    return this.columnFactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionNoColumn {
                get {
                    return this.columnOptionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequiredAchievement_NameColumn {
                get {
                    return this.columnRequiredAchievement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequiredAchievement_LevelColumn {
                get {
                    return this.columnRequiredAchievement_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAchReqsRow this[int index] {
                get {
                    return ((AdvRankAchReqsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAchReqsRowChangeEventHandler AdvRankAchReqsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAchReqsRowChangeEventHandler AdvRankAchReqsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAchReqsRowChangeEventHandler AdvRankAchReqsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAchReqsRowChangeEventHandler AdvRankAchReqsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAdvRankAchReqsRow(AdvRankAchReqsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAchReqsRow AddAdvRankAchReqsRow(string Advancement_Name, int Advancement_Rank, string FactType, int FactNo, int OptionNo, string RequiredAchievement_Name, int RequiredAchievement_Level) {
                AdvRankAchReqsRow rowAdvRankAchReqsRow = ((AdvRankAchReqsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Advancement_Name,
                        Advancement_Rank,
                        FactType,
                        FactNo,
                        OptionNo,
                        RequiredAchievement_Name,
                        RequiredAchievement_Level};
                rowAdvRankAchReqsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAdvRankAchReqsRow);
                return rowAdvRankAchReqsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAchReqsRow FindByAdvancement_NameAdvancement_RankFactTypeFactNoOptionNo(string Advancement_Name, int Advancement_Rank, string FactType, int FactNo, int OptionNo) {
                return ((AdvRankAchReqsRow)(this.Rows.Find(new object[] {
                            Advancement_Name,
                            Advancement_Rank,
                            FactType,
                            FactNo,
                            OptionNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AdvRankAchReqsDataTable cln = ((AdvRankAchReqsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AdvRankAchReqsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAdvancement_Name = base.Columns["Advancement_Name"];
                this.columnAdvancement_Rank = base.Columns["Advancement_Rank"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactNo = base.Columns["FactNo"];
                this.columnOptionNo = base.Columns["OptionNo"];
                this.columnRequiredAchievement_Name = base.Columns["RequiredAchievement_Name"];
                this.columnRequiredAchievement_Level = base.Columns["RequiredAchievement_Level"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAdvancement_Name = new global::System.Data.DataColumn("Advancement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Name);
                this.columnAdvancement_Rank = new global::System.Data.DataColumn("Advancement_Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Rank);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactNo = new global::System.Data.DataColumn("FactNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactNo);
                this.columnOptionNo = new global::System.Data.DataColumn("OptionNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionNo);
                this.columnRequiredAchievement_Name = new global::System.Data.DataColumn("RequiredAchievement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredAchievement_Name);
                this.columnRequiredAchievement_Level = new global::System.Data.DataColumn("RequiredAchievement_Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredAchievement_Level);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAdvancement_Name,
                                this.columnAdvancement_Rank,
                                this.columnFactType,
                                this.columnFactNo,
                                this.columnOptionNo}, true));
                this.columnAdvancement_Name.AllowDBNull = false;
                this.columnAdvancement_Rank.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactNo.AllowDBNull = false;
                this.columnOptionNo.AllowDBNull = false;
                this.columnRequiredAchievement_Name.AllowDBNull = false;
                this.columnRequiredAchievement_Level.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAchReqsRow NewAdvRankAchReqsRow() {
                return ((AdvRankAchReqsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AdvRankAchReqsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AdvRankAchReqsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AdvRankAchReqsRowChanged != null)) {
                    this.AdvRankAchReqsRowChanged(this, new AdvRankAchReqsRowChangeEvent(((AdvRankAchReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AdvRankAchReqsRowChanging != null)) {
                    this.AdvRankAchReqsRowChanging(this, new AdvRankAchReqsRowChangeEvent(((AdvRankAchReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AdvRankAchReqsRowDeleted != null)) {
                    this.AdvRankAchReqsRowDeleted(this, new AdvRankAchReqsRowChangeEvent(((AdvRankAchReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AdvRankAchReqsRowDeleting != null)) {
                    this.AdvRankAchReqsRowDeleting(this, new AdvRankAchReqsRowChangeEvent(((AdvRankAchReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAdvRankAchReqsRow(AdvRankAchReqsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AdvRankAchReqsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AdvRankAbilReqsDataTable : global::System.Data.TypedTableBase<AdvRankAbilReqsRow> {
            
            private global::System.Data.DataColumn columnAdvancement_Name;
            
            private global::System.Data.DataColumn columnAdvancement_Rank;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactNo;
            
            private global::System.Data.DataColumn columnOptionNo;
            
            private global::System.Data.DataColumn columnRequiredAbility_Name;
            
            private global::System.Data.DataColumn columnRequiredAbilityScore;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilReqsDataTable() {
                this.TableName = "AdvRankAbilReqs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvRankAbilReqsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AdvRankAbilReqsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_NameColumn {
                get {
                    return this.columnAdvancement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_RankColumn {
                get {
                    return this.columnAdvancement_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactNoColumn {
                get {
                    return this.columnFactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionNoColumn {
                get {
                    return this.columnOptionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequiredAbility_NameColumn {
                get {
                    return this.columnRequiredAbility_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequiredAbilityScoreColumn {
                get {
                    return this.columnRequiredAbilityScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilReqsRow this[int index] {
                get {
                    return ((AdvRankAbilReqsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAbilReqsRowChangeEventHandler AdvRankAbilReqsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAbilReqsRowChangeEventHandler AdvRankAbilReqsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAbilReqsRowChangeEventHandler AdvRankAbilReqsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAbilReqsRowChangeEventHandler AdvRankAbilReqsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAdvRankAbilReqsRow(AdvRankAbilReqsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilReqsRow AddAdvRankAbilReqsRow(string Advancement_Name, int Advancement_Rank, string FactType, int FactNo, int OptionNo, AbilitiesRow parentAbilitiesRowByFK_Abilities_AdvRankAbilReq, int RequiredAbilityScore) {
                AdvRankAbilReqsRow rowAdvRankAbilReqsRow = ((AdvRankAbilReqsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Advancement_Name,
                        Advancement_Rank,
                        FactType,
                        FactNo,
                        OptionNo,
                        null,
                        RequiredAbilityScore};
                if ((parentAbilitiesRowByFK_Abilities_AdvRankAbilReq != null)) {
                    columnValuesArray[5] = parentAbilitiesRowByFK_Abilities_AdvRankAbilReq[0];
                }
                rowAdvRankAbilReqsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAdvRankAbilReqsRow);
                return rowAdvRankAbilReqsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilReqsRow FindByAdvancement_NameAdvancement_RankFactTypeFactNoOptionNo(string Advancement_Name, int Advancement_Rank, string FactType, int FactNo, int OptionNo) {
                return ((AdvRankAbilReqsRow)(this.Rows.Find(new object[] {
                            Advancement_Name,
                            Advancement_Rank,
                            FactType,
                            FactNo,
                            OptionNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AdvRankAbilReqsDataTable cln = ((AdvRankAbilReqsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AdvRankAbilReqsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAdvancement_Name = base.Columns["Advancement_Name"];
                this.columnAdvancement_Rank = base.Columns["Advancement_Rank"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactNo = base.Columns["FactNo"];
                this.columnOptionNo = base.Columns["OptionNo"];
                this.columnRequiredAbility_Name = base.Columns["RequiredAbility_Name"];
                this.columnRequiredAbilityScore = base.Columns["RequiredAbilityScore"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAdvancement_Name = new global::System.Data.DataColumn("Advancement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Name);
                this.columnAdvancement_Rank = new global::System.Data.DataColumn("Advancement_Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Rank);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactNo = new global::System.Data.DataColumn("FactNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactNo);
                this.columnOptionNo = new global::System.Data.DataColumn("OptionNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionNo);
                this.columnRequiredAbility_Name = new global::System.Data.DataColumn("RequiredAbility_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredAbility_Name);
                this.columnRequiredAbilityScore = new global::System.Data.DataColumn("RequiredAbilityScore", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredAbilityScore);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAdvancement_Name,
                                this.columnAdvancement_Rank,
                                this.columnFactType,
                                this.columnFactNo,
                                this.columnOptionNo}, true));
                this.columnAdvancement_Name.AllowDBNull = false;
                this.columnAdvancement_Rank.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactNo.AllowDBNull = false;
                this.columnOptionNo.AllowDBNull = false;
                this.columnRequiredAbility_Name.AllowDBNull = false;
                this.columnRequiredAbilityScore.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilReqsRow NewAdvRankAbilReqsRow() {
                return ((AdvRankAbilReqsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AdvRankAbilReqsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AdvRankAbilReqsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AdvRankAbilReqsRowChanged != null)) {
                    this.AdvRankAbilReqsRowChanged(this, new AdvRankAbilReqsRowChangeEvent(((AdvRankAbilReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AdvRankAbilReqsRowChanging != null)) {
                    this.AdvRankAbilReqsRowChanging(this, new AdvRankAbilReqsRowChangeEvent(((AdvRankAbilReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AdvRankAbilReqsRowDeleted != null)) {
                    this.AdvRankAbilReqsRowDeleted(this, new AdvRankAbilReqsRowChangeEvent(((AdvRankAbilReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AdvRankAbilReqsRowDeleting != null)) {
                    this.AdvRankAbilReqsRowDeleting(this, new AdvRankAbilReqsRowChangeEvent(((AdvRankAbilReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAdvRankAbilReqsRow(AdvRankAbilReqsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AdvRankAbilReqsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AdvRankAbilBonusesDataTable : global::System.Data.TypedTableBase<AdvRankAbilBonusesRow> {
            
            private global::System.Data.DataColumn columnAdvancement_Name;
            
            private global::System.Data.DataColumn columnAdvancement_Rank;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactNo;
            
            private global::System.Data.DataColumn columnOptionNo;
            
            private global::System.Data.DataColumn columnBonusAbilityName;
            
            private global::System.Data.DataColumn columnBonusAbilityScore;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilBonusesDataTable() {
                this.TableName = "AdvRankAbilBonuses";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvRankAbilBonusesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AdvRankAbilBonusesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_NameColumn {
                get {
                    return this.columnAdvancement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_RankColumn {
                get {
                    return this.columnAdvancement_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactNoColumn {
                get {
                    return this.columnFactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionNoColumn {
                get {
                    return this.columnOptionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BonusAbilityNameColumn {
                get {
                    return this.columnBonusAbilityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BonusAbilityScoreColumn {
                get {
                    return this.columnBonusAbilityScore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilBonusesRow this[int index] {
                get {
                    return ((AdvRankAbilBonusesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAbilBonusesRowChangeEventHandler AdvRankAbilBonusesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAbilBonusesRowChangeEventHandler AdvRankAbilBonusesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAbilBonusesRowChangeEventHandler AdvRankAbilBonusesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvRankAbilBonusesRowChangeEventHandler AdvRankAbilBonusesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAdvRankAbilBonusesRow(AdvRankAbilBonusesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilBonusesRow AddAdvRankAbilBonusesRow(string Advancement_Name, int Advancement_Rank, string FactType, int FactNo, int OptionNo, AbilitiesRow parentAbilitiesRowByFK_Abilities_AdvRankAbilBonus, decimal BonusAbilityScore) {
                AdvRankAbilBonusesRow rowAdvRankAbilBonusesRow = ((AdvRankAbilBonusesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Advancement_Name,
                        Advancement_Rank,
                        FactType,
                        FactNo,
                        OptionNo,
                        null,
                        BonusAbilityScore};
                if ((parentAbilitiesRowByFK_Abilities_AdvRankAbilBonus != null)) {
                    columnValuesArray[5] = parentAbilitiesRowByFK_Abilities_AdvRankAbilBonus[0];
                }
                rowAdvRankAbilBonusesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAdvRankAbilBonusesRow);
                return rowAdvRankAbilBonusesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilBonusesRow FindByAdvancement_NameAdvancement_RankFactTypeFactNoOptionNo(string Advancement_Name, int Advancement_Rank, string FactType, int FactNo, int OptionNo) {
                return ((AdvRankAbilBonusesRow)(this.Rows.Find(new object[] {
                            Advancement_Name,
                            Advancement_Rank,
                            FactType,
                            FactNo,
                            OptionNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AdvRankAbilBonusesDataTable cln = ((AdvRankAbilBonusesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AdvRankAbilBonusesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAdvancement_Name = base.Columns["Advancement_Name"];
                this.columnAdvancement_Rank = base.Columns["Advancement_Rank"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactNo = base.Columns["FactNo"];
                this.columnOptionNo = base.Columns["OptionNo"];
                this.columnBonusAbilityName = base.Columns["BonusAbilityName"];
                this.columnBonusAbilityScore = base.Columns["BonusAbilityScore"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAdvancement_Name = new global::System.Data.DataColumn("Advancement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Name);
                this.columnAdvancement_Rank = new global::System.Data.DataColumn("Advancement_Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Rank);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactNo = new global::System.Data.DataColumn("FactNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactNo);
                this.columnOptionNo = new global::System.Data.DataColumn("OptionNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionNo);
                this.columnBonusAbilityName = new global::System.Data.DataColumn("BonusAbilityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonusAbilityName);
                this.columnBonusAbilityScore = new global::System.Data.DataColumn("BonusAbilityScore", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonusAbilityScore);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAdvancement_Name,
                                this.columnAdvancement_Rank,
                                this.columnFactType,
                                this.columnFactNo,
                                this.columnOptionNo}, true));
                this.columnAdvancement_Name.AllowDBNull = false;
                this.columnAdvancement_Rank.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactNo.AllowDBNull = false;
                this.columnOptionNo.AllowDBNull = false;
                this.columnBonusAbilityName.AllowDBNull = false;
                this.columnBonusAbilityScore.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilBonusesRow NewAdvRankAbilBonusesRow() {
                return ((AdvRankAbilBonusesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AdvRankAbilBonusesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AdvRankAbilBonusesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AdvRankAbilBonusesRowChanged != null)) {
                    this.AdvRankAbilBonusesRowChanged(this, new AdvRankAbilBonusesRowChangeEvent(((AdvRankAbilBonusesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AdvRankAbilBonusesRowChanging != null)) {
                    this.AdvRankAbilBonusesRowChanging(this, new AdvRankAbilBonusesRowChangeEvent(((AdvRankAbilBonusesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AdvRankAbilBonusesRowDeleted != null)) {
                    this.AdvRankAbilBonusesRowDeleted(this, new AdvRankAbilBonusesRowChangeEvent(((AdvRankAbilBonusesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AdvRankAbilBonusesRowDeleting != null)) {
                    this.AdvRankAbilBonusesRowDeleting(this, new AdvRankAbilBonusesRowChangeEvent(((AdvRankAbilBonusesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAdvRankAbilBonusesRow(AdvRankAbilBonusesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AdvRankAbilBonusesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AdvancementRankFactStringsDataTable : global::System.Data.TypedTableBase<AdvancementRankFactStringsRow> {
            
            private global::System.Data.DataColumn columnAdvancement_Name;
            
            private global::System.Data.DataColumn columnAdvancement_Rank;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactString;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactStringsDataTable() {
                this.TableName = "AdvancementRankFactStrings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvancementRankFactStringsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AdvancementRankFactStringsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_NameColumn {
                get {
                    return this.columnAdvancement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_RankColumn {
                get {
                    return this.columnAdvancement_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactStringColumn {
                get {
                    return this.columnFactString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactStringsRow this[int index] {
                get {
                    return ((AdvancementRankFactStringsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementRankFactStringsRowChangeEventHandler AdvancementRankFactStringsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementRankFactStringsRowChangeEventHandler AdvancementRankFactStringsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementRankFactStringsRowChangeEventHandler AdvancementRankFactStringsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AdvancementRankFactStringsRowChangeEventHandler AdvancementRankFactStringsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAdvancementRankFactStringsRow(AdvancementRankFactStringsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactStringsRow AddAdvancementRankFactStringsRow(string Advancement_Name, int Advancement_Rank, string FactType, string FactString) {
                AdvancementRankFactStringsRow rowAdvancementRankFactStringsRow = ((AdvancementRankFactStringsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Advancement_Name,
                        Advancement_Rank,
                        FactType,
                        FactString};
                rowAdvancementRankFactStringsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAdvancementRankFactStringsRow);
                return rowAdvancementRankFactStringsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactStringsRow FindByAdvancement_NameAdvancement_RankFactType(string Advancement_Name, int Advancement_Rank, string FactType) {
                return ((AdvancementRankFactStringsRow)(this.Rows.Find(new object[] {
                            Advancement_Name,
                            Advancement_Rank,
                            FactType})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AdvancementRankFactStringsDataTable cln = ((AdvancementRankFactStringsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AdvancementRankFactStringsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAdvancement_Name = base.Columns["Advancement_Name"];
                this.columnAdvancement_Rank = base.Columns["Advancement_Rank"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactString = base.Columns["FactString"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAdvancement_Name = new global::System.Data.DataColumn("Advancement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Name);
                this.columnAdvancement_Rank = new global::System.Data.DataColumn("Advancement_Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Rank);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactString = new global::System.Data.DataColumn("FactString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactString);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAdvancement_Name,
                                this.columnAdvancement_Rank,
                                this.columnFactType}, true));
                this.columnAdvancement_Name.AllowDBNull = false;
                this.columnAdvancement_Rank.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactString.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactStringsRow NewAdvancementRankFactStringsRow() {
                return ((AdvancementRankFactStringsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AdvancementRankFactStringsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AdvancementRankFactStringsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AdvancementRankFactStringsRowChanged != null)) {
                    this.AdvancementRankFactStringsRowChanged(this, new AdvancementRankFactStringsRowChangeEvent(((AdvancementRankFactStringsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AdvancementRankFactStringsRowChanging != null)) {
                    this.AdvancementRankFactStringsRowChanging(this, new AdvancementRankFactStringsRowChangeEvent(((AdvancementRankFactStringsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AdvancementRankFactStringsRowDeleted != null)) {
                    this.AdvancementRankFactStringsRowDeleted(this, new AdvancementRankFactStringsRowChangeEvent(((AdvancementRankFactStringsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AdvancementRankFactStringsRowDeleting != null)) {
                    this.AdvancementRankFactStringsRowDeleting(this, new AdvancementRankFactStringsRowChangeEvent(((AdvancementRankFactStringsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAdvancementRankFactStringsRow(AdvancementRankFactStringsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AdvancementRankFactStringsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FeatsDataTable : global::System.Data.TypedTableBase<FeatsRow> {
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnFeatType;
            
            private global::System.Data.DataColumn columnRole_Name;
            
            private global::System.Data.DataColumn columnAdvancement_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatsDataTable() {
                this.TableName = "Feats";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FeatsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FeatsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FeatTypeColumn {
                get {
                    return this.columnFeatType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Role_NameColumn {
                get {
                    return this.columnRole_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_NameColumn {
                get {
                    return this.columnAdvancement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatsRow this[int index] {
                get {
                    return ((FeatsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatsRowChangeEventHandler FeatsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatsRowChangeEventHandler FeatsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatsRowChangeEventHandler FeatsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatsRowChangeEventHandler FeatsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFeatsRow(FeatsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatsRow AddFeatsRow(string Name, string FeatType, RolesRow parentRolesRowByFK_Roles_Feats, AdvancementsRow parentAdvancementsRowByFK_Advancements_Feats) {
                FeatsRow rowFeatsRow = ((FeatsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name,
                        FeatType,
                        null,
                        null};
                if ((parentRolesRowByFK_Roles_Feats != null)) {
                    columnValuesArray[2] = parentRolesRowByFK_Roles_Feats[0];
                }
                if ((parentAdvancementsRowByFK_Advancements_Feats != null)) {
                    columnValuesArray[3] = parentAdvancementsRowByFK_Advancements_Feats[0];
                }
                rowFeatsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFeatsRow);
                return rowFeatsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatsRow FindByName(string Name) {
                return ((FeatsRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FeatsDataTable cln = ((FeatsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FeatsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnFeatType = base.Columns["FeatType"];
                this.columnRole_Name = base.Columns["Role_Name"];
                this.columnAdvancement_Name = base.Columns["Advancement_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnFeatType = new global::System.Data.DataColumn("FeatType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeatType);
                this.columnRole_Name = new global::System.Data.DataColumn("Role_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRole_Name);
                this.columnAdvancement_Name = new global::System.Data.DataColumn("Advancement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.Constraints.Add(new global::System.Data.UniqueConstraint("FeatsKey1", new global::System.Data.DataColumn[] {
                                this.columnName,
                                this.columnAdvancement_Name}, false));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
                this.columnFeatType.AllowDBNull = false;
                this.columnRole_Name.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatsRow NewFeatsRow() {
                return ((FeatsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FeatsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FeatsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FeatsRowChanged != null)) {
                    this.FeatsRowChanged(this, new FeatsRowChangeEvent(((FeatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FeatsRowChanging != null)) {
                    this.FeatsRowChanging(this, new FeatsRowChangeEvent(((FeatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FeatsRowDeleted != null)) {
                    this.FeatsRowDeleted(this, new FeatsRowChangeEvent(((FeatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FeatsRowDeleting != null)) {
                    this.FeatsRowDeleting(this, new FeatsRowChangeEvent(((FeatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFeatsRow(FeatsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FeatsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RolesDataTable : global::System.Data.TypedTableBase<RolesRow> {
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RolesDataTable() {
                this.TableName = "Roles";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RolesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RolesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RolesRow this[int index] {
                get {
                    return ((RolesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RolesRowChangeEventHandler RolesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RolesRowChangeEventHandler RolesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RolesRowChangeEventHandler RolesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RolesRowChangeEventHandler RolesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRolesRow(RolesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RolesRow AddRolesRow(string Name) {
                RolesRow rowRolesRow = ((RolesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name};
                rowRolesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRolesRow);
                return rowRolesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RolesRow FindByName(string Name) {
                return ((RolesRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RolesDataTable cln = ((RolesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RolesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RolesRow NewRolesRow() {
                return ((RolesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RolesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RolesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RolesRowChanged != null)) {
                    this.RolesRowChanged(this, new RolesRowChangeEvent(((RolesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RolesRowChanging != null)) {
                    this.RolesRowChanging(this, new RolesRowChangeEvent(((RolesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RolesRowDeleted != null)) {
                    this.RolesRowDeleted(this, new RolesRowChangeEvent(((RolesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RolesRowDeleting != null)) {
                    this.RolesRowDeleting(this, new RolesRowChangeEvent(((RolesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRolesRow(RolesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RolesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AttackFormsDataTable : global::System.Data.TypedTableBase<AttackFormsRow> {
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackFormsDataTable() {
                this.TableName = "AttackForms";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AttackFormsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AttackFormsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackFormsRow this[int index] {
                get {
                    return ((AttackFormsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AttackFormsRowChangeEventHandler AttackFormsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AttackFormsRowChangeEventHandler AttackFormsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AttackFormsRowChangeEventHandler AttackFormsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AttackFormsRowChangeEventHandler AttackFormsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAttackFormsRow(AttackFormsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackFormsRow AddAttackFormsRow(string Name) {
                AttackFormsRow rowAttackFormsRow = ((AttackFormsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name};
                rowAttackFormsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAttackFormsRow);
                return rowAttackFormsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackFormsRow FindByName(string Name) {
                return ((AttackFormsRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AttackFormsDataTable cln = ((AttackFormsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AttackFormsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackFormsRow NewAttackFormsRow() {
                return ((AttackFormsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AttackFormsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AttackFormsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AttackFormsRowChanged != null)) {
                    this.AttackFormsRowChanged(this, new AttackFormsRowChangeEvent(((AttackFormsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AttackFormsRowChanging != null)) {
                    this.AttackFormsRowChanging(this, new AttackFormsRowChangeEvent(((AttackFormsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AttackFormsRowDeleted != null)) {
                    this.AttackFormsRowDeleted(this, new AttackFormsRowChangeEvent(((AttackFormsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AttackFormsRowDeleting != null)) {
                    this.AttackFormsRowDeleting(this, new AttackFormsRowChangeEvent(((AttackFormsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAttackFormsRow(AttackFormsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AttackFormsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WeaponCategoriesDataTable : global::System.Data.TypedTableBase<WeaponCategoriesRow> {
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WeaponCategoriesDataTable() {
                this.TableName = "WeaponCategories";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WeaponCategoriesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected WeaponCategoriesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WeaponCategoriesRow this[int index] {
                get {
                    return ((WeaponCategoriesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WeaponCategoriesRowChangeEventHandler WeaponCategoriesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WeaponCategoriesRowChangeEventHandler WeaponCategoriesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WeaponCategoriesRowChangeEventHandler WeaponCategoriesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WeaponCategoriesRowChangeEventHandler WeaponCategoriesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddWeaponCategoriesRow(WeaponCategoriesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WeaponCategoriesRow AddWeaponCategoriesRow(string Name) {
                WeaponCategoriesRow rowWeaponCategoriesRow = ((WeaponCategoriesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name};
                rowWeaponCategoriesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWeaponCategoriesRow);
                return rowWeaponCategoriesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WeaponCategoriesRow FindByName(string Name) {
                return ((WeaponCategoriesRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WeaponCategoriesDataTable cln = ((WeaponCategoriesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WeaponCategoriesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WeaponCategoriesRow NewWeaponCategoriesRow() {
                return ((WeaponCategoriesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WeaponCategoriesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WeaponCategoriesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WeaponCategoriesRowChanged != null)) {
                    this.WeaponCategoriesRowChanged(this, new WeaponCategoriesRowChangeEvent(((WeaponCategoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WeaponCategoriesRowChanging != null)) {
                    this.WeaponCategoriesRowChanging(this, new WeaponCategoriesRowChangeEvent(((WeaponCategoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WeaponCategoriesRowDeleted != null)) {
                    this.WeaponCategoriesRowDeleted(this, new WeaponCategoriesRowChangeEvent(((WeaponCategoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WeaponCategoriesRowDeleting != null)) {
                    this.WeaponCategoriesRowDeleting(this, new WeaponCategoriesRowChangeEvent(((WeaponCategoriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveWeaponCategoriesRow(WeaponCategoriesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WeaponCategoriesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SpecificWeaponsDataTable : global::System.Data.TypedTableBase<SpecificWeaponsRow> {
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpecificWeaponsDataTable() {
                this.TableName = "SpecificWeapons";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SpecificWeaponsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SpecificWeaponsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpecificWeaponsRow this[int index] {
                get {
                    return ((SpecificWeaponsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SpecificWeaponsRowChangeEventHandler SpecificWeaponsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SpecificWeaponsRowChangeEventHandler SpecificWeaponsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SpecificWeaponsRowChangeEventHandler SpecificWeaponsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SpecificWeaponsRowChangeEventHandler SpecificWeaponsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSpecificWeaponsRow(SpecificWeaponsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpecificWeaponsRow AddSpecificWeaponsRow(string Name) {
                SpecificWeaponsRow rowSpecificWeaponsRow = ((SpecificWeaponsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name};
                rowSpecificWeaponsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSpecificWeaponsRow);
                return rowSpecificWeaponsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpecificWeaponsRow FindByName(string Name) {
                return ((SpecificWeaponsRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SpecificWeaponsDataTable cln = ((SpecificWeaponsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SpecificWeaponsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpecificWeaponsRow NewSpecificWeaponsRow() {
                return ((SpecificWeaponsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SpecificWeaponsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SpecificWeaponsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SpecificWeaponsRowChanged != null)) {
                    this.SpecificWeaponsRowChanged(this, new SpecificWeaponsRowChangeEvent(((SpecificWeaponsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SpecificWeaponsRowChanging != null)) {
                    this.SpecificWeaponsRowChanging(this, new SpecificWeaponsRowChangeEvent(((SpecificWeaponsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SpecificWeaponsRowDeleted != null)) {
                    this.SpecificWeaponsRowDeleted(this, new SpecificWeaponsRowChangeEvent(((SpecificWeaponsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SpecificWeaponsRowDeleting != null)) {
                    this.SpecificWeaponsRowDeleting(this, new SpecificWeaponsRowChangeEvent(((SpecificWeaponsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSpecificWeaponsRow(SpecificWeaponsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SpecificWeaponsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SchoolsDataTable : global::System.Data.TypedTableBase<SchoolsRow> {
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SchoolsDataTable() {
                this.TableName = "Schools";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SchoolsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SchoolsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SchoolsRow this[int index] {
                get {
                    return ((SchoolsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SchoolsRowChangeEventHandler SchoolsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SchoolsRowChangeEventHandler SchoolsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SchoolsRowChangeEventHandler SchoolsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SchoolsRowChangeEventHandler SchoolsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSchoolsRow(SchoolsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SchoolsRow AddSchoolsRow(string Name) {
                SchoolsRow rowSchoolsRow = ((SchoolsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name};
                rowSchoolsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSchoolsRow);
                return rowSchoolsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SchoolsRow FindByName(string Name) {
                return ((SchoolsRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SchoolsDataTable cln = ((SchoolsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SchoolsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SchoolsRow NewSchoolsRow() {
                return ((SchoolsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SchoolsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SchoolsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SchoolsRowChanged != null)) {
                    this.SchoolsRowChanged(this, new SchoolsRowChangeEvent(((SchoolsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SchoolsRowChanging != null)) {
                    this.SchoolsRowChanging(this, new SchoolsRowChangeEvent(((SchoolsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SchoolsRowDeleted != null)) {
                    this.SchoolsRowDeleted(this, new SchoolsRowChangeEvent(((SchoolsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SchoolsRowDeleting != null)) {
                    this.SchoolsRowDeleting(this, new SchoolsRowChangeEvent(((SchoolsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSchoolsRow(SchoolsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SchoolsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EffectChannelsDataTable : global::System.Data.TypedTableBase<EffectChannelsRow> {
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectChannelsDataTable() {
                this.TableName = "EffectChannels";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EffectChannelsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EffectChannelsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectChannelsRow this[int index] {
                get {
                    return ((EffectChannelsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectChannelsRowChangeEventHandler EffectChannelsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectChannelsRowChangeEventHandler EffectChannelsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectChannelsRowChangeEventHandler EffectChannelsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectChannelsRowChangeEventHandler EffectChannelsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEffectChannelsRow(EffectChannelsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectChannelsRow AddEffectChannelsRow(string Name) {
                EffectChannelsRow rowEffectChannelsRow = ((EffectChannelsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name};
                rowEffectChannelsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEffectChannelsRow);
                return rowEffectChannelsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectChannelsRow FindByName(string Name) {
                return ((EffectChannelsRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EffectChannelsDataTable cln = ((EffectChannelsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EffectChannelsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectChannelsRow NewEffectChannelsRow() {
                return ((EffectChannelsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EffectChannelsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EffectChannelsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EffectChannelsRowChanged != null)) {
                    this.EffectChannelsRowChanged(this, new EffectChannelsRowChangeEvent(((EffectChannelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EffectChannelsRowChanging != null)) {
                    this.EffectChannelsRowChanging(this, new EffectChannelsRowChangeEvent(((EffectChannelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EffectChannelsRowDeleted != null)) {
                    this.EffectChannelsRowDeleted(this, new EffectChannelsRowChangeEvent(((EffectChannelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EffectChannelsRowDeleting != null)) {
                    this.EffectChannelsRowDeleting(this, new EffectChannelsRowChangeEvent(((EffectChannelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEffectChannelsRow(EffectChannelsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EffectChannelsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ActiveFeatsDataTable : global::System.Data.TypedTableBase<ActiveFeatsRow> {
            
            private global::System.Data.DataColumn columnFeat_Name;
            
            private global::System.Data.DataColumn columnDamageFactor;
            
            private global::System.Data.DataColumn columnAttackSeconds;
            
            private global::System.Data.DataColumn columnStaminaCost;
            
            private global::System.Data.DataColumn columnIsMelee;
            
            private global::System.Data.DataColumn columnRange;
            
            private global::System.Data.DataColumn columnWeaponCategory_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActiveFeatsDataTable() {
                this.TableName = "ActiveFeats";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ActiveFeatsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ActiveFeatsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_NameColumn {
                get {
                    return this.columnFeat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DamageFactorColumn {
                get {
                    return this.columnDamageFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttackSecondsColumn {
                get {
                    return this.columnAttackSeconds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StaminaCostColumn {
                get {
                    return this.columnStaminaCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsMeleeColumn {
                get {
                    return this.columnIsMelee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RangeColumn {
                get {
                    return this.columnRange;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WeaponCategory_NameColumn {
                get {
                    return this.columnWeaponCategory_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActiveFeatsRow this[int index] {
                get {
                    return ((ActiveFeatsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ActiveFeatsRowChangeEventHandler ActiveFeatsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ActiveFeatsRowChangeEventHandler ActiveFeatsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ActiveFeatsRowChangeEventHandler ActiveFeatsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ActiveFeatsRowChangeEventHandler ActiveFeatsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddActiveFeatsRow(ActiveFeatsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActiveFeatsRow AddActiveFeatsRow(FeatsRow parentFeatsRowByFK_Feats_ActiveFeats, decimal DamageFactor, decimal AttackSeconds, int StaminaCost, bool IsMelee, decimal Range, WeaponCategoriesRow parentWeaponCategoriesRowByFK_WeaponCategories_ActiveFeats) {
                ActiveFeatsRow rowActiveFeatsRow = ((ActiveFeatsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DamageFactor,
                        AttackSeconds,
                        StaminaCost,
                        IsMelee,
                        Range,
                        null};
                if ((parentFeatsRowByFK_Feats_ActiveFeats != null)) {
                    columnValuesArray[0] = parentFeatsRowByFK_Feats_ActiveFeats[0];
                }
                if ((parentWeaponCategoriesRowByFK_WeaponCategories_ActiveFeats != null)) {
                    columnValuesArray[6] = parentWeaponCategoriesRowByFK_WeaponCategories_ActiveFeats[0];
                }
                rowActiveFeatsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowActiveFeatsRow);
                return rowActiveFeatsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActiveFeatsRow FindByFeat_Name(string Feat_Name) {
                return ((ActiveFeatsRow)(this.Rows.Find(new object[] {
                            Feat_Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ActiveFeatsDataTable cln = ((ActiveFeatsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ActiveFeatsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFeat_Name = base.Columns["Feat_Name"];
                this.columnDamageFactor = base.Columns["DamageFactor"];
                this.columnAttackSeconds = base.Columns["AttackSeconds"];
                this.columnStaminaCost = base.Columns["StaminaCost"];
                this.columnIsMelee = base.Columns["IsMelee"];
                this.columnRange = base.Columns["Range"];
                this.columnWeaponCategory_Name = base.Columns["WeaponCategory_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFeat_Name = new global::System.Data.DataColumn("Feat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Name);
                this.columnDamageFactor = new global::System.Data.DataColumn("DamageFactor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDamageFactor);
                this.columnAttackSeconds = new global::System.Data.DataColumn("AttackSeconds", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttackSeconds);
                this.columnStaminaCost = new global::System.Data.DataColumn("StaminaCost", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaminaCost);
                this.columnIsMelee = new global::System.Data.DataColumn("IsMelee", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsMelee);
                this.columnRange = new global::System.Data.DataColumn("Range", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRange);
                this.columnWeaponCategory_Name = new global::System.Data.DataColumn("WeaponCategory_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeaponCategory_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeat_Name}, true));
                this.columnFeat_Name.AllowDBNull = false;
                this.columnFeat_Name.Unique = true;
                this.columnDamageFactor.AllowDBNull = false;
                this.columnAttackSeconds.AllowDBNull = false;
                this.columnStaminaCost.AllowDBNull = false;
                this.columnIsMelee.AllowDBNull = false;
                this.columnWeaponCategory_Name.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActiveFeatsRow NewActiveFeatsRow() {
                return ((ActiveFeatsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ActiveFeatsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ActiveFeatsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ActiveFeatsRowChanged != null)) {
                    this.ActiveFeatsRowChanged(this, new ActiveFeatsRowChangeEvent(((ActiveFeatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ActiveFeatsRowChanging != null)) {
                    this.ActiveFeatsRowChanging(this, new ActiveFeatsRowChangeEvent(((ActiveFeatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ActiveFeatsRowDeleted != null)) {
                    this.ActiveFeatsRowDeleted(this, new ActiveFeatsRowChangeEvent(((ActiveFeatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ActiveFeatsRowDeleting != null)) {
                    this.ActiveFeatsRowDeleting(this, new ActiveFeatsRowChangeEvent(((ActiveFeatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveActiveFeatsRow(ActiveFeatsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ActiveFeatsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StandardAttacksDataTable : global::System.Data.TypedTableBase<StandardAttacksRow> {
            
            private global::System.Data.DataColumn columnFeat_Name;
            
            private global::System.Data.DataColumn columnAttackForm_Name;
            
            private global::System.Data.DataColumn columnCooldownSeconds;
            
            private global::System.Data.DataColumn columnSpecificWeapon_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StandardAttacksDataTable() {
                this.TableName = "StandardAttacks";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StandardAttacksDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected StandardAttacksDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_NameColumn {
                get {
                    return this.columnFeat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttackForm_NameColumn {
                get {
                    return this.columnAttackForm_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CooldownSecondsColumn {
                get {
                    return this.columnCooldownSeconds;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecificWeapon_NameColumn {
                get {
                    return this.columnSpecificWeapon_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StandardAttacksRow this[int index] {
                get {
                    return ((StandardAttacksRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StandardAttacksRowChangeEventHandler StandardAttacksRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StandardAttacksRowChangeEventHandler StandardAttacksRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StandardAttacksRowChangeEventHandler StandardAttacksRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event StandardAttacksRowChangeEventHandler StandardAttacksRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStandardAttacksRow(StandardAttacksRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StandardAttacksRow AddStandardAttacksRow(ActiveFeatsRow parentActiveFeatsRowByFK_ActiveFeats_StandardAttacks, AttackFormsRow parentAttackFormsRowByFK_AttackForms_StandardAttacks, decimal CooldownSeconds, SpecificWeaponsRow parentSpecificWeaponsRowByFK_SpecificWeapons_StandardAttacks) {
                StandardAttacksRow rowStandardAttacksRow = ((StandardAttacksRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        CooldownSeconds,
                        null};
                if ((parentActiveFeatsRowByFK_ActiveFeats_StandardAttacks != null)) {
                    columnValuesArray[0] = parentActiveFeatsRowByFK_ActiveFeats_StandardAttacks[0];
                }
                if ((parentAttackFormsRowByFK_AttackForms_StandardAttacks != null)) {
                    columnValuesArray[1] = parentAttackFormsRowByFK_AttackForms_StandardAttacks[0];
                }
                if ((parentSpecificWeaponsRowByFK_SpecificWeapons_StandardAttacks != null)) {
                    columnValuesArray[3] = parentSpecificWeaponsRowByFK_SpecificWeapons_StandardAttacks[0];
                }
                rowStandardAttacksRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStandardAttacksRow);
                return rowStandardAttacksRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StandardAttacksRow FindByFeat_Name(string Feat_Name) {
                return ((StandardAttacksRow)(this.Rows.Find(new object[] {
                            Feat_Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StandardAttacksDataTable cln = ((StandardAttacksDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StandardAttacksDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFeat_Name = base.Columns["Feat_Name"];
                this.columnAttackForm_Name = base.Columns["AttackForm_Name"];
                this.columnCooldownSeconds = base.Columns["CooldownSeconds"];
                this.columnSpecificWeapon_Name = base.Columns["SpecificWeapon_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFeat_Name = new global::System.Data.DataColumn("Feat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Name);
                this.columnAttackForm_Name = new global::System.Data.DataColumn("AttackForm_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttackForm_Name);
                this.columnCooldownSeconds = new global::System.Data.DataColumn("CooldownSeconds", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCooldownSeconds);
                this.columnSpecificWeapon_Name = new global::System.Data.DataColumn("SpecificWeapon_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecificWeapon_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeat_Name}, true));
                this.columnFeat_Name.AllowDBNull = false;
                this.columnFeat_Name.Unique = true;
                this.columnAttackForm_Name.AllowDBNull = false;
                this.columnCooldownSeconds.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StandardAttacksRow NewStandardAttacksRow() {
                return ((StandardAttacksRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StandardAttacksRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StandardAttacksRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StandardAttacksRowChanged != null)) {
                    this.StandardAttacksRowChanged(this, new StandardAttacksRowChangeEvent(((StandardAttacksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StandardAttacksRowChanging != null)) {
                    this.StandardAttacksRowChanging(this, new StandardAttacksRowChangeEvent(((StandardAttacksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StandardAttacksRowDeleted != null)) {
                    this.StandardAttacksRowDeleted(this, new StandardAttacksRowChangeEvent(((StandardAttacksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StandardAttacksRowDeleting != null)) {
                    this.StandardAttacksRowDeleting(this, new StandardAttacksRowChangeEvent(((StandardAttacksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStandardAttacksRow(StandardAttacksRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StandardAttacksDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PowerAttacksDataTable : global::System.Data.TypedTableBase<PowerAttacksRow> {
            
            private global::System.Data.DataColumn columnFeat_Name;
            
            private global::System.Data.DataColumn columnPowerCost;
            
            private global::System.Data.DataColumn columnLevel;
            
            private global::System.Data.DataColumn columnHasEndOfCombatCooldown;
            
            private global::System.Data.DataColumn columnAttackBonus_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PowerAttacksDataTable() {
                this.TableName = "PowerAttacks";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PowerAttacksDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PowerAttacksDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_NameColumn {
                get {
                    return this.columnFeat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PowerCostColumn {
                get {
                    return this.columnPowerCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LevelColumn {
                get {
                    return this.columnLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HasEndOfCombatCooldownColumn {
                get {
                    return this.columnHasEndOfCombatCooldown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AttackBonus_NameColumn {
                get {
                    return this.columnAttackBonus_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PowerAttacksRow this[int index] {
                get {
                    return ((PowerAttacksRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PowerAttacksRowChangeEventHandler PowerAttacksRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PowerAttacksRowChangeEventHandler PowerAttacksRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PowerAttacksRowChangeEventHandler PowerAttacksRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PowerAttacksRowChangeEventHandler PowerAttacksRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPowerAttacksRow(PowerAttacksRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PowerAttacksRow AddPowerAttacksRow(ActiveFeatsRow parentActiveFeatsRowByFK_ActiveFeats_PowerAttacks, int PowerCost, int Level, bool HasEndOfCombatCooldown, AttackBonusesRow parentAttackBonusesRowByFK_AttackBonuses_PowerAttacks) {
                PowerAttacksRow rowPowerAttacksRow = ((PowerAttacksRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PowerCost,
                        Level,
                        HasEndOfCombatCooldown,
                        null};
                if ((parentActiveFeatsRowByFK_ActiveFeats_PowerAttacks != null)) {
                    columnValuesArray[0] = parentActiveFeatsRowByFK_ActiveFeats_PowerAttacks[0];
                }
                if ((parentAttackBonusesRowByFK_AttackBonuses_PowerAttacks != null)) {
                    columnValuesArray[4] = parentAttackBonusesRowByFK_AttackBonuses_PowerAttacks[0];
                }
                rowPowerAttacksRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPowerAttacksRow);
                return rowPowerAttacksRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PowerAttacksRow FindByFeat_Name(string Feat_Name) {
                return ((PowerAttacksRow)(this.Rows.Find(new object[] {
                            Feat_Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PowerAttacksDataTable cln = ((PowerAttacksDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PowerAttacksDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFeat_Name = base.Columns["Feat_Name"];
                this.columnPowerCost = base.Columns["PowerCost"];
                this.columnLevel = base.Columns["Level"];
                this.columnHasEndOfCombatCooldown = base.Columns["HasEndOfCombatCooldown"];
                this.columnAttackBonus_Name = base.Columns["AttackBonus_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFeat_Name = new global::System.Data.DataColumn("Feat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Name);
                this.columnPowerCost = new global::System.Data.DataColumn("PowerCost", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPowerCost);
                this.columnLevel = new global::System.Data.DataColumn("Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLevel);
                this.columnHasEndOfCombatCooldown = new global::System.Data.DataColumn("HasEndOfCombatCooldown", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasEndOfCombatCooldown);
                this.columnAttackBonus_Name = new global::System.Data.DataColumn("AttackBonus_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttackBonus_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeat_Name}, true));
                this.columnFeat_Name.AllowDBNull = false;
                this.columnFeat_Name.Unique = true;
                this.columnPowerCost.AllowDBNull = false;
                this.columnLevel.AllowDBNull = false;
                this.columnHasEndOfCombatCooldown.AllowDBNull = false;
                this.columnAttackBonus_Name.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PowerAttacksRow NewPowerAttacksRow() {
                return ((PowerAttacksRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PowerAttacksRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PowerAttacksRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PowerAttacksRowChanged != null)) {
                    this.PowerAttacksRowChanged(this, new PowerAttacksRowChangeEvent(((PowerAttacksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PowerAttacksRowChanging != null)) {
                    this.PowerAttacksRowChanging(this, new PowerAttacksRowChangeEvent(((PowerAttacksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PowerAttacksRowDeleted != null)) {
                    this.PowerAttacksRowDeleted(this, new PowerAttacksRowChangeEvent(((PowerAttacksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PowerAttacksRowDeleting != null)) {
                    this.PowerAttacksRowDeleting(this, new PowerAttacksRowChangeEvent(((PowerAttacksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePowerAttacksRow(PowerAttacksRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PowerAttacksDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CantripsDataTable : global::System.Data.TypedTableBase<CantripsRow> {
            
            private global::System.Data.DataColumn columnFeat_Name;
            
            private global::System.Data.DataColumn columnSchool_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CantripsDataTable() {
                this.TableName = "Cantrips";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CantripsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CantripsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_NameColumn {
                get {
                    return this.columnFeat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn School_NameColumn {
                get {
                    return this.columnSchool_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CantripsRow this[int index] {
                get {
                    return ((CantripsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CantripsRowChangeEventHandler CantripsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CantripsRowChangeEventHandler CantripsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CantripsRowChangeEventHandler CantripsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CantripsRowChangeEventHandler CantripsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCantripsRow(CantripsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CantripsRow AddCantripsRow(StandardAttacksRow parentStandardAttacksRowByFK_StandardAttacks_Cantrips, SchoolsRow parentSchoolsRowByFK_Schools_Cantrips) {
                CantripsRow rowCantripsRow = ((CantripsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentStandardAttacksRowByFK_StandardAttacks_Cantrips != null)) {
                    columnValuesArray[0] = parentStandardAttacksRowByFK_StandardAttacks_Cantrips[0];
                }
                if ((parentSchoolsRowByFK_Schools_Cantrips != null)) {
                    columnValuesArray[1] = parentSchoolsRowByFK_Schools_Cantrips[0];
                }
                rowCantripsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCantripsRow);
                return rowCantripsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CantripsRow FindByFeat_Name(string Feat_Name) {
                return ((CantripsRow)(this.Rows.Find(new object[] {
                            Feat_Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CantripsDataTable cln = ((CantripsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CantripsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFeat_Name = base.Columns["Feat_Name"];
                this.columnSchool_Name = base.Columns["School_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFeat_Name = new global::System.Data.DataColumn("Feat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Name);
                this.columnSchool_Name = new global::System.Data.DataColumn("School_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchool_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeat_Name}, true));
                this.columnFeat_Name.AllowDBNull = false;
                this.columnFeat_Name.Unique = true;
                this.columnSchool_Name.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CantripsRow NewCantripsRow() {
                return ((CantripsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CantripsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CantripsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CantripsRowChanged != null)) {
                    this.CantripsRowChanged(this, new CantripsRowChangeEvent(((CantripsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CantripsRowChanging != null)) {
                    this.CantripsRowChanging(this, new CantripsRowChangeEvent(((CantripsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CantripsRowDeleted != null)) {
                    this.CantripsRowDeleted(this, new CantripsRowChangeEvent(((CantripsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CantripsRowDeleting != null)) {
                    this.CantripsRowDeleting(this, new CantripsRowChangeEvent(((CantripsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCantripsRow(CantripsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CantripsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ChanneledFeatsDataTable : global::System.Data.TypedTableBase<ChanneledFeatsRow> {
            
            private global::System.Data.DataColumn columnFeat_Name;
            
            private global::System.Data.DataColumn columnChannel_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChanneledFeatsDataTable() {
                this.TableName = "ChanneledFeats";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ChanneledFeatsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ChanneledFeatsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_NameColumn {
                get {
                    return this.columnFeat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Channel_NameColumn {
                get {
                    return this.columnChannel_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChanneledFeatsRow this[int index] {
                get {
                    return ((ChanneledFeatsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChanneledFeatsRowChangeEventHandler ChanneledFeatsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChanneledFeatsRowChangeEventHandler ChanneledFeatsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChanneledFeatsRowChangeEventHandler ChanneledFeatsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ChanneledFeatsRowChangeEventHandler ChanneledFeatsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddChanneledFeatsRow(ChanneledFeatsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChanneledFeatsRow AddChanneledFeatsRow(FeatsRow parentFeatsRowByFK_Feats_ChanneledFeats, EffectChannelsRow parentEffectChannelsRowByFK_EffectChannels_ChanneledFeats) {
                ChanneledFeatsRow rowChanneledFeatsRow = ((ChanneledFeatsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentFeatsRowByFK_Feats_ChanneledFeats != null)) {
                    columnValuesArray[0] = parentFeatsRowByFK_Feats_ChanneledFeats[0];
                }
                if ((parentEffectChannelsRowByFK_EffectChannels_ChanneledFeats != null)) {
                    columnValuesArray[1] = parentEffectChannelsRowByFK_EffectChannels_ChanneledFeats[0];
                }
                rowChanneledFeatsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowChanneledFeatsRow);
                return rowChanneledFeatsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChanneledFeatsRow FindByFeat_Name(string Feat_Name) {
                return ((ChanneledFeatsRow)(this.Rows.Find(new object[] {
                            Feat_Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ChanneledFeatsDataTable cln = ((ChanneledFeatsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ChanneledFeatsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFeat_Name = base.Columns["Feat_Name"];
                this.columnChannel_Name = base.Columns["Channel_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFeat_Name = new global::System.Data.DataColumn("Feat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Name);
                this.columnChannel_Name = new global::System.Data.DataColumn("Channel_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChannel_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeat_Name}, true));
                this.columnFeat_Name.AllowDBNull = false;
                this.columnFeat_Name.Unique = true;
                this.columnChannel_Name.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChanneledFeatsRow NewChanneledFeatsRow() {
                return ((ChanneledFeatsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ChanneledFeatsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ChanneledFeatsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ChanneledFeatsRowChanged != null)) {
                    this.ChanneledFeatsRowChanged(this, new ChanneledFeatsRowChangeEvent(((ChanneledFeatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ChanneledFeatsRowChanging != null)) {
                    this.ChanneledFeatsRowChanging(this, new ChanneledFeatsRowChangeEvent(((ChanneledFeatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ChanneledFeatsRowDeleted != null)) {
                    this.ChanneledFeatsRowDeleted(this, new ChanneledFeatsRowChangeEvent(((ChanneledFeatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ChanneledFeatsRowDeleting != null)) {
                    this.ChanneledFeatsRowDeleting(this, new ChanneledFeatsRowChangeEvent(((ChanneledFeatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveChanneledFeatsRow(ChanneledFeatsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ChanneledFeatsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AttackBonusesDataTable : global::System.Data.TypedTableBase<AttackBonusesRow> {
            
            private global::System.Data.DataColumn columnFeat_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackBonusesDataTable() {
                this.TableName = "AttackBonuses";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AttackBonusesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AttackBonusesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_NameColumn {
                get {
                    return this.columnFeat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackBonusesRow this[int index] {
                get {
                    return ((AttackBonusesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AttackBonusesRowChangeEventHandler AttackBonusesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AttackBonusesRowChangeEventHandler AttackBonusesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AttackBonusesRowChangeEventHandler AttackBonusesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AttackBonusesRowChangeEventHandler AttackBonusesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAttackBonusesRow(AttackBonusesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackBonusesRow AddAttackBonusesRow(ChanneledFeatsRow parentChanneledFeatsRowByFK_ChanneledFeats_AttackBonuses) {
                AttackBonusesRow rowAttackBonusesRow = ((AttackBonusesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                if ((parentChanneledFeatsRowByFK_ChanneledFeats_AttackBonuses != null)) {
                    columnValuesArray[0] = parentChanneledFeatsRowByFK_ChanneledFeats_AttackBonuses[0];
                }
                rowAttackBonusesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAttackBonusesRow);
                return rowAttackBonusesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackBonusesRow FindByFeat_Name(string Feat_Name) {
                return ((AttackBonusesRow)(this.Rows.Find(new object[] {
                            Feat_Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AttackBonusesDataTable cln = ((AttackBonusesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AttackBonusesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFeat_Name = base.Columns["Feat_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFeat_Name = new global::System.Data.DataColumn("Feat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeat_Name}, true));
                this.columnFeat_Name.AllowDBNull = false;
                this.columnFeat_Name.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackBonusesRow NewAttackBonusesRow() {
                return ((AttackBonusesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AttackBonusesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AttackBonusesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AttackBonusesRowChanged != null)) {
                    this.AttackBonusesRowChanged(this, new AttackBonusesRowChangeEvent(((AttackBonusesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AttackBonusesRowChanging != null)) {
                    this.AttackBonusesRowChanging(this, new AttackBonusesRowChangeEvent(((AttackBonusesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AttackBonusesRowDeleted != null)) {
                    this.AttackBonusesRowDeleted(this, new AttackBonusesRowChangeEvent(((AttackBonusesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AttackBonusesRowDeleting != null)) {
                    this.AttackBonusesRowDeleting(this, new AttackBonusesRowChangeEvent(((AttackBonusesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAttackBonusesRow(AttackBonusesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AttackBonusesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RoleAchievementsDataTable : global::System.Data.TypedTableBase<RoleAchievementsRow> {
            
            private global::System.Data.DataColumn columnAchievement_Name;
            
            private global::System.Data.DataColumn columnRole_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RoleAchievementsDataTable() {
                this.TableName = "RoleAchievements";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RoleAchievementsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RoleAchievementsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_NameColumn {
                get {
                    return this.columnAchievement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Role_NameColumn {
                get {
                    return this.columnRole_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RoleAchievementsRow this[int index] {
                get {
                    return ((RoleAchievementsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RoleAchievementsRowChangeEventHandler RoleAchievementsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RoleAchievementsRowChangeEventHandler RoleAchievementsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RoleAchievementsRowChangeEventHandler RoleAchievementsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RoleAchievementsRowChangeEventHandler RoleAchievementsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRoleAchievementsRow(RoleAchievementsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RoleAchievementsRow AddRoleAchievementsRow(AchievementsRow parentAchievementsRowByFK_Achievements_RoleAchievements, RolesRow parentRolesRowByFK_Roles_RoleAchievements) {
                RoleAchievementsRow rowRoleAchievementsRow = ((RoleAchievementsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentAchievementsRowByFK_Achievements_RoleAchievements != null)) {
                    columnValuesArray[0] = parentAchievementsRowByFK_Achievements_RoleAchievements[0];
                }
                if ((parentRolesRowByFK_Roles_RoleAchievements != null)) {
                    columnValuesArray[1] = parentRolesRowByFK_Roles_RoleAchievements[0];
                }
                rowRoleAchievementsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRoleAchievementsRow);
                return rowRoleAchievementsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RoleAchievementsRow FindByAchievement_Name(string Achievement_Name) {
                return ((RoleAchievementsRow)(this.Rows.Find(new object[] {
                            Achievement_Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RoleAchievementsDataTable cln = ((RoleAchievementsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RoleAchievementsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAchievement_Name = base.Columns["Achievement_Name"];
                this.columnRole_Name = base.Columns["Role_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAchievement_Name = new global::System.Data.DataColumn("Achievement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Name);
                this.columnRole_Name = new global::System.Data.DataColumn("Role_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRole_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAchievement_Name}, true));
                this.columnAchievement_Name.AllowDBNull = false;
                this.columnAchievement_Name.Unique = true;
                this.columnRole_Name.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RoleAchievementsRow NewRoleAchievementsRow() {
                return ((RoleAchievementsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RoleAchievementsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RoleAchievementsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RoleAchievementsRowChanged != null)) {
                    this.RoleAchievementsRowChanged(this, new RoleAchievementsRowChangeEvent(((RoleAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RoleAchievementsRowChanging != null)) {
                    this.RoleAchievementsRowChanging(this, new RoleAchievementsRowChangeEvent(((RoleAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RoleAchievementsRowDeleted != null)) {
                    this.RoleAchievementsRowDeleted(this, new RoleAchievementsRowChangeEvent(((RoleAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RoleAchievementsRowDeleting != null)) {
                    this.RoleAchievementsRowDeleting(this, new RoleAchievementsRowChangeEvent(((RoleAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRoleAchievementsRow(RoleAchievementsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RoleAchievementsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CraftAchievementsDataTable : global::System.Data.TypedTableBase<CraftAchievementsRow> {
            
            private global::System.Data.DataColumn columnAchievement_Name;
            
            private global::System.Data.DataColumn columnTier;
            
            private global::System.Data.DataColumn columnRarity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementsDataTable() {
                this.TableName = "CraftAchievements";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CraftAchievementsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CraftAchievementsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_NameColumn {
                get {
                    return this.columnAchievement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TierColumn {
                get {
                    return this.columnTier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RarityColumn {
                get {
                    return this.columnRarity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementsRow this[int index] {
                get {
                    return ((CraftAchievementsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftAchievementsRowChangeEventHandler CraftAchievementsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftAchievementsRowChangeEventHandler CraftAchievementsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftAchievementsRowChangeEventHandler CraftAchievementsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftAchievementsRowChangeEventHandler CraftAchievementsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCraftAchievementsRow(CraftAchievementsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementsRow AddCraftAchievementsRow(AchievementsRow parentAchievementsRowByFK_Achievements_CraftAchievements, int Tier, string Rarity) {
                CraftAchievementsRow rowCraftAchievementsRow = ((CraftAchievementsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Tier,
                        Rarity};
                if ((parentAchievementsRowByFK_Achievements_CraftAchievements != null)) {
                    columnValuesArray[0] = parentAchievementsRowByFK_Achievements_CraftAchievements[0];
                }
                rowCraftAchievementsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCraftAchievementsRow);
                return rowCraftAchievementsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementsRow FindByAchievement_Name(string Achievement_Name) {
                return ((CraftAchievementsRow)(this.Rows.Find(new object[] {
                            Achievement_Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CraftAchievementsDataTable cln = ((CraftAchievementsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CraftAchievementsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAchievement_Name = base.Columns["Achievement_Name"];
                this.columnTier = base.Columns["Tier"];
                this.columnRarity = base.Columns["Rarity"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAchievement_Name = new global::System.Data.DataColumn("Achievement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Name);
                this.columnTier = new global::System.Data.DataColumn("Tier", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTier);
                this.columnRarity = new global::System.Data.DataColumn("Rarity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRarity);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAchievement_Name}, true));
                this.columnAchievement_Name.AllowDBNull = false;
                this.columnAchievement_Name.Unique = true;
                this.columnTier.AllowDBNull = false;
                this.columnRarity.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementsRow NewCraftAchievementsRow() {
                return ((CraftAchievementsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CraftAchievementsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CraftAchievementsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CraftAchievementsRowChanged != null)) {
                    this.CraftAchievementsRowChanged(this, new CraftAchievementsRowChangeEvent(((CraftAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CraftAchievementsRowChanging != null)) {
                    this.CraftAchievementsRowChanging(this, new CraftAchievementsRowChangeEvent(((CraftAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CraftAchievementsRowDeleted != null)) {
                    this.CraftAchievementsRowDeleted(this, new CraftAchievementsRowChangeEvent(((CraftAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CraftAchievementsRowDeleting != null)) {
                    this.CraftAchievementsRowDeleting(this, new CraftAchievementsRowChangeEvent(((CraftAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCraftAchievementsRow(CraftAchievementsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CraftAchievementsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CraftingAchievementsDataTable : global::System.Data.TypedTableBase<CraftingAchievementsRow> {
            
            private global::System.Data.DataColumn columnAchievement_Name;
            
            private global::System.Data.DataColumn columnCraftingSkill_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingAchievementsDataTable() {
                this.TableName = "CraftingAchievements";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CraftingAchievementsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CraftingAchievementsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_NameColumn {
                get {
                    return this.columnAchievement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CraftingSkill_NameColumn {
                get {
                    return this.columnCraftingSkill_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingAchievementsRow this[int index] {
                get {
                    return ((CraftingAchievementsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftingAchievementsRowChangeEventHandler CraftingAchievementsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftingAchievementsRowChangeEventHandler CraftingAchievementsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftingAchievementsRowChangeEventHandler CraftingAchievementsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftingAchievementsRowChangeEventHandler CraftingAchievementsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCraftingAchievementsRow(CraftingAchievementsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingAchievementsRow AddCraftingAchievementsRow(CraftAchievementsRow parentCraftAchievementsRowByFK_CraftAchievements_CraftingAchievement, CraftingSkillsRow parentCraftingSkillsRowByFK_CraftingSkills_CraftingAchievement) {
                CraftingAchievementsRow rowCraftingAchievementsRow = ((CraftingAchievementsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentCraftAchievementsRowByFK_CraftAchievements_CraftingAchievement != null)) {
                    columnValuesArray[0] = parentCraftAchievementsRowByFK_CraftAchievements_CraftingAchievement[0];
                }
                if ((parentCraftingSkillsRowByFK_CraftingSkills_CraftingAchievement != null)) {
                    columnValuesArray[1] = parentCraftingSkillsRowByFK_CraftingSkills_CraftingAchievement[0];
                }
                rowCraftingAchievementsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCraftingAchievementsRow);
                return rowCraftingAchievementsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingAchievementsRow FindByAchievement_Name(string Achievement_Name) {
                return ((CraftingAchievementsRow)(this.Rows.Find(new object[] {
                            Achievement_Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CraftingAchievementsDataTable cln = ((CraftingAchievementsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CraftingAchievementsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAchievement_Name = base.Columns["Achievement_Name"];
                this.columnCraftingSkill_Name = base.Columns["CraftingSkill_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAchievement_Name = new global::System.Data.DataColumn("Achievement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Name);
                this.columnCraftingSkill_Name = new global::System.Data.DataColumn("CraftingSkill_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCraftingSkill_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAchievement_Name}, true));
                this.columnAchievement_Name.AllowDBNull = false;
                this.columnAchievement_Name.Unique = true;
                this.columnCraftingSkill_Name.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingAchievementsRow NewCraftingAchievementsRow() {
                return ((CraftingAchievementsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CraftingAchievementsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CraftingAchievementsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CraftingAchievementsRowChanged != null)) {
                    this.CraftingAchievementsRowChanged(this, new CraftingAchievementsRowChangeEvent(((CraftingAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CraftingAchievementsRowChanging != null)) {
                    this.CraftingAchievementsRowChanging(this, new CraftingAchievementsRowChangeEvent(((CraftingAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CraftingAchievementsRowDeleted != null)) {
                    this.CraftingAchievementsRowDeleted(this, new CraftingAchievementsRowChangeEvent(((CraftingAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CraftingAchievementsRowDeleting != null)) {
                    this.CraftingAchievementsRowDeleting(this, new CraftingAchievementsRowChangeEvent(((CraftingAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCraftingAchievementsRow(CraftingAchievementsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CraftingAchievementsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CraftingSkillsDataTable : global::System.Data.TypedTableBase<CraftingSkillsRow> {
            
            private global::System.Data.DataColumn columnFeat_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingSkillsDataTable() {
                this.TableName = "CraftingSkills";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CraftingSkillsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CraftingSkillsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_NameColumn {
                get {
                    return this.columnFeat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingSkillsRow this[int index] {
                get {
                    return ((CraftingSkillsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftingSkillsRowChangeEventHandler CraftingSkillsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftingSkillsRowChangeEventHandler CraftingSkillsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftingSkillsRowChangeEventHandler CraftingSkillsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftingSkillsRowChangeEventHandler CraftingSkillsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCraftingSkillsRow(CraftingSkillsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingSkillsRow AddCraftingSkillsRow(ChanneledFeatsRow parentChanneledFeatsRowByFK_ChanneledFeats_CraftingSkills) {
                CraftingSkillsRow rowCraftingSkillsRow = ((CraftingSkillsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                if ((parentChanneledFeatsRowByFK_ChanneledFeats_CraftingSkills != null)) {
                    columnValuesArray[0] = parentChanneledFeatsRowByFK_ChanneledFeats_CraftingSkills[0];
                }
                rowCraftingSkillsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCraftingSkillsRow);
                return rowCraftingSkillsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingSkillsRow FindByFeat_Name(string Feat_Name) {
                return ((CraftingSkillsRow)(this.Rows.Find(new object[] {
                            Feat_Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CraftingSkillsDataTable cln = ((CraftingSkillsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CraftingSkillsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFeat_Name = base.Columns["Feat_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFeat_Name = new global::System.Data.DataColumn("Feat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeat_Name}, true));
                this.columnFeat_Name.AllowDBNull = false;
                this.columnFeat_Name.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingSkillsRow NewCraftingSkillsRow() {
                return ((CraftingSkillsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CraftingSkillsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CraftingSkillsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CraftingSkillsRowChanged != null)) {
                    this.CraftingSkillsRowChanged(this, new CraftingSkillsRowChangeEvent(((CraftingSkillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CraftingSkillsRowChanging != null)) {
                    this.CraftingSkillsRowChanging(this, new CraftingSkillsRowChangeEvent(((CraftingSkillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CraftingSkillsRowDeleted != null)) {
                    this.CraftingSkillsRowDeleted(this, new CraftingSkillsRowChangeEvent(((CraftingSkillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CraftingSkillsRowDeleting != null)) {
                    this.CraftingSkillsRowDeleting(this, new CraftingSkillsRowChangeEvent(((CraftingSkillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCraftingSkillsRow(CraftingSkillsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CraftingSkillsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RefiningSkillsDataTable : global::System.Data.TypedTableBase<RefiningSkillsRow> {
            
            private global::System.Data.DataColumn columnFeat_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningSkillsDataTable() {
                this.TableName = "RefiningSkills";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RefiningSkillsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RefiningSkillsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_NameColumn {
                get {
                    return this.columnFeat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningSkillsRow this[int index] {
                get {
                    return ((RefiningSkillsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefiningSkillsRowChangeEventHandler RefiningSkillsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefiningSkillsRowChangeEventHandler RefiningSkillsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefiningSkillsRowChangeEventHandler RefiningSkillsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefiningSkillsRowChangeEventHandler RefiningSkillsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRefiningSkillsRow(RefiningSkillsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningSkillsRow AddRefiningSkillsRow(ChanneledFeatsRow parentChanneledFeatsRowByFK_ChanneledFeats_RefiningSkills) {
                RefiningSkillsRow rowRefiningSkillsRow = ((RefiningSkillsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                if ((parentChanneledFeatsRowByFK_ChanneledFeats_RefiningSkills != null)) {
                    columnValuesArray[0] = parentChanneledFeatsRowByFK_ChanneledFeats_RefiningSkills[0];
                }
                rowRefiningSkillsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRefiningSkillsRow);
                return rowRefiningSkillsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningSkillsRow FindByFeat_Name(string Feat_Name) {
                return ((RefiningSkillsRow)(this.Rows.Find(new object[] {
                            Feat_Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RefiningSkillsDataTable cln = ((RefiningSkillsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RefiningSkillsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFeat_Name = base.Columns["Feat_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFeat_Name = new global::System.Data.DataColumn("Feat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeat_Name}, true));
                this.columnFeat_Name.AllowDBNull = false;
                this.columnFeat_Name.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningSkillsRow NewRefiningSkillsRow() {
                return ((RefiningSkillsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RefiningSkillsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RefiningSkillsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RefiningSkillsRowChanged != null)) {
                    this.RefiningSkillsRowChanged(this, new RefiningSkillsRowChangeEvent(((RefiningSkillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RefiningSkillsRowChanging != null)) {
                    this.RefiningSkillsRowChanging(this, new RefiningSkillsRowChangeEvent(((RefiningSkillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RefiningSkillsRowDeleted != null)) {
                    this.RefiningSkillsRowDeleted(this, new RefiningSkillsRowChangeEvent(((RefiningSkillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RefiningSkillsRowDeleting != null)) {
                    this.RefiningSkillsRowDeleting(this, new RefiningSkillsRowChangeEvent(((RefiningSkillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRefiningSkillsRow(RefiningSkillsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RefiningSkillsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RefiningAchievementsDataTable : global::System.Data.TypedTableBase<RefiningAchievementsRow> {
            
            private global::System.Data.DataColumn columnAchievement_Name;
            
            private global::System.Data.DataColumn columnRefiningSkill_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningAchievementsDataTable() {
                this.TableName = "RefiningAchievements";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RefiningAchievementsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected RefiningAchievementsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_NameColumn {
                get {
                    return this.columnAchievement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefiningSkill_NameColumn {
                get {
                    return this.columnRefiningSkill_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningAchievementsRow this[int index] {
                get {
                    return ((RefiningAchievementsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefiningAchievementsRowChangeEventHandler RefiningAchievementsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefiningAchievementsRowChangeEventHandler RefiningAchievementsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefiningAchievementsRowChangeEventHandler RefiningAchievementsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event RefiningAchievementsRowChangeEventHandler RefiningAchievementsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRefiningAchievementsRow(RefiningAchievementsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningAchievementsRow AddRefiningAchievementsRow(CraftAchievementsRow parentCraftAchievementsRowByFK_CraftAchievements_RefiningAchievement, RefiningSkillsRow parentRefiningSkillsRowByFK_RefiningSkills_RefiningAchievement) {
                RefiningAchievementsRow rowRefiningAchievementsRow = ((RefiningAchievementsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentCraftAchievementsRowByFK_CraftAchievements_RefiningAchievement != null)) {
                    columnValuesArray[0] = parentCraftAchievementsRowByFK_CraftAchievements_RefiningAchievement[0];
                }
                if ((parentRefiningSkillsRowByFK_RefiningSkills_RefiningAchievement != null)) {
                    columnValuesArray[1] = parentRefiningSkillsRowByFK_RefiningSkills_RefiningAchievement[0];
                }
                rowRefiningAchievementsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRefiningAchievementsRow);
                return rowRefiningAchievementsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningAchievementsRow FindByAchievement_Name(string Achievement_Name) {
                return ((RefiningAchievementsRow)(this.Rows.Find(new object[] {
                            Achievement_Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RefiningAchievementsDataTable cln = ((RefiningAchievementsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RefiningAchievementsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAchievement_Name = base.Columns["Achievement_Name"];
                this.columnRefiningSkill_Name = base.Columns["RefiningSkill_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAchievement_Name = new global::System.Data.DataColumn("Achievement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Name);
                this.columnRefiningSkill_Name = new global::System.Data.DataColumn("RefiningSkill_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefiningSkill_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAchievement_Name}, true));
                this.columnAchievement_Name.AllowDBNull = false;
                this.columnAchievement_Name.Unique = true;
                this.columnRefiningSkill_Name.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningAchievementsRow NewRefiningAchievementsRow() {
                return ((RefiningAchievementsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RefiningAchievementsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RefiningAchievementsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RefiningAchievementsRowChanged != null)) {
                    this.RefiningAchievementsRowChanged(this, new RefiningAchievementsRowChangeEvent(((RefiningAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RefiningAchievementsRowChanging != null)) {
                    this.RefiningAchievementsRowChanging(this, new RefiningAchievementsRowChangeEvent(((RefiningAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RefiningAchievementsRowDeleted != null)) {
                    this.RefiningAchievementsRowDeleted(this, new RefiningAchievementsRowChangeEvent(((RefiningAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RefiningAchievementsRowDeleting != null)) {
                    this.RefiningAchievementsRowDeleting(this, new RefiningAchievementsRowChangeEvent(((RefiningAchievementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRefiningAchievementsRow(RefiningAchievementsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RefiningAchievementsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CounterAchievementLevelsDataTable : global::System.Data.TypedTableBase<CounterAchievementLevelsRow> {
            
            private global::System.Data.DataColumn columnAchievement_Name;
            
            private global::System.Data.DataColumn columnAchievement_Level;
            
            private global::System.Data.DataColumn columnCounterValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CounterAchievementLevelsDataTable() {
                this.TableName = "CounterAchievementLevels";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CounterAchievementLevelsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CounterAchievementLevelsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_NameColumn {
                get {
                    return this.columnAchievement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_LevelColumn {
                get {
                    return this.columnAchievement_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CounterValueColumn {
                get {
                    return this.columnCounterValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CounterAchievementLevelsRow this[int index] {
                get {
                    return ((CounterAchievementLevelsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CounterAchievementLevelsRowChangeEventHandler CounterAchievementLevelsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CounterAchievementLevelsRowChangeEventHandler CounterAchievementLevelsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CounterAchievementLevelsRowChangeEventHandler CounterAchievementLevelsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CounterAchievementLevelsRowChangeEventHandler CounterAchievementLevelsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCounterAchievementLevelsRow(CounterAchievementLevelsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CounterAchievementLevelsRow AddCounterAchievementLevelsRow(string Achievement_Name, int Achievement_Level, int CounterValue) {
                CounterAchievementLevelsRow rowCounterAchievementLevelsRow = ((CounterAchievementLevelsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Achievement_Name,
                        Achievement_Level,
                        CounterValue};
                rowCounterAchievementLevelsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCounterAchievementLevelsRow);
                return rowCounterAchievementLevelsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CounterAchievementLevelsRow FindByAchievement_NameAchievement_Level(string Achievement_Name, int Achievement_Level) {
                return ((CounterAchievementLevelsRow)(this.Rows.Find(new object[] {
                            Achievement_Name,
                            Achievement_Level})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CounterAchievementLevelsDataTable cln = ((CounterAchievementLevelsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CounterAchievementLevelsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAchievement_Name = base.Columns["Achievement_Name"];
                this.columnAchievement_Level = base.Columns["Achievement_Level"];
                this.columnCounterValue = base.Columns["CounterValue"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAchievement_Name = new global::System.Data.DataColumn("Achievement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Name);
                this.columnAchievement_Level = new global::System.Data.DataColumn("Achievement_Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Level);
                this.columnCounterValue = new global::System.Data.DataColumn("CounterValue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCounterValue);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAchievement_Name,
                                this.columnAchievement_Level}, true));
                this.columnAchievement_Name.AllowDBNull = false;
                this.columnAchievement_Level.AllowDBNull = false;
                this.columnCounterValue.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CounterAchievementLevelsRow NewCounterAchievementLevelsRow() {
                return ((CounterAchievementLevelsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CounterAchievementLevelsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CounterAchievementLevelsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CounterAchievementLevelsRowChanged != null)) {
                    this.CounterAchievementLevelsRowChanged(this, new CounterAchievementLevelsRowChangeEvent(((CounterAchievementLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CounterAchievementLevelsRowChanging != null)) {
                    this.CounterAchievementLevelsRowChanging(this, new CounterAchievementLevelsRowChangeEvent(((CounterAchievementLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CounterAchievementLevelsRowDeleted != null)) {
                    this.CounterAchievementLevelsRowDeleted(this, new CounterAchievementLevelsRowChangeEvent(((CounterAchievementLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CounterAchievementLevelsRowDeleting != null)) {
                    this.CounterAchievementLevelsRowDeleting(this, new CounterAchievementLevelsRowChangeEvent(((CounterAchievementLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCounterAchievementLevelsRow(CounterAchievementLevelsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CounterAchievementLevelsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CraftAchievementLevelsDataTable : global::System.Data.TypedTableBase<CraftAchievementLevelsRow> {
            
            private global::System.Data.DataColumn columnAchievement_Name;
            
            private global::System.Data.DataColumn columnAchievement_Level;
            
            private global::System.Data.DataColumn columnUpgradePlus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementLevelsDataTable() {
                this.TableName = "CraftAchievementLevels";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CraftAchievementLevelsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CraftAchievementLevelsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_NameColumn {
                get {
                    return this.columnAchievement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_LevelColumn {
                get {
                    return this.columnAchievement_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpgradePlusColumn {
                get {
                    return this.columnUpgradePlus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementLevelsRow this[int index] {
                get {
                    return ((CraftAchievementLevelsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftAchievementLevelsRowChangeEventHandler CraftAchievementLevelsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftAchievementLevelsRowChangeEventHandler CraftAchievementLevelsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftAchievementLevelsRowChangeEventHandler CraftAchievementLevelsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CraftAchievementLevelsRowChangeEventHandler CraftAchievementLevelsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCraftAchievementLevelsRow(CraftAchievementLevelsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementLevelsRow AddCraftAchievementLevelsRow(string Achievement_Name, int Achievement_Level, int UpgradePlus) {
                CraftAchievementLevelsRow rowCraftAchievementLevelsRow = ((CraftAchievementLevelsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Achievement_Name,
                        Achievement_Level,
                        UpgradePlus};
                rowCraftAchievementLevelsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCraftAchievementLevelsRow);
                return rowCraftAchievementLevelsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementLevelsRow FindByAchievement_NameAchievement_Level(string Achievement_Name, int Achievement_Level) {
                return ((CraftAchievementLevelsRow)(this.Rows.Find(new object[] {
                            Achievement_Name,
                            Achievement_Level})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CraftAchievementLevelsDataTable cln = ((CraftAchievementLevelsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CraftAchievementLevelsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAchievement_Name = base.Columns["Achievement_Name"];
                this.columnAchievement_Level = base.Columns["Achievement_Level"];
                this.columnUpgradePlus = base.Columns["UpgradePlus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAchievement_Name = new global::System.Data.DataColumn("Achievement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Name);
                this.columnAchievement_Level = new global::System.Data.DataColumn("Achievement_Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Level);
                this.columnUpgradePlus = new global::System.Data.DataColumn("UpgradePlus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpgradePlus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAchievement_Name,
                                this.columnAchievement_Level}, true));
                this.columnAchievement_Name.AllowDBNull = false;
                this.columnAchievement_Level.AllowDBNull = false;
                this.columnUpgradePlus.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementLevelsRow NewCraftAchievementLevelsRow() {
                return ((CraftAchievementLevelsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CraftAchievementLevelsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CraftAchievementLevelsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CraftAchievementLevelsRowChanged != null)) {
                    this.CraftAchievementLevelsRowChanged(this, new CraftAchievementLevelsRowChangeEvent(((CraftAchievementLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CraftAchievementLevelsRowChanging != null)) {
                    this.CraftAchievementLevelsRowChanging(this, new CraftAchievementLevelsRowChangeEvent(((CraftAchievementLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CraftAchievementLevelsRowDeleted != null)) {
                    this.CraftAchievementLevelsRowDeleted(this, new CraftAchievementLevelsRowChangeEvent(((CraftAchievementLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CraftAchievementLevelsRowDeleting != null)) {
                    this.CraftAchievementLevelsRowDeleting(this, new CraftAchievementLevelsRowChangeEvent(((CraftAchievementLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCraftAchievementLevelsRow(CraftAchievementLevelsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CraftAchievementLevelsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AchLevelCatBonusesDataTable : global::System.Data.TypedTableBase<AchLevelCatBonusesRow> {
            
            private global::System.Data.DataColumn columnAchievement_Name;
            
            private global::System.Data.DataColumn columnAchievement_Level;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactNo;
            
            private global::System.Data.DataColumn columnOptionNo;
            
            private global::System.Data.DataColumn columnBonusCategory_Name;
            
            private global::System.Data.DataColumn columnBonusCategoryPoints;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelCatBonusesDataTable() {
                this.TableName = "AchLevelCatBonuses";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AchLevelCatBonusesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AchLevelCatBonusesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_NameColumn {
                get {
                    return this.columnAchievement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_LevelColumn {
                get {
                    return this.columnAchievement_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactNoColumn {
                get {
                    return this.columnFactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionNoColumn {
                get {
                    return this.columnOptionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BonusCategory_NameColumn {
                get {
                    return this.columnBonusCategory_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BonusCategoryPointsColumn {
                get {
                    return this.columnBonusCategoryPoints;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelCatBonusesRow this[int index] {
                get {
                    return ((AchLevelCatBonusesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchLevelCatBonusesRowChangeEventHandler AchLevelCatBonusesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchLevelCatBonusesRowChangeEventHandler AchLevelCatBonusesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchLevelCatBonusesRowChangeEventHandler AchLevelCatBonusesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchLevelCatBonusesRowChangeEventHandler AchLevelCatBonusesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAchLevelCatBonusesRow(AchLevelCatBonusesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelCatBonusesRow AddAchLevelCatBonusesRow(string Achievement_Name, int Achievement_Level, string FactType, int FactNo, int OptionNo, AchievementCategoriesRow parentAchievementCategoriesRowByFK_AchievementCategories_AchLevelCatBonuses, int BonusCategoryPoints) {
                AchLevelCatBonusesRow rowAchLevelCatBonusesRow = ((AchLevelCatBonusesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Achievement_Name,
                        Achievement_Level,
                        FactType,
                        FactNo,
                        OptionNo,
                        null,
                        BonusCategoryPoints};
                if ((parentAchievementCategoriesRowByFK_AchievementCategories_AchLevelCatBonuses != null)) {
                    columnValuesArray[5] = parentAchievementCategoriesRowByFK_AchievementCategories_AchLevelCatBonuses[0];
                }
                rowAchLevelCatBonusesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAchLevelCatBonusesRow);
                return rowAchLevelCatBonusesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelCatBonusesRow FindByAchievement_NameAchievement_LevelFactTypeFactNoOptionNo(string Achievement_Name, int Achievement_Level, string FactType, int FactNo, int OptionNo) {
                return ((AchLevelCatBonusesRow)(this.Rows.Find(new object[] {
                            Achievement_Name,
                            Achievement_Level,
                            FactType,
                            FactNo,
                            OptionNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AchLevelCatBonusesDataTable cln = ((AchLevelCatBonusesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AchLevelCatBonusesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAchievement_Name = base.Columns["Achievement_Name"];
                this.columnAchievement_Level = base.Columns["Achievement_Level"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactNo = base.Columns["FactNo"];
                this.columnOptionNo = base.Columns["OptionNo"];
                this.columnBonusCategory_Name = base.Columns["BonusCategory_Name"];
                this.columnBonusCategoryPoints = base.Columns["BonusCategoryPoints"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAchievement_Name = new global::System.Data.DataColumn("Achievement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Name);
                this.columnAchievement_Level = new global::System.Data.DataColumn("Achievement_Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Level);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactNo = new global::System.Data.DataColumn("FactNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactNo);
                this.columnOptionNo = new global::System.Data.DataColumn("OptionNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionNo);
                this.columnBonusCategory_Name = new global::System.Data.DataColumn("BonusCategory_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonusCategory_Name);
                this.columnBonusCategoryPoints = new global::System.Data.DataColumn("BonusCategoryPoints", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonusCategoryPoints);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAchievement_Name,
                                this.columnAchievement_Level,
                                this.columnFactType,
                                this.columnFactNo,
                                this.columnOptionNo}, true));
                this.columnAchievement_Name.AllowDBNull = false;
                this.columnAchievement_Level.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactNo.AllowDBNull = false;
                this.columnOptionNo.AllowDBNull = false;
                this.columnBonusCategory_Name.AllowDBNull = false;
                this.columnBonusCategoryPoints.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelCatBonusesRow NewAchLevelCatBonusesRow() {
                return ((AchLevelCatBonusesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AchLevelCatBonusesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AchLevelCatBonusesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AchLevelCatBonusesRowChanged != null)) {
                    this.AchLevelCatBonusesRowChanged(this, new AchLevelCatBonusesRowChangeEvent(((AchLevelCatBonusesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AchLevelCatBonusesRowChanging != null)) {
                    this.AchLevelCatBonusesRowChanging(this, new AchLevelCatBonusesRowChangeEvent(((AchLevelCatBonusesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AchLevelCatBonusesRowDeleted != null)) {
                    this.AchLevelCatBonusesRowDeleted(this, new AchLevelCatBonusesRowChangeEvent(((AchLevelCatBonusesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AchLevelCatBonusesRowDeleting != null)) {
                    this.AchLevelCatBonusesRowDeleting(this, new AchLevelCatBonusesRowChangeEvent(((AchLevelCatBonusesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAchLevelCatBonusesRow(AchLevelCatBonusesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AchLevelCatBonusesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AchLevelAdvReqsDataTable : global::System.Data.TypedTableBase<AchLevelAdvReqsRow> {
            
            private global::System.Data.DataColumn columnAchievement_Name;
            
            private global::System.Data.DataColumn columnAchievement_Level;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactNo;
            
            private global::System.Data.DataColumn columnOptionNo;
            
            private global::System.Data.DataColumn columnRequiredAdvancement_Name;
            
            private global::System.Data.DataColumn columnRequiredAdvancement_Rank;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelAdvReqsDataTable() {
                this.TableName = "AchLevelAdvReqs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AchLevelAdvReqsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AchLevelAdvReqsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_NameColumn {
                get {
                    return this.columnAchievement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_LevelColumn {
                get {
                    return this.columnAchievement_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactNoColumn {
                get {
                    return this.columnFactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OptionNoColumn {
                get {
                    return this.columnOptionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequiredAdvancement_NameColumn {
                get {
                    return this.columnRequiredAdvancement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequiredAdvancement_RankColumn {
                get {
                    return this.columnRequiredAdvancement_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelAdvReqsRow this[int index] {
                get {
                    return ((AchLevelAdvReqsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchLevelAdvReqsRowChangeEventHandler AchLevelAdvReqsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchLevelAdvReqsRowChangeEventHandler AchLevelAdvReqsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchLevelAdvReqsRowChangeEventHandler AchLevelAdvReqsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchLevelAdvReqsRowChangeEventHandler AchLevelAdvReqsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAchLevelAdvReqsRow(AchLevelAdvReqsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelAdvReqsRow AddAchLevelAdvReqsRow(string Achievement_Name, int Achievement_Level, string FactType, int FactNo, int OptionNo, string RequiredAdvancement_Name, int RequiredAdvancement_Rank) {
                AchLevelAdvReqsRow rowAchLevelAdvReqsRow = ((AchLevelAdvReqsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Achievement_Name,
                        Achievement_Level,
                        FactType,
                        FactNo,
                        OptionNo,
                        RequiredAdvancement_Name,
                        RequiredAdvancement_Rank};
                rowAchLevelAdvReqsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAchLevelAdvReqsRow);
                return rowAchLevelAdvReqsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelAdvReqsRow FindByAchievement_NameAchievement_LevelFactTypeFactNoOptionNo(string Achievement_Name, int Achievement_Level, string FactType, int FactNo, int OptionNo) {
                return ((AchLevelAdvReqsRow)(this.Rows.Find(new object[] {
                            Achievement_Name,
                            Achievement_Level,
                            FactType,
                            FactNo,
                            OptionNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AchLevelAdvReqsDataTable cln = ((AchLevelAdvReqsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AchLevelAdvReqsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAchievement_Name = base.Columns["Achievement_Name"];
                this.columnAchievement_Level = base.Columns["Achievement_Level"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactNo = base.Columns["FactNo"];
                this.columnOptionNo = base.Columns["OptionNo"];
                this.columnRequiredAdvancement_Name = base.Columns["RequiredAdvancement_Name"];
                this.columnRequiredAdvancement_Rank = base.Columns["RequiredAdvancement_Rank"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAchievement_Name = new global::System.Data.DataColumn("Achievement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Name);
                this.columnAchievement_Level = new global::System.Data.DataColumn("Achievement_Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Level);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactNo = new global::System.Data.DataColumn("FactNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactNo);
                this.columnOptionNo = new global::System.Data.DataColumn("OptionNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionNo);
                this.columnRequiredAdvancement_Name = new global::System.Data.DataColumn("RequiredAdvancement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredAdvancement_Name);
                this.columnRequiredAdvancement_Rank = new global::System.Data.DataColumn("RequiredAdvancement_Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequiredAdvancement_Rank);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAchievement_Name,
                                this.columnAchievement_Level,
                                this.columnFactType,
                                this.columnFactNo,
                                this.columnOptionNo}, true));
                this.columnAchievement_Name.AllowDBNull = false;
                this.columnAchievement_Level.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactNo.AllowDBNull = false;
                this.columnOptionNo.AllowDBNull = false;
                this.columnRequiredAdvancement_Name.AllowDBNull = false;
                this.columnRequiredAdvancement_Rank.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelAdvReqsRow NewAchLevelAdvReqsRow() {
                return ((AchLevelAdvReqsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AchLevelAdvReqsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AchLevelAdvReqsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AchLevelAdvReqsRowChanged != null)) {
                    this.AchLevelAdvReqsRowChanged(this, new AchLevelAdvReqsRowChangeEvent(((AchLevelAdvReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AchLevelAdvReqsRowChanging != null)) {
                    this.AchLevelAdvReqsRowChanging(this, new AchLevelAdvReqsRowChangeEvent(((AchLevelAdvReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AchLevelAdvReqsRowDeleted != null)) {
                    this.AchLevelAdvReqsRowDeleted(this, new AchLevelAdvReqsRowChangeEvent(((AchLevelAdvReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AchLevelAdvReqsRowDeleting != null)) {
                    this.AchLevelAdvReqsRowDeleting(this, new AchLevelAdvReqsRowChangeEvent(((AchLevelAdvReqsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAchLevelAdvReqsRow(AchLevelAdvReqsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AchLevelAdvReqsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AchievementLevelFactStringsDataTable : global::System.Data.TypedTableBase<AchievementLevelFactStringsRow> {
            
            private global::System.Data.DataColumn columnAchievement_Name;
            
            private global::System.Data.DataColumn columnAchievement_Level;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactString;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactStringsDataTable() {
                this.TableName = "AchievementLevelFactStrings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AchievementLevelFactStringsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AchievementLevelFactStringsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_NameColumn {
                get {
                    return this.columnAchievement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Achievement_LevelColumn {
                get {
                    return this.columnAchievement_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactStringColumn {
                get {
                    return this.columnFactString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactStringsRow this[int index] {
                get {
                    return ((AchievementLevelFactStringsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementLevelFactStringsRowChangeEventHandler AchievementLevelFactStringsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementLevelFactStringsRowChangeEventHandler AchievementLevelFactStringsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementLevelFactStringsRowChangeEventHandler AchievementLevelFactStringsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AchievementLevelFactStringsRowChangeEventHandler AchievementLevelFactStringsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAchievementLevelFactStringsRow(AchievementLevelFactStringsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactStringsRow AddAchievementLevelFactStringsRow(string Achievement_Name, int Achievement_Level, string FactType, string FactString) {
                AchievementLevelFactStringsRow rowAchievementLevelFactStringsRow = ((AchievementLevelFactStringsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Achievement_Name,
                        Achievement_Level,
                        FactType,
                        FactString};
                rowAchievementLevelFactStringsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAchievementLevelFactStringsRow);
                return rowAchievementLevelFactStringsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactStringsRow FindByAchievement_NameAchievement_LevelFactType(string Achievement_Name, int Achievement_Level, string FactType) {
                return ((AchievementLevelFactStringsRow)(this.Rows.Find(new object[] {
                            Achievement_Name,
                            Achievement_Level,
                            FactType})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AchievementLevelFactStringsDataTable cln = ((AchievementLevelFactStringsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AchievementLevelFactStringsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAchievement_Name = base.Columns["Achievement_Name"];
                this.columnAchievement_Level = base.Columns["Achievement_Level"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactString = base.Columns["FactString"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAchievement_Name = new global::System.Data.DataColumn("Achievement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Name);
                this.columnAchievement_Level = new global::System.Data.DataColumn("Achievement_Level", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAchievement_Level);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactString = new global::System.Data.DataColumn("FactString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactString);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAchievement_Name,
                                this.columnAchievement_Level,
                                this.columnFactType}, true));
                this.columnAchievement_Name.AllowDBNull = false;
                this.columnAchievement_Level.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactString.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactStringsRow NewAchievementLevelFactStringsRow() {
                return ((AchievementLevelFactStringsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AchievementLevelFactStringsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AchievementLevelFactStringsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AchievementLevelFactStringsRowChanged != null)) {
                    this.AchievementLevelFactStringsRowChanged(this, new AchievementLevelFactStringsRowChangeEvent(((AchievementLevelFactStringsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AchievementLevelFactStringsRowChanging != null)) {
                    this.AchievementLevelFactStringsRowChanging(this, new AchievementLevelFactStringsRowChangeEvent(((AchievementLevelFactStringsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AchievementLevelFactStringsRowDeleted != null)) {
                    this.AchievementLevelFactStringsRowDeleted(this, new AchievementLevelFactStringsRowChangeEvent(((AchievementLevelFactStringsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AchievementLevelFactStringsRowDeleting != null)) {
                    this.AchievementLevelFactStringsRowDeleting(this, new AchievementLevelFactStringsRowChangeEvent(((AchievementLevelFactStringsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAchievementLevelFactStringsRow(AchievementLevelFactStringsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AchievementLevelFactStringsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FeatRanksDataTable : global::System.Data.TypedTableBase<FeatRanksRow> {
            
            private global::System.Data.DataColumn columnFeat_Name;
            
            private global::System.Data.DataColumn columnRank;
            
            private global::System.Data.DataColumn columnAdvancement_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRanksDataTable() {
                this.TableName = "FeatRanks";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FeatRanksDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FeatRanksDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_NameColumn {
                get {
                    return this.columnFeat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RankColumn {
                get {
                    return this.columnRank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Advancement_NameColumn {
                get {
                    return this.columnAdvancement_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRanksRow this[int index] {
                get {
                    return ((FeatRanksRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRanksRowChangeEventHandler FeatRanksRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRanksRowChangeEventHandler FeatRanksRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRanksRowChangeEventHandler FeatRanksRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRanksRowChangeEventHandler FeatRanksRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFeatRanksRow(FeatRanksRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRanksRow AddFeatRanksRow(FeatsRow parentFeatsRowByFK_Feats_FeatRanks, int Rank, string Advancement_Name) {
                FeatRanksRow rowFeatRanksRow = ((FeatRanksRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Rank,
                        Advancement_Name};
                if ((parentFeatsRowByFK_Feats_FeatRanks != null)) {
                    columnValuesArray[0] = parentFeatsRowByFK_Feats_FeatRanks[0];
                }
                rowFeatRanksRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFeatRanksRow);
                return rowFeatRanksRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRanksRow FindByFeat_NameRank(string Feat_Name, int Rank) {
                return ((FeatRanksRow)(this.Rows.Find(new object[] {
                            Feat_Name,
                            Rank})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FeatRanksDataTable cln = ((FeatRanksDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FeatRanksDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFeat_Name = base.Columns["Feat_Name"];
                this.columnRank = base.Columns["Rank"];
                this.columnAdvancement_Name = base.Columns["Advancement_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFeat_Name = new global::System.Data.DataColumn("Feat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Name);
                this.columnRank = new global::System.Data.DataColumn("Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRank);
                this.columnAdvancement_Name = new global::System.Data.DataColumn("Advancement_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancement_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeat_Name,
                                this.columnRank}, true));
                this.columnFeat_Name.AllowDBNull = false;
                this.columnRank.AllowDBNull = false;
                this.columnAdvancement_Name.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRanksRow NewFeatRanksRow() {
                return ((FeatRanksRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FeatRanksRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FeatRanksRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FeatRanksRowChanged != null)) {
                    this.FeatRanksRowChanged(this, new FeatRanksRowChangeEvent(((FeatRanksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FeatRanksRowChanging != null)) {
                    this.FeatRanksRowChanging(this, new FeatRanksRowChangeEvent(((FeatRanksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FeatRanksRowDeleted != null)) {
                    this.FeatRanksRowDeleted(this, new FeatRanksRowChangeEvent(((FeatRanksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FeatRanksRowDeleting != null)) {
                    this.FeatRanksRowDeleting(this, new FeatRanksRowChangeEvent(((FeatRanksRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFeatRanksRow(FeatRanksRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FeatRanksDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EffectDescriptionsDataTable : global::System.Data.TypedTableBase<EffectDescriptionsRow> {
            
            private global::System.Data.DataColumn columnText;
            
            private global::System.Data.DataColumn columnEffect_Name;
            
            private global::System.Data.DataColumn columnFormattedText;
            
            private global::System.Data.DataColumn columnDescriptor;
            
            private global::System.Data.DataColumn columnConditionalPrefix;
            
            private global::System.Data.DataColumn columnConditional_Name;
            
            private global::System.Data.DataColumn columnConditionalSuffix;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectDescriptionsDataTable() {
                this.TableName = "EffectDescriptions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EffectDescriptionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EffectDescriptionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TextColumn {
                get {
                    return this.columnText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Effect_NameColumn {
                get {
                    return this.columnEffect_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FormattedTextColumn {
                get {
                    return this.columnFormattedText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptorColumn {
                get {
                    return this.columnDescriptor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConditionalPrefixColumn {
                get {
                    return this.columnConditionalPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Conditional_NameColumn {
                get {
                    return this.columnConditional_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConditionalSuffixColumn {
                get {
                    return this.columnConditionalSuffix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectDescriptionsRow this[int index] {
                get {
                    return ((EffectDescriptionsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectDescriptionsRowChangeEventHandler EffectDescriptionsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectDescriptionsRowChangeEventHandler EffectDescriptionsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectDescriptionsRowChangeEventHandler EffectDescriptionsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectDescriptionsRowChangeEventHandler EffectDescriptionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEffectDescriptionsRow(EffectDescriptionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectDescriptionsRow AddEffectDescriptionsRow(string Text, EffectsRow parentEffectsRowByFK_Effects_EffectDescriptions, string FormattedText, string Descriptor, string ConditionalPrefix, ConditionalsRow parentConditionalsRowByFK_Conditionals_EffectDescriptions, string ConditionalSuffix) {
                EffectDescriptionsRow rowEffectDescriptionsRow = ((EffectDescriptionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Text,
                        null,
                        FormattedText,
                        Descriptor,
                        ConditionalPrefix,
                        null,
                        ConditionalSuffix};
                if ((parentEffectsRowByFK_Effects_EffectDescriptions != null)) {
                    columnValuesArray[1] = parentEffectsRowByFK_Effects_EffectDescriptions[0];
                }
                if ((parentConditionalsRowByFK_Conditionals_EffectDescriptions != null)) {
                    columnValuesArray[5] = parentConditionalsRowByFK_Conditionals_EffectDescriptions[0];
                }
                rowEffectDescriptionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEffectDescriptionsRow);
                return rowEffectDescriptionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectDescriptionsRow FindByText(string Text) {
                return ((EffectDescriptionsRow)(this.Rows.Find(new object[] {
                            Text})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EffectDescriptionsDataTable cln = ((EffectDescriptionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EffectDescriptionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnText = base.Columns["Text"];
                this.columnEffect_Name = base.Columns["Effect_Name"];
                this.columnFormattedText = base.Columns["FormattedText"];
                this.columnDescriptor = base.Columns["Descriptor"];
                this.columnConditionalPrefix = base.Columns["ConditionalPrefix"];
                this.columnConditional_Name = base.Columns["Conditional_Name"];
                this.columnConditionalSuffix = base.Columns["ConditionalSuffix"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnText = new global::System.Data.DataColumn("Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText);
                this.columnEffect_Name = new global::System.Data.DataColumn("Effect_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffect_Name);
                this.columnFormattedText = new global::System.Data.DataColumn("FormattedText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormattedText);
                this.columnDescriptor = new global::System.Data.DataColumn("Descriptor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescriptor);
                this.columnConditionalPrefix = new global::System.Data.DataColumn("ConditionalPrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConditionalPrefix);
                this.columnConditional_Name = new global::System.Data.DataColumn("Conditional_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConditional_Name);
                this.columnConditionalSuffix = new global::System.Data.DataColumn("ConditionalSuffix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConditionalSuffix);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnText}, true));
                this.columnText.AllowDBNull = false;
                this.columnText.Unique = true;
                this.columnEffect_Name.AllowDBNull = false;
                this.columnFormattedText.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectDescriptionsRow NewEffectDescriptionsRow() {
                return ((EffectDescriptionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EffectDescriptionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EffectDescriptionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EffectDescriptionsRowChanged != null)) {
                    this.EffectDescriptionsRowChanged(this, new EffectDescriptionsRowChangeEvent(((EffectDescriptionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EffectDescriptionsRowChanging != null)) {
                    this.EffectDescriptionsRowChanging(this, new EffectDescriptionsRowChangeEvent(((EffectDescriptionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EffectDescriptionsRowDeleted != null)) {
                    this.EffectDescriptionsRowDeleted(this, new EffectDescriptionsRowChangeEvent(((EffectDescriptionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EffectDescriptionsRowDeleting != null)) {
                    this.EffectDescriptionsRowDeleting(this, new EffectDescriptionsRowChangeEvent(((EffectDescriptionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEffectDescriptionsRow(EffectDescriptionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EffectDescriptionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EffectTermsDataTable : global::System.Data.TypedTableBase<EffectTermsRow> {
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnEffectType_Name;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnMathSpecifics;
            
            private global::System.Data.DataColumn columnChannel_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectTermsDataTable() {
                this.TableName = "EffectTerms";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EffectTermsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EffectTermsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EffectType_NameColumn {
                get {
                    return this.columnEffectType_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MathSpecificsColumn {
                get {
                    return this.columnMathSpecifics;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Channel_NameColumn {
                get {
                    return this.columnChannel_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectTermsRow this[int index] {
                get {
                    return ((EffectTermsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectTermsRowChangeEventHandler EffectTermsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectTermsRowChangeEventHandler EffectTermsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectTermsRowChangeEventHandler EffectTermsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectTermsRowChangeEventHandler EffectTermsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEffectTermsRow(EffectTermsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectTermsRow AddEffectTermsRow(string Name, string EffectType_Name, string Description, string MathSpecifics, EffectChannelsRow parentEffectChannelsRowByFK_EffectChannels_EffectTerms) {
                EffectTermsRow rowEffectTermsRow = ((EffectTermsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name,
                        EffectType_Name,
                        Description,
                        MathSpecifics,
                        null};
                if ((parentEffectChannelsRowByFK_EffectChannels_EffectTerms != null)) {
                    columnValuesArray[4] = parentEffectChannelsRowByFK_EffectChannels_EffectTerms[0];
                }
                rowEffectTermsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEffectTermsRow);
                return rowEffectTermsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectTermsRow FindByName(string Name) {
                return ((EffectTermsRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EffectTermsDataTable cln = ((EffectTermsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EffectTermsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnEffectType_Name = base.Columns["EffectType_Name"];
                this.columnDescription = base.Columns["Description"];
                this.columnMathSpecifics = base.Columns["MathSpecifics"];
                this.columnChannel_Name = base.Columns["Channel_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnEffectType_Name = new global::System.Data.DataColumn("EffectType_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectType_Name);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnMathSpecifics = new global::System.Data.DataColumn("MathSpecifics", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMathSpecifics);
                this.columnChannel_Name = new global::System.Data.DataColumn("Channel_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChannel_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
                this.columnEffectType_Name.AllowDBNull = false;
                this.columnDescription.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectTermsRow NewEffectTermsRow() {
                return ((EffectTermsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EffectTermsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EffectTermsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EffectTermsRowChanged != null)) {
                    this.EffectTermsRowChanged(this, new EffectTermsRowChangeEvent(((EffectTermsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EffectTermsRowChanging != null)) {
                    this.EffectTermsRowChanging(this, new EffectTermsRowChangeEvent(((EffectTermsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EffectTermsRowDeleted != null)) {
                    this.EffectTermsRowDeleted(this, new EffectTermsRowChangeEvent(((EffectTermsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EffectTermsRowDeleting != null)) {
                    this.EffectTermsRowDeleting(this, new EffectTermsRowChangeEvent(((EffectTermsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEffectTermsRow(EffectTermsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EffectTermsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EffectsDataTable : global::System.Data.TypedTableBase<EffectsRow> {
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnEffectTerm_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectsDataTable() {
                this.TableName = "Effects";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EffectsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EffectsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EffectTerm_NameColumn {
                get {
                    return this.columnEffectTerm_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectsRow this[int index] {
                get {
                    return ((EffectsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectsRowChangeEventHandler EffectsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectsRowChangeEventHandler EffectsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectsRowChangeEventHandler EffectsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectsRowChangeEventHandler EffectsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEffectsRow(EffectsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectsRow AddEffectsRow(string Name, EffectTermsRow parentEffectTermsRowByFK_EffectTerms_Effects) {
                EffectsRow rowEffectsRow = ((EffectsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name,
                        null};
                if ((parentEffectTermsRowByFK_EffectTerms_Effects != null)) {
                    columnValuesArray[1] = parentEffectTermsRowByFK_EffectTerms_Effects[0];
                }
                rowEffectsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEffectsRow);
                return rowEffectsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectsRow FindByName(string Name) {
                return ((EffectsRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EffectsDataTable cln = ((EffectsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EffectsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnEffectTerm_Name = base.Columns["EffectTerm_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnEffectTerm_Name = new global::System.Data.DataColumn("EffectTerm_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectTerm_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectsRow NewEffectsRow() {
                return ((EffectsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EffectsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EffectsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EffectsRowChanged != null)) {
                    this.EffectsRowChanged(this, new EffectsRowChangeEvent(((EffectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EffectsRowChanging != null)) {
                    this.EffectsRowChanging(this, new EffectsRowChangeEvent(((EffectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EffectsRowDeleted != null)) {
                    this.EffectsRowDeleted(this, new EffectsRowChangeEvent(((EffectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EffectsRowDeleting != null)) {
                    this.EffectsRowDeleting(this, new EffectsRowChangeEvent(((EffectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEffectsRow(EffectsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EffectsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ConditionalsDataTable : global::System.Data.TypedTableBase<ConditionalsRow> {
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConditionalsDataTable() {
                this.TableName = "Conditionals";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ConditionalsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ConditionalsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConditionalsRow this[int index] {
                get {
                    return ((ConditionalsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConditionalsRowChangeEventHandler ConditionalsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConditionalsRowChangeEventHandler ConditionalsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConditionalsRowChangeEventHandler ConditionalsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConditionalsRowChangeEventHandler ConditionalsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddConditionalsRow(ConditionalsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConditionalsRow AddConditionalsRow(string Name) {
                ConditionalsRow rowConditionalsRow = ((ConditionalsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name};
                rowConditionalsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowConditionalsRow);
                return rowConditionalsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConditionalsRow FindByName(string Name) {
                return ((ConditionalsRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ConditionalsDataTable cln = ((ConditionalsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ConditionalsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConditionalsRow NewConditionalsRow() {
                return ((ConditionalsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ConditionalsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ConditionalsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ConditionalsRowChanged != null)) {
                    this.ConditionalsRowChanged(this, new ConditionalsRowChangeEvent(((ConditionalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ConditionalsRowChanging != null)) {
                    this.ConditionalsRowChanging(this, new ConditionalsRowChangeEvent(((ConditionalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ConditionalsRowDeleted != null)) {
                    this.ConditionalsRowDeleted(this, new ConditionalsRowChangeEvent(((ConditionalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ConditionalsRowDeleting != null)) {
                    this.ConditionalsRowDeleting(this, new ConditionalsRowChangeEvent(((ConditionalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveConditionalsRow(ConditionalsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ConditionalsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EffectConditionalsDataTable : global::System.Data.TypedTableBase<EffectConditionalsRow> {
            
            private global::System.Data.DataColumn columnConditional_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectConditionalsDataTable() {
                this.TableName = "EffectConditionals";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EffectConditionalsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EffectConditionalsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Conditional_NameColumn {
                get {
                    return this.columnConditional_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectConditionalsRow this[int index] {
                get {
                    return ((EffectConditionalsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectConditionalsRowChangeEventHandler EffectConditionalsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectConditionalsRowChangeEventHandler EffectConditionalsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectConditionalsRowChangeEventHandler EffectConditionalsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EffectConditionalsRowChangeEventHandler EffectConditionalsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEffectConditionalsRow(EffectConditionalsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectConditionalsRow AddEffectConditionalsRow(ConditionalsRow parentConditionalsRowByFK_Conditionals_EffectConditionals) {
                EffectConditionalsRow rowEffectConditionalsRow = ((EffectConditionalsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null};
                if ((parentConditionalsRowByFK_Conditionals_EffectConditionals != null)) {
                    columnValuesArray[0] = parentConditionalsRowByFK_Conditionals_EffectConditionals[0];
                }
                rowEffectConditionalsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEffectConditionalsRow);
                return rowEffectConditionalsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectConditionalsRow FindByConditional_Name(string Conditional_Name) {
                return ((EffectConditionalsRow)(this.Rows.Find(new object[] {
                            Conditional_Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EffectConditionalsDataTable cln = ((EffectConditionalsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EffectConditionalsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnConditional_Name = base.Columns["Conditional_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnConditional_Name = new global::System.Data.DataColumn("Conditional_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConditional_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnConditional_Name}, true));
                this.columnConditional_Name.AllowDBNull = false;
                this.columnConditional_Name.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectConditionalsRow NewEffectConditionalsRow() {
                return ((EffectConditionalsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EffectConditionalsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EffectConditionalsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EffectConditionalsRowChanged != null)) {
                    this.EffectConditionalsRowChanged(this, new EffectConditionalsRowChangeEvent(((EffectConditionalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EffectConditionalsRowChanging != null)) {
                    this.EffectConditionalsRowChanging(this, new EffectConditionalsRowChangeEvent(((EffectConditionalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EffectConditionalsRowDeleted != null)) {
                    this.EffectConditionalsRowDeleted(this, new EffectConditionalsRowChangeEvent(((EffectConditionalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EffectConditionalsRowDeleting != null)) {
                    this.EffectConditionalsRowDeleting(this, new EffectConditionalsRowChangeEvent(((EffectConditionalsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEffectConditionalsRow(EffectConditionalsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EffectConditionalsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FeatFactsDataTable : global::System.Data.TypedTableBase<FeatFactsRow> {
            
            private global::System.Data.DataColumn columnFeat_Name;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatFactsDataTable() {
                this.TableName = "FeatFacts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FeatFactsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FeatFactsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_NameColumn {
                get {
                    return this.columnFeat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactNoColumn {
                get {
                    return this.columnFactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatFactsRow this[int index] {
                get {
                    return ((FeatFactsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatFactsRowChangeEventHandler FeatFactsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatFactsRowChangeEventHandler FeatFactsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatFactsRowChangeEventHandler FeatFactsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatFactsRowChangeEventHandler FeatFactsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFeatFactsRow(FeatFactsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatFactsRow AddFeatFactsRow(FeatsRow parentFeatsRowByFK_Feats_FeatFacts, string FactType, int FactNo) {
                FeatFactsRow rowFeatFactsRow = ((FeatFactsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FactType,
                        FactNo};
                if ((parentFeatsRowByFK_Feats_FeatFacts != null)) {
                    columnValuesArray[0] = parentFeatsRowByFK_Feats_FeatFacts[0];
                }
                rowFeatFactsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFeatFactsRow);
                return rowFeatFactsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatFactsRow FindByFeat_NameFactTypeFactNo(string Feat_Name, string FactType, int FactNo) {
                return ((FeatFactsRow)(this.Rows.Find(new object[] {
                            Feat_Name,
                            FactType,
                            FactNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FeatFactsDataTable cln = ((FeatFactsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FeatFactsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFeat_Name = base.Columns["Feat_Name"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactNo = base.Columns["FactNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFeat_Name = new global::System.Data.DataColumn("Feat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Name);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactNo = new global::System.Data.DataColumn("FactNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeat_Name,
                                this.columnFactType,
                                this.columnFactNo}, true));
                this.columnFeat_Name.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactNo.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatFactsRow NewFeatFactsRow() {
                return ((FeatFactsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FeatFactsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FeatFactsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FeatFactsRowChanged != null)) {
                    this.FeatFactsRowChanged(this, new FeatFactsRowChangeEvent(((FeatFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FeatFactsRowChanging != null)) {
                    this.FeatFactsRowChanging(this, new FeatFactsRowChangeEvent(((FeatFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FeatFactsRowDeleted != null)) {
                    this.FeatFactsRowDeleted(this, new FeatFactsRowChangeEvent(((FeatFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FeatFactsRowDeleting != null)) {
                    this.FeatFactsRowDeleting(this, new FeatFactsRowChangeEvent(((FeatFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFeatFactsRow(FeatFactsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FeatFactsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FeatRankFactsDataTable : global::System.Data.TypedTableBase<FeatRankFactsRow> {
            
            private global::System.Data.DataColumn columnFeat_Name;
            
            private global::System.Data.DataColumn columnFeat_Rank;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankFactsDataTable() {
                this.TableName = "FeatRankFacts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FeatRankFactsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FeatRankFactsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_NameColumn {
                get {
                    return this.columnFeat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_RankColumn {
                get {
                    return this.columnFeat_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactNoColumn {
                get {
                    return this.columnFactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankFactsRow this[int index] {
                get {
                    return ((FeatRankFactsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRankFactsRowChangeEventHandler FeatRankFactsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRankFactsRowChangeEventHandler FeatRankFactsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRankFactsRowChangeEventHandler FeatRankFactsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRankFactsRowChangeEventHandler FeatRankFactsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFeatRankFactsRow(FeatRankFactsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankFactsRow AddFeatRankFactsRow(string Feat_Name, int Feat_Rank, string FactType, int FactNo) {
                FeatRankFactsRow rowFeatRankFactsRow = ((FeatRankFactsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Feat_Name,
                        Feat_Rank,
                        FactType,
                        FactNo};
                rowFeatRankFactsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFeatRankFactsRow);
                return rowFeatRankFactsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankFactsRow FindByFeat_NameFeat_RankFactTypeFactNo(string Feat_Name, int Feat_Rank, string FactType, int FactNo) {
                return ((FeatRankFactsRow)(this.Rows.Find(new object[] {
                            Feat_Name,
                            Feat_Rank,
                            FactType,
                            FactNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FeatRankFactsDataTable cln = ((FeatRankFactsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FeatRankFactsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFeat_Name = base.Columns["Feat_Name"];
                this.columnFeat_Rank = base.Columns["Feat_Rank"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactNo = base.Columns["FactNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFeat_Name = new global::System.Data.DataColumn("Feat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Name);
                this.columnFeat_Rank = new global::System.Data.DataColumn("Feat_Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Rank);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactNo = new global::System.Data.DataColumn("FactNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeat_Name,
                                this.columnFeat_Rank,
                                this.columnFactType,
                                this.columnFactNo}, true));
                this.columnFeat_Name.AllowDBNull = false;
                this.columnFeat_Rank.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactNo.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankFactsRow NewFeatRankFactsRow() {
                return ((FeatRankFactsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FeatRankFactsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FeatRankFactsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FeatRankFactsRowChanged != null)) {
                    this.FeatRankFactsRowChanged(this, new FeatRankFactsRowChangeEvent(((FeatRankFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FeatRankFactsRowChanging != null)) {
                    this.FeatRankFactsRowChanging(this, new FeatRankFactsRowChangeEvent(((FeatRankFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FeatRankFactsRowDeleted != null)) {
                    this.FeatRankFactsRowDeleted(this, new FeatRankFactsRowChangeEvent(((FeatRankFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FeatRankFactsRowDeleting != null)) {
                    this.FeatRankFactsRowDeleting(this, new FeatRankFactsRowChangeEvent(((FeatRankFactsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFeatRankFactsRow(FeatRankFactsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FeatRankFactsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FeatEffectsDataTable : global::System.Data.TypedTableBase<FeatEffectsRow> {
            
            private global::System.Data.DataColumn columnFeat_Name;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactNo;
            
            private global::System.Data.DataColumn columnEffectDescription_Text;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatEffectsDataTable() {
                this.TableName = "FeatEffects";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FeatEffectsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FeatEffectsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_NameColumn {
                get {
                    return this.columnFeat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactNoColumn {
                get {
                    return this.columnFactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EffectDescription_TextColumn {
                get {
                    return this.columnEffectDescription_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatEffectsRow this[int index] {
                get {
                    return ((FeatEffectsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatEffectsRowChangeEventHandler FeatEffectsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatEffectsRowChangeEventHandler FeatEffectsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatEffectsRowChangeEventHandler FeatEffectsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatEffectsRowChangeEventHandler FeatEffectsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFeatEffectsRow(FeatEffectsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatEffectsRow AddFeatEffectsRow(string Feat_Name, string FactType, int FactNo, EffectDescriptionsRow parentEffectDescriptionsRowByFK_EffectDescriptions_FeatEffects) {
                FeatEffectsRow rowFeatEffectsRow = ((FeatEffectsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Feat_Name,
                        FactType,
                        FactNo,
                        null};
                if ((parentEffectDescriptionsRowByFK_EffectDescriptions_FeatEffects != null)) {
                    columnValuesArray[3] = parentEffectDescriptionsRowByFK_EffectDescriptions_FeatEffects[0];
                }
                rowFeatEffectsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFeatEffectsRow);
                return rowFeatEffectsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatEffectsRow FindByFeat_NameFactTypeFactNo(string Feat_Name, string FactType, int FactNo) {
                return ((FeatEffectsRow)(this.Rows.Find(new object[] {
                            Feat_Name,
                            FactType,
                            FactNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FeatEffectsDataTable cln = ((FeatEffectsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FeatEffectsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFeat_Name = base.Columns["Feat_Name"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactNo = base.Columns["FactNo"];
                this.columnEffectDescription_Text = base.Columns["EffectDescription_Text"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFeat_Name = new global::System.Data.DataColumn("Feat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Name);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactNo = new global::System.Data.DataColumn("FactNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactNo);
                this.columnEffectDescription_Text = new global::System.Data.DataColumn("EffectDescription_Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectDescription_Text);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeat_Name,
                                this.columnFactType,
                                this.columnFactNo}, true));
                this.columnFeat_Name.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactNo.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatEffectsRow NewFeatEffectsRow() {
                return ((FeatEffectsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FeatEffectsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FeatEffectsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FeatEffectsRowChanged != null)) {
                    this.FeatEffectsRowChanged(this, new FeatEffectsRowChangeEvent(((FeatEffectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FeatEffectsRowChanging != null)) {
                    this.FeatEffectsRowChanging(this, new FeatEffectsRowChangeEvent(((FeatEffectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FeatEffectsRowDeleted != null)) {
                    this.FeatEffectsRowDeleted(this, new FeatEffectsRowChangeEvent(((FeatEffectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FeatEffectsRowDeleting != null)) {
                    this.FeatEffectsRowDeleting(this, new FeatEffectsRowChangeEvent(((FeatEffectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFeatEffectsRow(FeatEffectsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FeatEffectsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FeatRankEffectsDataTable : global::System.Data.TypedTableBase<FeatRankEffectsRow> {
            
            private global::System.Data.DataColumn columnFeat_Name;
            
            private global::System.Data.DataColumn columnFeat_Rank;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactNo;
            
            private global::System.Data.DataColumn columnEffectDescription_Text;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankEffectsDataTable() {
                this.TableName = "FeatRankEffects";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FeatRankEffectsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FeatRankEffectsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_NameColumn {
                get {
                    return this.columnFeat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_RankColumn {
                get {
                    return this.columnFeat_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactNoColumn {
                get {
                    return this.columnFactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EffectDescription_TextColumn {
                get {
                    return this.columnEffectDescription_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankEffectsRow this[int index] {
                get {
                    return ((FeatRankEffectsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRankEffectsRowChangeEventHandler FeatRankEffectsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRankEffectsRowChangeEventHandler FeatRankEffectsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRankEffectsRowChangeEventHandler FeatRankEffectsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRankEffectsRowChangeEventHandler FeatRankEffectsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFeatRankEffectsRow(FeatRankEffectsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankEffectsRow AddFeatRankEffectsRow(string Feat_Name, int Feat_Rank, string FactType, int FactNo, EffectDescriptionsRow parentEffectDescriptionsRowByFK_EffectDescriptions_FeatRankEffects) {
                FeatRankEffectsRow rowFeatRankEffectsRow = ((FeatRankEffectsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Feat_Name,
                        Feat_Rank,
                        FactType,
                        FactNo,
                        null};
                if ((parentEffectDescriptionsRowByFK_EffectDescriptions_FeatRankEffects != null)) {
                    columnValuesArray[4] = parentEffectDescriptionsRowByFK_EffectDescriptions_FeatRankEffects[0];
                }
                rowFeatRankEffectsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFeatRankEffectsRow);
                return rowFeatRankEffectsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankEffectsRow FindByFeat_NameFeat_RankFactTypeFactNo(string Feat_Name, int Feat_Rank, string FactType, int FactNo) {
                return ((FeatRankEffectsRow)(this.Rows.Find(new object[] {
                            Feat_Name,
                            Feat_Rank,
                            FactType,
                            FactNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FeatRankEffectsDataTable cln = ((FeatRankEffectsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FeatRankEffectsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFeat_Name = base.Columns["Feat_Name"];
                this.columnFeat_Rank = base.Columns["Feat_Rank"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactNo = base.Columns["FactNo"];
                this.columnEffectDescription_Text = base.Columns["EffectDescription_Text"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFeat_Name = new global::System.Data.DataColumn("Feat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Name);
                this.columnFeat_Rank = new global::System.Data.DataColumn("Feat_Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Rank);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactNo = new global::System.Data.DataColumn("FactNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactNo);
                this.columnEffectDescription_Text = new global::System.Data.DataColumn("EffectDescription_Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectDescription_Text);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeat_Name,
                                this.columnFeat_Rank,
                                this.columnFactType,
                                this.columnFactNo}, true));
                this.columnFeat_Name.AllowDBNull = false;
                this.columnFeat_Rank.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactNo.AllowDBNull = false;
                this.columnEffectDescription_Text.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankEffectsRow NewFeatRankEffectsRow() {
                return ((FeatRankEffectsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FeatRankEffectsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FeatRankEffectsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FeatRankEffectsRowChanged != null)) {
                    this.FeatRankEffectsRowChanged(this, new FeatRankEffectsRowChangeEvent(((FeatRankEffectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FeatRankEffectsRowChanging != null)) {
                    this.FeatRankEffectsRowChanging(this, new FeatRankEffectsRowChangeEvent(((FeatRankEffectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FeatRankEffectsRowDeleted != null)) {
                    this.FeatRankEffectsRowDeleted(this, new FeatRankEffectsRowChangeEvent(((FeatRankEffectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FeatRankEffectsRowDeleting != null)) {
                    this.FeatRankEffectsRowDeleting(this, new FeatRankEffectsRowChangeEvent(((FeatRankEffectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFeatRankEffectsRow(FeatRankEffectsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FeatRankEffectsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FeatRankKeywordDataTable : global::System.Data.TypedTableBase<FeatRankKeywordRow> {
            
            private global::System.Data.DataColumn columnFeat_Name;
            
            private global::System.Data.DataColumn columnFeat_Rank;
            
            private global::System.Data.DataColumn columnFactType;
            
            private global::System.Data.DataColumn columnFactNo;
            
            private global::System.Data.DataColumn columnKeywordType_Name;
            
            private global::System.Data.DataColumn columnKeyword_Name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankKeywordDataTable() {
                this.TableName = "FeatRankKeyword";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FeatRankKeywordDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FeatRankKeywordDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_NameColumn {
                get {
                    return this.columnFeat_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Feat_RankColumn {
                get {
                    return this.columnFeat_Rank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactTypeColumn {
                get {
                    return this.columnFactType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactNoColumn {
                get {
                    return this.columnFactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KeywordType_NameColumn {
                get {
                    return this.columnKeywordType_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Keyword_NameColumn {
                get {
                    return this.columnKeyword_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankKeywordRow this[int index] {
                get {
                    return ((FeatRankKeywordRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRankKeywordRowChangeEventHandler FeatRankKeywordRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRankKeywordRowChangeEventHandler FeatRankKeywordRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRankKeywordRowChangeEventHandler FeatRankKeywordRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FeatRankKeywordRowChangeEventHandler FeatRankKeywordRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFeatRankKeywordRow(FeatRankKeywordRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankKeywordRow AddFeatRankKeywordRow(string Feat_Name, int Feat_Rank, string FactType, int FactNo, string KeywordType_Name, string Keyword_Name) {
                FeatRankKeywordRow rowFeatRankKeywordRow = ((FeatRankKeywordRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Feat_Name,
                        Feat_Rank,
                        FactType,
                        FactNo,
                        KeywordType_Name,
                        Keyword_Name};
                rowFeatRankKeywordRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFeatRankKeywordRow);
                return rowFeatRankKeywordRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankKeywordRow FindByFeat_NameFeat_RankFactTypeFactNo(string Feat_Name, int Feat_Rank, string FactType, int FactNo) {
                return ((FeatRankKeywordRow)(this.Rows.Find(new object[] {
                            Feat_Name,
                            Feat_Rank,
                            FactType,
                            FactNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FeatRankKeywordDataTable cln = ((FeatRankKeywordDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FeatRankKeywordDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFeat_Name = base.Columns["Feat_Name"];
                this.columnFeat_Rank = base.Columns["Feat_Rank"];
                this.columnFactType = base.Columns["FactType"];
                this.columnFactNo = base.Columns["FactNo"];
                this.columnKeywordType_Name = base.Columns["KeywordType_Name"];
                this.columnKeyword_Name = base.Columns["Keyword_Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFeat_Name = new global::System.Data.DataColumn("Feat_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Name);
                this.columnFeat_Rank = new global::System.Data.DataColumn("Feat_Rank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeat_Rank);
                this.columnFactType = new global::System.Data.DataColumn("FactType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactType);
                this.columnFactNo = new global::System.Data.DataColumn("FactNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactNo);
                this.columnKeywordType_Name = new global::System.Data.DataColumn("KeywordType_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeywordType_Name);
                this.columnKeyword_Name = new global::System.Data.DataColumn("Keyword_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyword_Name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFeat_Name,
                                this.columnFeat_Rank,
                                this.columnFactType,
                                this.columnFactNo}, true));
                this.columnFeat_Name.AllowDBNull = false;
                this.columnFeat_Rank.AllowDBNull = false;
                this.columnFactType.AllowDBNull = false;
                this.columnFactNo.AllowDBNull = false;
                this.columnKeywordType_Name.AllowDBNull = false;
                this.columnKeyword_Name.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankKeywordRow NewFeatRankKeywordRow() {
                return ((FeatRankKeywordRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FeatRankKeywordRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FeatRankKeywordRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FeatRankKeywordRowChanged != null)) {
                    this.FeatRankKeywordRowChanged(this, new FeatRankKeywordRowChangeEvent(((FeatRankKeywordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FeatRankKeywordRowChanging != null)) {
                    this.FeatRankKeywordRowChanging(this, new FeatRankKeywordRowChangeEvent(((FeatRankKeywordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FeatRankKeywordRowDeleted != null)) {
                    this.FeatRankKeywordRowDeleted(this, new FeatRankKeywordRowChangeEvent(((FeatRankKeywordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FeatRankKeywordRowDeleting != null)) {
                    this.FeatRankKeywordRowDeleting(this, new FeatRankKeywordRowChangeEvent(((FeatRankKeywordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFeatRankKeywordRow(FeatRankKeywordRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FeatRankKeywordDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KeywordTypesDataTable : global::System.Data.TypedTableBase<KeywordTypesRow> {
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordTypesDataTable() {
                this.TableName = "KeywordTypes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal KeywordTypesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected KeywordTypesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordTypesRow this[int index] {
                get {
                    return ((KeywordTypesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KeywordTypesRowChangeEventHandler KeywordTypesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KeywordTypesRowChangeEventHandler KeywordTypesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KeywordTypesRowChangeEventHandler KeywordTypesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KeywordTypesRowChangeEventHandler KeywordTypesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddKeywordTypesRow(KeywordTypesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordTypesRow AddKeywordTypesRow(string Name) {
                KeywordTypesRow rowKeywordTypesRow = ((KeywordTypesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name};
                rowKeywordTypesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKeywordTypesRow);
                return rowKeywordTypesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordTypesRow FindByName(string Name) {
                return ((KeywordTypesRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                KeywordTypesDataTable cln = ((KeywordTypesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KeywordTypesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordTypesRow NewKeywordTypesRow() {
                return ((KeywordTypesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KeywordTypesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(KeywordTypesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KeywordTypesRowChanged != null)) {
                    this.KeywordTypesRowChanged(this, new KeywordTypesRowChangeEvent(((KeywordTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KeywordTypesRowChanging != null)) {
                    this.KeywordTypesRowChanging(this, new KeywordTypesRowChangeEvent(((KeywordTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KeywordTypesRowDeleted != null)) {
                    this.KeywordTypesRowDeleted(this, new KeywordTypesRowChangeEvent(((KeywordTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KeywordTypesRowDeleting != null)) {
                    this.KeywordTypesRowDeleting(this, new KeywordTypesRowChangeEvent(((KeywordTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveKeywordTypesRow(KeywordTypesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KeywordTypesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KeywordsDataTable : global::System.Data.TypedTableBase<KeywordsRow> {
            
            private global::System.Data.DataColumn columnType_Name;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnValue_Name;
            
            private global::System.Data.DataColumn columnNotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordsDataTable() {
                this.TableName = "Keywords";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal KeywordsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected KeywordsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Type_NameColumn {
                get {
                    return this.columnType_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Value_NameColumn {
                get {
                    return this.columnValue_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordsRow this[int index] {
                get {
                    return ((KeywordsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KeywordsRowChangeEventHandler KeywordsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KeywordsRowChangeEventHandler KeywordsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KeywordsRowChangeEventHandler KeywordsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KeywordsRowChangeEventHandler KeywordsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddKeywordsRow(KeywordsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordsRow AddKeywordsRow(KeywordTypesRow parentKeywordTypesRowByFK_KeywordTypes_Keywords, string Name, KeywordValuesRow parentKeywordValuesRowByFK_KeywordValues_Keywords, string Notes) {
                KeywordsRow rowKeywordsRow = ((KeywordsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        null,
                        Notes};
                if ((parentKeywordTypesRowByFK_KeywordTypes_Keywords != null)) {
                    columnValuesArray[0] = parentKeywordTypesRowByFK_KeywordTypes_Keywords[0];
                }
                if ((parentKeywordValuesRowByFK_KeywordValues_Keywords != null)) {
                    columnValuesArray[2] = parentKeywordValuesRowByFK_KeywordValues_Keywords[0];
                }
                rowKeywordsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKeywordsRow);
                return rowKeywordsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordsRow FindByType_NameName(string Type_Name, string Name) {
                return ((KeywordsRow)(this.Rows.Find(new object[] {
                            Type_Name,
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                KeywordsDataTable cln = ((KeywordsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KeywordsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnType_Name = base.Columns["Type_Name"];
                this.columnName = base.Columns["Name"];
                this.columnValue_Name = base.Columns["Value_Name"];
                this.columnNotes = base.Columns["Notes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnType_Name = new global::System.Data.DataColumn("Type_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType_Name);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnValue_Name = new global::System.Data.DataColumn("Value_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue_Name);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnType_Name,
                                this.columnName}, true));
                this.columnType_Name.AllowDBNull = false;
                this.columnName.AllowDBNull = false;
                this.columnValue_Name.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordsRow NewKeywordsRow() {
                return ((KeywordsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KeywordsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(KeywordsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KeywordsRowChanged != null)) {
                    this.KeywordsRowChanged(this, new KeywordsRowChangeEvent(((KeywordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KeywordsRowChanging != null)) {
                    this.KeywordsRowChanging(this, new KeywordsRowChangeEvent(((KeywordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KeywordsRowDeleted != null)) {
                    this.KeywordsRowDeleted(this, new KeywordsRowChangeEvent(((KeywordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KeywordsRowDeleting != null)) {
                    this.KeywordsRowDeleting(this, new KeywordsRowChangeEvent(((KeywordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveKeywordsRow(KeywordsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KeywordsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KeywordValuesDataTable : global::System.Data.TypedTableBase<KeywordValuesRow> {
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordValuesDataTable() {
                this.TableName = "KeywordValues";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal KeywordValuesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected KeywordValuesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValueColumn {
                get {
                    return this.columnValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordValuesRow this[int index] {
                get {
                    return ((KeywordValuesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KeywordValuesRowChangeEventHandler KeywordValuesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KeywordValuesRowChangeEventHandler KeywordValuesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KeywordValuesRowChangeEventHandler KeywordValuesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KeywordValuesRowChangeEventHandler KeywordValuesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddKeywordValuesRow(KeywordValuesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordValuesRow AddKeywordValuesRow(string Name, decimal Value) {
                KeywordValuesRow rowKeywordValuesRow = ((KeywordValuesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name,
                        Value};
                rowKeywordValuesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKeywordValuesRow);
                return rowKeywordValuesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordValuesRow FindByName(string Name) {
                return ((KeywordValuesRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                KeywordValuesDataTable cln = ((KeywordValuesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KeywordValuesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnValue = base.Columns["Value"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnValue = new global::System.Data.DataColumn("Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordValuesRow NewKeywordValuesRow() {
                return ((KeywordValuesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KeywordValuesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(KeywordValuesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KeywordValuesRowChanged != null)) {
                    this.KeywordValuesRowChanged(this, new KeywordValuesRowChangeEvent(((KeywordValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KeywordValuesRowChanging != null)) {
                    this.KeywordValuesRowChanging(this, new KeywordValuesRowChangeEvent(((KeywordValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KeywordValuesRowDeleted != null)) {
                    this.KeywordValuesRowDeleted(this, new KeywordValuesRowChangeEvent(((KeywordValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KeywordValuesRowDeleting != null)) {
                    this.KeywordValuesRowDeleting(this, new KeywordValuesRowChangeEvent(((KeywordValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveKeywordValuesRow(KeywordValuesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WikiData ds = new WikiData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KeywordValuesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AdvancementsRow : global::System.Data.DataRow {
            
            private AdvancementsDataTable tableAdvancements;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvancementsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAdvancements = ((AdvancementsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableAdvancements.NameColumn]));
                }
                set {
                    this[this.tableAdvancements.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatsRow[] GetFeatsRows() {
                if ((this.Table.ChildRelations["FK_Advancements_Feats"] == null)) {
                    return new FeatsRow[0];
                }
                else {
                    return ((FeatsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Advancements_Feats"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRanksRow[] GetAdvancementRanksRows() {
                if ((this.Table.ChildRelations["FK_Advancements_AdvancementRanks"] == null)) {
                    return new AdvancementRanksRow[0];
                }
                else {
                    return ((AdvancementRanksRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Advancements_AdvancementRanks"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AdvancementRanksRow : global::System.Data.DataRow {
            
            private AdvancementRanksDataTable tableAdvancementRanks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvancementRanksRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAdvancementRanks = ((AdvancementRanksDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Advancement_Name {
                get {
                    return ((string)(this[this.tableAdvancementRanks.Advancement_NameColumn]));
                }
                set {
                    this[this.tableAdvancementRanks.Advancement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Rank {
                get {
                    return ((int)(this[this.tableAdvancementRanks.RankColumn]));
                }
                set {
                    this[this.tableAdvancementRanks.RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExpCost {
                get {
                    return ((int)(this[this.tableAdvancementRanks.ExpCostColumn]));
                }
                set {
                    this[this.tableAdvancementRanks.ExpCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CoinCost {
                get {
                    return ((int)(this[this.tableAdvancementRanks.CoinCostColumn]));
                }
                set {
                    this[this.tableAdvancementRanks.CoinCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementsRow AdvancementsRow {
                get {
                    return ((AdvancementsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Advancements_AdvancementRanks"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Advancements_AdvancementRanks"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRanksRow[] GetFeatRanksRows() {
                if ((this.Table.ChildRelations["FK_AdvancementRanks_FeatRanks"] == null)) {
                    return new FeatRanksRow[0];
                }
                else {
                    return ((FeatRanksRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AdvancementRanks_FeatRanks"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelAdvReqsRow[] GetAchLevelAdvReqsRows() {
                if ((this.Table.ChildRelations["FK_AdvancementRanks_AchLevelAdvReqs"] == null)) {
                    return new AchLevelAdvReqsRow[0];
                }
                else {
                    return ((AchLevelAdvReqsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AdvancementRanks_AchLevelAdvReqs"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactStringsRow[] GetAdvancementRankFactStringsRows() {
                if ((this.Table.ChildRelations["FK_AdvancementRanks_AdvancementRankFactStrings"] == null)) {
                    return new AdvancementRankFactStringsRow[0];
                }
                else {
                    return ((AdvancementRankFactStringsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AdvancementRanks_AdvancementRankFactStrings"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAdvReqsRow[] GetAdvRankAdvReqsRows() {
                if ((this.Table.ChildRelations["FK_AdvancementRanks_AdvRankAdvReq"] == null)) {
                    return new AdvRankAdvReqsRow[0];
                }
                else {
                    return ((AdvRankAdvReqsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AdvancementRanks_AdvRankAdvReq"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactsRow[] GetAdvancementRankFactsRows() {
                if ((this.Table.ChildRelations["FK_AdvancementRanks_AdvancementRankFacts"] == null)) {
                    return new AdvancementRankFactsRow[0];
                }
                else {
                    return ((AdvancementRankFactsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AdvancementRanks_AdvancementRankFacts"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AdvancementRankFactsRow : global::System.Data.DataRow {
            
            private AdvancementRankFactsDataTable tableAdvancementRankFacts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvancementRankFactsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAdvancementRankFacts = ((AdvancementRankFactsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Advancement_Name {
                get {
                    return ((string)(this[this.tableAdvancementRankFacts.Advancement_NameColumn]));
                }
                set {
                    this[this.tableAdvancementRankFacts.Advancement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Advancement_Rank {
                get {
                    return ((int)(this[this.tableAdvancementRankFacts.Advancement_RankColumn]));
                }
                set {
                    this[this.tableAdvancementRankFacts.Advancement_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableAdvancementRankFacts.FactTypeColumn]));
                }
                set {
                    this[this.tableAdvancementRankFacts.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactNo {
                get {
                    return ((int)(this[this.tableAdvancementRankFacts.FactNoColumn]));
                }
                set {
                    this[this.tableAdvancementRankFacts.FactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OptionNo {
                get {
                    return ((int)(this[this.tableAdvancementRankFacts.OptionNoColumn]));
                }
                set {
                    this[this.tableAdvancementRankFacts.OptionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRanksRow AdvancementRanksRowParent {
                get {
                    return ((AdvancementRanksRow)(this.GetParentRow(this.Table.ParentRelations["FK_AdvancementRanks_AdvancementRankFacts"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AdvancementRanks_AdvancementRankFacts"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilBonusesRow[] GetAdvRankAbilBonusesRows() {
                if ((this.Table.ChildRelations["FK_AdvancementRankFacts_AdvRankAbilBonus"] == null)) {
                    return new AdvRankAbilBonusesRow[0];
                }
                else {
                    return ((AdvRankAbilBonusesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AdvancementRankFacts_AdvRankAbilBonus"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilReqsRow[] GetAdvRankAbilReqsRows() {
                if ((this.Table.ChildRelations["FK_AdvancementRankFacts_AdvRankAbilReq"] == null)) {
                    return new AdvRankAbilReqsRow[0];
                }
                else {
                    return ((AdvRankAbilReqsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AdvancementRankFacts_AdvRankAbilReq"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAchReqsRow[] GetAdvRankAchReqsRows() {
                if ((this.Table.ChildRelations["FK_AdvancementRankFacts_AdvRankAchReq"] == null)) {
                    return new AdvRankAchReqsRow[0];
                }
                else {
                    return ((AdvRankAchReqsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AdvancementRankFacts_AdvRankAchReq"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAdvReqsRow[] GetAdvRankAdvReqsRows() {
                if ((this.Table.ChildRelations["FK_AdvancementRankFacts_AdvRankAdvReq"] == null)) {
                    return new AdvRankAdvReqsRow[0];
                }
                else {
                    return ((AdvRankAdvReqsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AdvancementRankFacts_AdvRankAdvReq"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankCatReqsRow[] GetAdvRankCatReqsRows() {
                if ((this.Table.ChildRelations["FK_AdvancementRankFacts_AdvRankCatReq"] == null)) {
                    return new AdvRankCatReqsRow[0];
                }
                else {
                    return ((AdvRankCatReqsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AdvancementRankFacts_AdvRankCatReq"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AbilitiesRow : global::System.Data.DataRow {
            
            private AbilitiesDataTable tableAbilities;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AbilitiesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAbilities = ((AbilitiesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableAbilities.NameColumn]));
                }
                set {
                    this[this.tableAbilities.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilBonusesRow[] GetAdvRankAbilBonusesRows() {
                if ((this.Table.ChildRelations["FK_Abilities_AdvRankAbilBonus"] == null)) {
                    return new AdvRankAbilBonusesRow[0];
                }
                else {
                    return ((AdvRankAbilBonusesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Abilities_AdvRankAbilBonus"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilReqsRow[] GetAdvRankAbilReqsRows() {
                if ((this.Table.ChildRelations["FK_Abilities_AdvRankAbilReq"] == null)) {
                    return new AdvRankAbilReqsRow[0];
                }
                else {
                    return ((AdvRankAbilReqsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Abilities_AdvRankAbilReq"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AchievementCategoriesRow : global::System.Data.DataRow {
            
            private AchievementCategoriesDataTable tableAchievementCategories;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AchievementCategoriesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAchievementCategories = ((AchievementCategoriesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableAchievementCategories.NameColumn]));
                }
                set {
                    this[this.tableAchievementCategories.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelCatBonusesRow[] GetAchLevelCatBonusesRows() {
                if ((this.Table.ChildRelations["FK_AchievementCategories_AchLevelCatBonuses"] == null)) {
                    return new AchLevelCatBonusesRow[0];
                }
                else {
                    return ((AchLevelCatBonusesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AchievementCategories_AchLevelCatBonuses"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankCatReqsRow[] GetAdvRankCatReqsRows() {
                if ((this.Table.ChildRelations["FK_AchievementCategories_AdvRankCatReq"] == null)) {
                    return new AdvRankCatReqsRow[0];
                }
                else {
                    return ((AdvRankCatReqsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AchievementCategories_AdvRankCatReq"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AchievementsRow : global::System.Data.DataRow {
            
            private AchievementsDataTable tableAchievements;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AchievementsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAchievements = ((AchievementsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableAchievements.NameColumn]));
                }
                set {
                    this[this.tableAchievements.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AchievementType {
                get {
                    return ((string)(this[this.tableAchievements.AchievementTypeColumn]));
                }
                set {
                    this[this.tableAchievements.AchievementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DisplayName {
                get {
                    return ((string)(this[this.tableAchievements.DisplayNameColumn]));
                }
                set {
                    this[this.tableAchievements.DisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableAchievements.DescriptionColumn]));
                }
                set {
                    this[this.tableAchievements.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AlwaysGainsInfluence {
                get {
                    return ((bool)(this[this.tableAchievements.AlwaysGainsInfluenceColumn]));
                }
                set {
                    this[this.tableAchievements.AlwaysGainsInfluenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementsRow[] GetCraftAchievementsRows() {
                if ((this.Table.ChildRelations["FK_Achievements_CraftAchievements"] == null)) {
                    return new CraftAchievementsRow[0];
                }
                else {
                    return ((CraftAchievementsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Achievements_CraftAchievements"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RoleAchievementsRow[] GetRoleAchievementsRows() {
                if ((this.Table.ChildRelations["FK_Achievements_RoleAchievements"] == null)) {
                    return new RoleAchievementsRow[0];
                }
                else {
                    return ((RoleAchievementsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Achievements_RoleAchievements"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelsRow[] GetAchievementLevelsRows() {
                if ((this.Table.ChildRelations["FK_Achievements_AchievementLevels"] == null)) {
                    return new AchievementLevelsRow[0];
                }
                else {
                    return ((AchievementLevelsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Achievements_AchievementLevels"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AchievementLevelsRow : global::System.Data.DataRow {
            
            private AchievementLevelsDataTable tableAchievementLevels;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AchievementLevelsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAchievementLevels = ((AchievementLevelsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Achievement_Name {
                get {
                    return ((string)(this[this.tableAchievementLevels.Achievement_NameColumn]));
                }
                set {
                    this[this.tableAchievementLevels.Achievement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Level {
                get {
                    return ((int)(this[this.tableAchievementLevels.LevelColumn]));
                }
                set {
                    this[this.tableAchievementLevels.LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AchievementLevelType {
                get {
                    return ((string)(this[this.tableAchievementLevels.AchievementLevelTypeColumn]));
                }
                set {
                    this[this.tableAchievementLevels.AchievementLevelTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DisplayName {
                get {
                    return ((string)(this[this.tableAchievementLevels.DisplayNameColumn]));
                }
                set {
                    this[this.tableAchievementLevels.DisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableAchievementLevels.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'AchievementLevels\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAchievementLevels.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementsRow AchievementsRow {
                get {
                    return ((AchievementsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Achievements_AchievementLevels"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Achievements_AchievementLevels"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableAchievementLevels.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableAchievementLevels.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactStringsRow[] GetAchievementLevelFactStringsRows() {
                if ((this.Table.ChildRelations["FK_AchievementLevels_AchievementLevelFactStrings"] == null)) {
                    return new AchievementLevelFactStringsRow[0];
                }
                else {
                    return ((AchievementLevelFactStringsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AchievementLevels_AchievementLevelFactStrings"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementLevelsRow[] GetCraftAchievementLevelsRows() {
                if ((this.Table.ChildRelations["FK_AchievementLevels_CraftAchievementLevels"] == null)) {
                    return new CraftAchievementLevelsRow[0];
                }
                else {
                    return ((CraftAchievementLevelsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AchievementLevels_CraftAchievementLevels"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CounterAchievementLevelsRow[] GetCounterAchievementLevelsRows() {
                if ((this.Table.ChildRelations["FK_AchievementLevels_CounterAchievementLevels"] == null)) {
                    return new CounterAchievementLevelsRow[0];
                }
                else {
                    return ((CounterAchievementLevelsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AchievementLevels_CounterAchievementLevels"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAchReqsRow[] GetAdvRankAchReqsRows() {
                if ((this.Table.ChildRelations["FK_AchievementLevels_AdvRankAchReq"] == null)) {
                    return new AdvRankAchReqsRow[0];
                }
                else {
                    return ((AdvRankAchReqsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AchievementLevels_AdvRankAchReq"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactsRow[] GetAchievementLevelFactsRows() {
                if ((this.Table.ChildRelations["FK_AchievementLevels_AchievementLevelFacts"] == null)) {
                    return new AchievementLevelFactsRow[0];
                }
                else {
                    return ((AchievementLevelFactsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AchievementLevels_AchievementLevelFacts"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AchievementLevelFactsRow : global::System.Data.DataRow {
            
            private AchievementLevelFactsDataTable tableAchievementLevelFacts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AchievementLevelFactsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAchievementLevelFacts = ((AchievementLevelFactsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Achievement_Name {
                get {
                    return ((string)(this[this.tableAchievementLevelFacts.Achievement_NameColumn]));
                }
                set {
                    this[this.tableAchievementLevelFacts.Achievement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Achievement_Level {
                get {
                    return ((int)(this[this.tableAchievementLevelFacts.Achievement_LevelColumn]));
                }
                set {
                    this[this.tableAchievementLevelFacts.Achievement_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableAchievementLevelFacts.FactTypeColumn]));
                }
                set {
                    this[this.tableAchievementLevelFacts.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactNo {
                get {
                    return ((int)(this[this.tableAchievementLevelFacts.FactNoColumn]));
                }
                set {
                    this[this.tableAchievementLevelFacts.FactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OptionNo {
                get {
                    return ((int)(this[this.tableAchievementLevelFacts.OptionNoColumn]));
                }
                set {
                    this[this.tableAchievementLevelFacts.OptionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelsRow AchievementLevelsRowParent {
                get {
                    return ((AchievementLevelsRow)(this.GetParentRow(this.Table.ParentRelations["FK_AchievementLevels_AchievementLevelFacts"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AchievementLevels_AchievementLevelFacts"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelAdvReqsRow[] GetAchLevelAdvReqsRows() {
                if ((this.Table.ChildRelations["FK_AchievementLevelFacts_AchLevelAdvReqs"] == null)) {
                    return new AchLevelAdvReqsRow[0];
                }
                else {
                    return ((AchLevelAdvReqsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AchievementLevelFacts_AchLevelAdvReqs"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelCatBonusesRow[] GetAchLevelCatBonusesRows() {
                if ((this.Table.ChildRelations["FK_AchievementLevelFacts_AchLevelCatBonuses"] == null)) {
                    return new AchLevelCatBonusesRow[0];
                }
                else {
                    return ((AchLevelCatBonusesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AchievementLevelFacts_AchLevelCatBonuses"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AdvRankCatReqsRow : global::System.Data.DataRow {
            
            private AdvRankCatReqsDataTable tableAdvRankCatReqs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvRankCatReqsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAdvRankCatReqs = ((AdvRankCatReqsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Advancement_Name {
                get {
                    return ((string)(this[this.tableAdvRankCatReqs.Advancement_NameColumn]));
                }
                set {
                    this[this.tableAdvRankCatReqs.Advancement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Advancement_Rank {
                get {
                    return ((int)(this[this.tableAdvRankCatReqs.Advancement_RankColumn]));
                }
                set {
                    this[this.tableAdvRankCatReqs.Advancement_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableAdvRankCatReqs.FactTypeColumn]));
                }
                set {
                    this[this.tableAdvRankCatReqs.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactNo {
                get {
                    return ((int)(this[this.tableAdvRankCatReqs.FactNoColumn]));
                }
                set {
                    this[this.tableAdvRankCatReqs.FactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OptionNo {
                get {
                    return ((int)(this[this.tableAdvRankCatReqs.OptionNoColumn]));
                }
                set {
                    this[this.tableAdvRankCatReqs.OptionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RequiredCategory_Name {
                get {
                    return ((string)(this[this.tableAdvRankCatReqs.RequiredCategory_NameColumn]));
                }
                set {
                    this[this.tableAdvRankCatReqs.RequiredCategory_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RequiredCategoryPoints {
                get {
                    return ((int)(this[this.tableAdvRankCatReqs.RequiredCategoryPointsColumn]));
                }
                set {
                    this[this.tableAdvRankCatReqs.RequiredCategoryPointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementCategoriesRow AchievementCategoriesRow {
                get {
                    return ((AchievementCategoriesRow)(this.GetParentRow(this.Table.ParentRelations["FK_AchievementCategories_AdvRankCatReq"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AchievementCategories_AdvRankCatReq"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactsRow AdvancementRankFactsRowParent {
                get {
                    return ((AdvancementRankFactsRow)(this.GetParentRow(this.Table.ParentRelations["FK_AdvancementRankFacts_AdvRankCatReq"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AdvancementRankFacts_AdvRankCatReq"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AdvRankAdvReqsRow : global::System.Data.DataRow {
            
            private AdvRankAdvReqsDataTable tableAdvRankAdvReqs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvRankAdvReqsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAdvRankAdvReqs = ((AdvRankAdvReqsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Advancement_Name {
                get {
                    return ((string)(this[this.tableAdvRankAdvReqs.Advancement_NameColumn]));
                }
                set {
                    this[this.tableAdvRankAdvReqs.Advancement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Advancement_Rank {
                get {
                    return ((int)(this[this.tableAdvRankAdvReqs.Advancement_RankColumn]));
                }
                set {
                    this[this.tableAdvRankAdvReqs.Advancement_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableAdvRankAdvReqs.FactTypeColumn]));
                }
                set {
                    this[this.tableAdvRankAdvReqs.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactNo {
                get {
                    return ((int)(this[this.tableAdvRankAdvReqs.FactNoColumn]));
                }
                set {
                    this[this.tableAdvRankAdvReqs.FactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OptionNo {
                get {
                    return ((int)(this[this.tableAdvRankAdvReqs.OptionNoColumn]));
                }
                set {
                    this[this.tableAdvRankAdvReqs.OptionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RequiredAdvancement_Name {
                get {
                    return ((string)(this[this.tableAdvRankAdvReqs.RequiredAdvancement_NameColumn]));
                }
                set {
                    this[this.tableAdvRankAdvReqs.RequiredAdvancement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RequiredAdvancement_Rank {
                get {
                    return ((int)(this[this.tableAdvRankAdvReqs.RequiredAdvancement_RankColumn]));
                }
                set {
                    this[this.tableAdvRankAdvReqs.RequiredAdvancement_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRanksRow AdvancementRanksRowParent {
                get {
                    return ((AdvancementRanksRow)(this.GetParentRow(this.Table.ParentRelations["FK_AdvancementRanks_AdvRankAdvReq"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AdvancementRanks_AdvRankAdvReq"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactsRow AdvancementRankFactsRowParent {
                get {
                    return ((AdvancementRankFactsRow)(this.GetParentRow(this.Table.ParentRelations["FK_AdvancementRankFacts_AdvRankAdvReq"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AdvancementRankFacts_AdvRankAdvReq"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AdvRankAchReqsRow : global::System.Data.DataRow {
            
            private AdvRankAchReqsDataTable tableAdvRankAchReqs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvRankAchReqsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAdvRankAchReqs = ((AdvRankAchReqsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Advancement_Name {
                get {
                    return ((string)(this[this.tableAdvRankAchReqs.Advancement_NameColumn]));
                }
                set {
                    this[this.tableAdvRankAchReqs.Advancement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Advancement_Rank {
                get {
                    return ((int)(this[this.tableAdvRankAchReqs.Advancement_RankColumn]));
                }
                set {
                    this[this.tableAdvRankAchReqs.Advancement_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableAdvRankAchReqs.FactTypeColumn]));
                }
                set {
                    this[this.tableAdvRankAchReqs.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactNo {
                get {
                    return ((int)(this[this.tableAdvRankAchReqs.FactNoColumn]));
                }
                set {
                    this[this.tableAdvRankAchReqs.FactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OptionNo {
                get {
                    return ((int)(this[this.tableAdvRankAchReqs.OptionNoColumn]));
                }
                set {
                    this[this.tableAdvRankAchReqs.OptionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RequiredAchievement_Name {
                get {
                    return ((string)(this[this.tableAdvRankAchReqs.RequiredAchievement_NameColumn]));
                }
                set {
                    this[this.tableAdvRankAchReqs.RequiredAchievement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RequiredAchievement_Level {
                get {
                    return ((int)(this[this.tableAdvRankAchReqs.RequiredAchievement_LevelColumn]));
                }
                set {
                    this[this.tableAdvRankAchReqs.RequiredAchievement_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelsRow AchievementLevelsRowParent {
                get {
                    return ((AchievementLevelsRow)(this.GetParentRow(this.Table.ParentRelations["FK_AchievementLevels_AdvRankAchReq"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AchievementLevels_AdvRankAchReq"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactsRow AdvancementRankFactsRowParent {
                get {
                    return ((AdvancementRankFactsRow)(this.GetParentRow(this.Table.ParentRelations["FK_AdvancementRankFacts_AdvRankAchReq"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AdvancementRankFacts_AdvRankAchReq"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AdvRankAbilReqsRow : global::System.Data.DataRow {
            
            private AdvRankAbilReqsDataTable tableAdvRankAbilReqs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvRankAbilReqsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAdvRankAbilReqs = ((AdvRankAbilReqsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Advancement_Name {
                get {
                    return ((string)(this[this.tableAdvRankAbilReqs.Advancement_NameColumn]));
                }
                set {
                    this[this.tableAdvRankAbilReqs.Advancement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Advancement_Rank {
                get {
                    return ((int)(this[this.tableAdvRankAbilReqs.Advancement_RankColumn]));
                }
                set {
                    this[this.tableAdvRankAbilReqs.Advancement_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableAdvRankAbilReqs.FactTypeColumn]));
                }
                set {
                    this[this.tableAdvRankAbilReqs.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactNo {
                get {
                    return ((int)(this[this.tableAdvRankAbilReqs.FactNoColumn]));
                }
                set {
                    this[this.tableAdvRankAbilReqs.FactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OptionNo {
                get {
                    return ((int)(this[this.tableAdvRankAbilReqs.OptionNoColumn]));
                }
                set {
                    this[this.tableAdvRankAbilReqs.OptionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RequiredAbility_Name {
                get {
                    return ((string)(this[this.tableAdvRankAbilReqs.RequiredAbility_NameColumn]));
                }
                set {
                    this[this.tableAdvRankAbilReqs.RequiredAbility_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RequiredAbilityScore {
                get {
                    return ((int)(this[this.tableAdvRankAbilReqs.RequiredAbilityScoreColumn]));
                }
                set {
                    this[this.tableAdvRankAbilReqs.RequiredAbilityScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbilitiesRow AbilitiesRow {
                get {
                    return ((AbilitiesRow)(this.GetParentRow(this.Table.ParentRelations["FK_Abilities_AdvRankAbilReq"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Abilities_AdvRankAbilReq"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactsRow AdvancementRankFactsRowParent {
                get {
                    return ((AdvancementRankFactsRow)(this.GetParentRow(this.Table.ParentRelations["FK_AdvancementRankFacts_AdvRankAbilReq"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AdvancementRankFacts_AdvRankAbilReq"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AdvRankAbilBonusesRow : global::System.Data.DataRow {
            
            private AdvRankAbilBonusesDataTable tableAdvRankAbilBonuses;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvRankAbilBonusesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAdvRankAbilBonuses = ((AdvRankAbilBonusesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Advancement_Name {
                get {
                    return ((string)(this[this.tableAdvRankAbilBonuses.Advancement_NameColumn]));
                }
                set {
                    this[this.tableAdvRankAbilBonuses.Advancement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Advancement_Rank {
                get {
                    return ((int)(this[this.tableAdvRankAbilBonuses.Advancement_RankColumn]));
                }
                set {
                    this[this.tableAdvRankAbilBonuses.Advancement_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableAdvRankAbilBonuses.FactTypeColumn]));
                }
                set {
                    this[this.tableAdvRankAbilBonuses.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactNo {
                get {
                    return ((int)(this[this.tableAdvRankAbilBonuses.FactNoColumn]));
                }
                set {
                    this[this.tableAdvRankAbilBonuses.FactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OptionNo {
                get {
                    return ((int)(this[this.tableAdvRankAbilBonuses.OptionNoColumn]));
                }
                set {
                    this[this.tableAdvRankAbilBonuses.OptionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BonusAbilityName {
                get {
                    return ((string)(this[this.tableAdvRankAbilBonuses.BonusAbilityNameColumn]));
                }
                set {
                    this[this.tableAdvRankAbilBonuses.BonusAbilityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BonusAbilityScore {
                get {
                    return ((decimal)(this[this.tableAdvRankAbilBonuses.BonusAbilityScoreColumn]));
                }
                set {
                    this[this.tableAdvRankAbilBonuses.BonusAbilityScoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbilitiesRow AbilitiesRow {
                get {
                    return ((AbilitiesRow)(this.GetParentRow(this.Table.ParentRelations["FK_Abilities_AdvRankAbilBonus"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Abilities_AdvRankAbilBonus"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactsRow AdvancementRankFactsRowParent {
                get {
                    return ((AdvancementRankFactsRow)(this.GetParentRow(this.Table.ParentRelations["FK_AdvancementRankFacts_AdvRankAbilBonus"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AdvancementRankFacts_AdvRankAbilBonus"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AdvancementRankFactStringsRow : global::System.Data.DataRow {
            
            private AdvancementRankFactStringsDataTable tableAdvancementRankFactStrings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AdvancementRankFactStringsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAdvancementRankFactStrings = ((AdvancementRankFactStringsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Advancement_Name {
                get {
                    return ((string)(this[this.tableAdvancementRankFactStrings.Advancement_NameColumn]));
                }
                set {
                    this[this.tableAdvancementRankFactStrings.Advancement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Advancement_Rank {
                get {
                    return ((int)(this[this.tableAdvancementRankFactStrings.Advancement_RankColumn]));
                }
                set {
                    this[this.tableAdvancementRankFactStrings.Advancement_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableAdvancementRankFactStrings.FactTypeColumn]));
                }
                set {
                    this[this.tableAdvancementRankFactStrings.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactString {
                get {
                    return ((string)(this[this.tableAdvancementRankFactStrings.FactStringColumn]));
                }
                set {
                    this[this.tableAdvancementRankFactStrings.FactStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRanksRow AdvancementRanksRowParent {
                get {
                    return ((AdvancementRanksRow)(this.GetParentRow(this.Table.ParentRelations["FK_AdvancementRanks_AdvancementRankFactStrings"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AdvancementRanks_AdvancementRankFactStrings"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FeatsRow : global::System.Data.DataRow {
            
            private FeatsDataTable tableFeats;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FeatsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFeats = ((FeatsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableFeats.NameColumn]));
                }
                set {
                    this[this.tableFeats.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FeatType {
                get {
                    return ((string)(this[this.tableFeats.FeatTypeColumn]));
                }
                set {
                    this[this.tableFeats.FeatTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Role_Name {
                get {
                    return ((string)(this[this.tableFeats.Role_NameColumn]));
                }
                set {
                    this[this.tableFeats.Role_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Advancement_Name {
                get {
                    try {
                        return ((string)(this[this.tableFeats.Advancement_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Advancement_Name\' in table \'Feats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFeats.Advancement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementsRow AdvancementsRow {
                get {
                    return ((AdvancementsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Advancements_Feats"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Advancements_Feats"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RolesRow RolesRow {
                get {
                    return ((RolesRow)(this.GetParentRow(this.Table.ParentRelations["FK_Roles_Feats"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Roles_Feats"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdvancement_NameNull() {
                return this.IsNull(this.tableFeats.Advancement_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdvancement_NameNull() {
                this[this.tableFeats.Advancement_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatFactsRow[] GetFeatFactsRows() {
                if ((this.Table.ChildRelations["FK_Feats_FeatFacts"] == null)) {
                    return new FeatFactsRow[0];
                }
                else {
                    return ((FeatFactsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Feats_FeatFacts"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRanksRow[] GetFeatRanksRowsByFK_Feats_FeatRanks() {
                if ((this.Table.ChildRelations["FK_Feats_FeatRanks"] == null)) {
                    return new FeatRanksRow[0];
                }
                else {
                    return ((FeatRanksRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Feats_FeatRanks"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRanksRow[] GetFeatRanksRowsByFK_Feats_FeatRanks1() {
                if ((this.Table.ChildRelations["FK_Feats_FeatRanks1"] == null)) {
                    return new FeatRanksRow[0];
                }
                else {
                    return ((FeatRanksRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Feats_FeatRanks1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChanneledFeatsRow[] GetChanneledFeatsRows() {
                if ((this.Table.ChildRelations["FK_Feats_ChanneledFeats"] == null)) {
                    return new ChanneledFeatsRow[0];
                }
                else {
                    return ((ChanneledFeatsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Feats_ChanneledFeats"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActiveFeatsRow[] GetActiveFeatsRows() {
                if ((this.Table.ChildRelations["FK_Feats_ActiveFeats"] == null)) {
                    return new ActiveFeatsRow[0];
                }
                else {
                    return ((ActiveFeatsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Feats_ActiveFeats"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RolesRow : global::System.Data.DataRow {
            
            private RolesDataTable tableRoles;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RolesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRoles = ((RolesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableRoles.NameColumn]));
                }
                set {
                    this[this.tableRoles.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RoleAchievementsRow[] GetRoleAchievementsRows() {
                if ((this.Table.ChildRelations["FK_Roles_RoleAchievements"] == null)) {
                    return new RoleAchievementsRow[0];
                }
                else {
                    return ((RoleAchievementsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Roles_RoleAchievements"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatsRow[] GetFeatsRows() {
                if ((this.Table.ChildRelations["FK_Roles_Feats"] == null)) {
                    return new FeatsRow[0];
                }
                else {
                    return ((FeatsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Roles_Feats"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AttackFormsRow : global::System.Data.DataRow {
            
            private AttackFormsDataTable tableAttackForms;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AttackFormsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAttackForms = ((AttackFormsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableAttackForms.NameColumn]));
                }
                set {
                    this[this.tableAttackForms.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StandardAttacksRow[] GetStandardAttacksRows() {
                if ((this.Table.ChildRelations["FK_AttackForms_StandardAttacks"] == null)) {
                    return new StandardAttacksRow[0];
                }
                else {
                    return ((StandardAttacksRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AttackForms_StandardAttacks"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WeaponCategoriesRow : global::System.Data.DataRow {
            
            private WeaponCategoriesDataTable tableWeaponCategories;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WeaponCategoriesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWeaponCategories = ((WeaponCategoriesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableWeaponCategories.NameColumn]));
                }
                set {
                    this[this.tableWeaponCategories.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActiveFeatsRow[] GetActiveFeatsRows() {
                if ((this.Table.ChildRelations["FK_WeaponCategories_ActiveFeats"] == null)) {
                    return new ActiveFeatsRow[0];
                }
                else {
                    return ((ActiveFeatsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_WeaponCategories_ActiveFeats"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SpecificWeaponsRow : global::System.Data.DataRow {
            
            private SpecificWeaponsDataTable tableSpecificWeapons;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SpecificWeaponsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSpecificWeapons = ((SpecificWeaponsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableSpecificWeapons.NameColumn]));
                }
                set {
                    this[this.tableSpecificWeapons.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StandardAttacksRow[] GetStandardAttacksRows() {
                if ((this.Table.ChildRelations["FK_SpecificWeapons_StandardAttacks"] == null)) {
                    return new StandardAttacksRow[0];
                }
                else {
                    return ((StandardAttacksRow[])(base.GetChildRows(this.Table.ChildRelations["FK_SpecificWeapons_StandardAttacks"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SchoolsRow : global::System.Data.DataRow {
            
            private SchoolsDataTable tableSchools;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SchoolsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSchools = ((SchoolsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableSchools.NameColumn]));
                }
                set {
                    this[this.tableSchools.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CantripsRow[] GetCantripsRows() {
                if ((this.Table.ChildRelations["FK_Schools_Cantrips"] == null)) {
                    return new CantripsRow[0];
                }
                else {
                    return ((CantripsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Schools_Cantrips"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EffectChannelsRow : global::System.Data.DataRow {
            
            private EffectChannelsDataTable tableEffectChannels;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EffectChannelsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEffectChannels = ((EffectChannelsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableEffectChannels.NameColumn]));
                }
                set {
                    this[this.tableEffectChannels.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectTermsRow[] GetEffectTermsRows() {
                if ((this.Table.ChildRelations["FK_EffectChannels_EffectTerms"] == null)) {
                    return new EffectTermsRow[0];
                }
                else {
                    return ((EffectTermsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_EffectChannels_EffectTerms"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChanneledFeatsRow[] GetChanneledFeatsRows() {
                if ((this.Table.ChildRelations["FK_EffectChannels_ChanneledFeats"] == null)) {
                    return new ChanneledFeatsRow[0];
                }
                else {
                    return ((ChanneledFeatsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_EffectChannels_ChanneledFeats"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ActiveFeatsRow : global::System.Data.DataRow {
            
            private ActiveFeatsDataTable tableActiveFeats;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ActiveFeatsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableActiveFeats = ((ActiveFeatsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Feat_Name {
                get {
                    return ((string)(this[this.tableActiveFeats.Feat_NameColumn]));
                }
                set {
                    this[this.tableActiveFeats.Feat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DamageFactor {
                get {
                    return ((decimal)(this[this.tableActiveFeats.DamageFactorColumn]));
                }
                set {
                    this[this.tableActiveFeats.DamageFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AttackSeconds {
                get {
                    return ((decimal)(this[this.tableActiveFeats.AttackSecondsColumn]));
                }
                set {
                    this[this.tableActiveFeats.AttackSecondsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StaminaCost {
                get {
                    return ((int)(this[this.tableActiveFeats.StaminaCostColumn]));
                }
                set {
                    this[this.tableActiveFeats.StaminaCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMelee {
                get {
                    return ((bool)(this[this.tableActiveFeats.IsMeleeColumn]));
                }
                set {
                    this[this.tableActiveFeats.IsMeleeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Range {
                get {
                    try {
                        return ((decimal)(this[this.tableActiveFeats.RangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Range\' in table \'ActiveFeats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableActiveFeats.RangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WeaponCategory_Name {
                get {
                    return ((string)(this[this.tableActiveFeats.WeaponCategory_NameColumn]));
                }
                set {
                    this[this.tableActiveFeats.WeaponCategory_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatsRow FeatsRow {
                get {
                    return ((FeatsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Feats_ActiveFeats"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Feats_ActiveFeats"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WeaponCategoriesRow WeaponCategoriesRow {
                get {
                    return ((WeaponCategoriesRow)(this.GetParentRow(this.Table.ParentRelations["FK_WeaponCategories_ActiveFeats"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_WeaponCategories_ActiveFeats"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRangeNull() {
                return this.IsNull(this.tableActiveFeats.RangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRangeNull() {
                this[this.tableActiveFeats.RangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PowerAttacksRow[] GetPowerAttacksRows() {
                if ((this.Table.ChildRelations["FK_ActiveFeats_PowerAttacks"] == null)) {
                    return new PowerAttacksRow[0];
                }
                else {
                    return ((PowerAttacksRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ActiveFeats_PowerAttacks"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StandardAttacksRow[] GetStandardAttacksRows() {
                if ((this.Table.ChildRelations["FK_ActiveFeats_StandardAttacks"] == null)) {
                    return new StandardAttacksRow[0];
                }
                else {
                    return ((StandardAttacksRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ActiveFeats_StandardAttacks"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StandardAttacksRow : global::System.Data.DataRow {
            
            private StandardAttacksDataTable tableStandardAttacks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal StandardAttacksRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStandardAttacks = ((StandardAttacksDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Feat_Name {
                get {
                    return ((string)(this[this.tableStandardAttacks.Feat_NameColumn]));
                }
                set {
                    this[this.tableStandardAttacks.Feat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AttackForm_Name {
                get {
                    return ((string)(this[this.tableStandardAttacks.AttackForm_NameColumn]));
                }
                set {
                    this[this.tableStandardAttacks.AttackForm_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CooldownSeconds {
                get {
                    return ((decimal)(this[this.tableStandardAttacks.CooldownSecondsColumn]));
                }
                set {
                    this[this.tableStandardAttacks.CooldownSecondsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpecificWeapon_Name {
                get {
                    try {
                        return ((string)(this[this.tableStandardAttacks.SpecificWeapon_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecificWeapon_Name\' in table \'StandardAttacks\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStandardAttacks.SpecificWeapon_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActiveFeatsRow ActiveFeatsRow {
                get {
                    return ((ActiveFeatsRow)(this.GetParentRow(this.Table.ParentRelations["FK_ActiveFeats_StandardAttacks"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ActiveFeats_StandardAttacks"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackFormsRow AttackFormsRow {
                get {
                    return ((AttackFormsRow)(this.GetParentRow(this.Table.ParentRelations["FK_AttackForms_StandardAttacks"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AttackForms_StandardAttacks"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpecificWeaponsRow SpecificWeaponsRow {
                get {
                    return ((SpecificWeaponsRow)(this.GetParentRow(this.Table.ParentRelations["FK_SpecificWeapons_StandardAttacks"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_SpecificWeapons_StandardAttacks"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecificWeapon_NameNull() {
                return this.IsNull(this.tableStandardAttacks.SpecificWeapon_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpecificWeapon_NameNull() {
                this[this.tableStandardAttacks.SpecificWeapon_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CantripsRow[] GetCantripsRows() {
                if ((this.Table.ChildRelations["FK_StandardAttacks_Cantrips"] == null)) {
                    return new CantripsRow[0];
                }
                else {
                    return ((CantripsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_StandardAttacks_Cantrips"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PowerAttacksRow : global::System.Data.DataRow {
            
            private PowerAttacksDataTable tablePowerAttacks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PowerAttacksRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePowerAttacks = ((PowerAttacksDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Feat_Name {
                get {
                    return ((string)(this[this.tablePowerAttacks.Feat_NameColumn]));
                }
                set {
                    this[this.tablePowerAttacks.Feat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PowerCost {
                get {
                    return ((int)(this[this.tablePowerAttacks.PowerCostColumn]));
                }
                set {
                    this[this.tablePowerAttacks.PowerCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Level {
                get {
                    return ((int)(this[this.tablePowerAttacks.LevelColumn]));
                }
                set {
                    this[this.tablePowerAttacks.LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool HasEndOfCombatCooldown {
                get {
                    return ((bool)(this[this.tablePowerAttacks.HasEndOfCombatCooldownColumn]));
                }
                set {
                    this[this.tablePowerAttacks.HasEndOfCombatCooldownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AttackBonus_Name {
                get {
                    return ((string)(this[this.tablePowerAttacks.AttackBonus_NameColumn]));
                }
                set {
                    this[this.tablePowerAttacks.AttackBonus_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActiveFeatsRow ActiveFeatsRow {
                get {
                    return ((ActiveFeatsRow)(this.GetParentRow(this.Table.ParentRelations["FK_ActiveFeats_PowerAttacks"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ActiveFeats_PowerAttacks"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackBonusesRow AttackBonusesRow {
                get {
                    return ((AttackBonusesRow)(this.GetParentRow(this.Table.ParentRelations["FK_AttackBonuses_PowerAttacks"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AttackBonuses_PowerAttacks"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CantripsRow : global::System.Data.DataRow {
            
            private CantripsDataTable tableCantrips;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CantripsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCantrips = ((CantripsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Feat_Name {
                get {
                    return ((string)(this[this.tableCantrips.Feat_NameColumn]));
                }
                set {
                    this[this.tableCantrips.Feat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string School_Name {
                get {
                    return ((string)(this[this.tableCantrips.School_NameColumn]));
                }
                set {
                    this[this.tableCantrips.School_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StandardAttacksRow StandardAttacksRow {
                get {
                    return ((StandardAttacksRow)(this.GetParentRow(this.Table.ParentRelations["FK_StandardAttacks_Cantrips"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_StandardAttacks_Cantrips"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SchoolsRow SchoolsRow {
                get {
                    return ((SchoolsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Schools_Cantrips"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Schools_Cantrips"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ChanneledFeatsRow : global::System.Data.DataRow {
            
            private ChanneledFeatsDataTable tableChanneledFeats;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ChanneledFeatsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableChanneledFeats = ((ChanneledFeatsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Feat_Name {
                get {
                    return ((string)(this[this.tableChanneledFeats.Feat_NameColumn]));
                }
                set {
                    this[this.tableChanneledFeats.Feat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Channel_Name {
                get {
                    return ((string)(this[this.tableChanneledFeats.Channel_NameColumn]));
                }
                set {
                    this[this.tableChanneledFeats.Channel_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatsRow FeatsRow {
                get {
                    return ((FeatsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Feats_ChanneledFeats"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Feats_ChanneledFeats"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectChannelsRow EffectChannelsRow {
                get {
                    return ((EffectChannelsRow)(this.GetParentRow(this.Table.ParentRelations["FK_EffectChannels_ChanneledFeats"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_EffectChannels_ChanneledFeats"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningSkillsRow[] GetRefiningSkillsRows() {
                if ((this.Table.ChildRelations["FK_ChanneledFeats_RefiningSkills"] == null)) {
                    return new RefiningSkillsRow[0];
                }
                else {
                    return ((RefiningSkillsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ChanneledFeats_RefiningSkills"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingSkillsRow[] GetCraftingSkillsRows() {
                if ((this.Table.ChildRelations["FK_ChanneledFeats_CraftingSkills"] == null)) {
                    return new CraftingSkillsRow[0];
                }
                else {
                    return ((CraftingSkillsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ChanneledFeats_CraftingSkills"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackBonusesRow[] GetAttackBonusesRows() {
                if ((this.Table.ChildRelations["FK_ChanneledFeats_AttackBonuses"] == null)) {
                    return new AttackBonusesRow[0];
                }
                else {
                    return ((AttackBonusesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ChanneledFeats_AttackBonuses"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AttackBonusesRow : global::System.Data.DataRow {
            
            private AttackBonusesDataTable tableAttackBonuses;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AttackBonusesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAttackBonuses = ((AttackBonusesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Feat_Name {
                get {
                    return ((string)(this[this.tableAttackBonuses.Feat_NameColumn]));
                }
                set {
                    this[this.tableAttackBonuses.Feat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChanneledFeatsRow ChanneledFeatsRow {
                get {
                    return ((ChanneledFeatsRow)(this.GetParentRow(this.Table.ParentRelations["FK_ChanneledFeats_AttackBonuses"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ChanneledFeats_AttackBonuses"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PowerAttacksRow[] GetPowerAttacksRows() {
                if ((this.Table.ChildRelations["FK_AttackBonuses_PowerAttacks"] == null)) {
                    return new PowerAttacksRow[0];
                }
                else {
                    return ((PowerAttacksRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AttackBonuses_PowerAttacks"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RoleAchievementsRow : global::System.Data.DataRow {
            
            private RoleAchievementsDataTable tableRoleAchievements;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RoleAchievementsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRoleAchievements = ((RoleAchievementsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Achievement_Name {
                get {
                    return ((string)(this[this.tableRoleAchievements.Achievement_NameColumn]));
                }
                set {
                    this[this.tableRoleAchievements.Achievement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Role_Name {
                get {
                    return ((string)(this[this.tableRoleAchievements.Role_NameColumn]));
                }
                set {
                    this[this.tableRoleAchievements.Role_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RolesRow RolesRow {
                get {
                    return ((RolesRow)(this.GetParentRow(this.Table.ParentRelations["FK_Roles_RoleAchievements"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Roles_RoleAchievements"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementsRow AchievementsRow {
                get {
                    return ((AchievementsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Achievements_RoleAchievements"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Achievements_RoleAchievements"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CraftAchievementsRow : global::System.Data.DataRow {
            
            private CraftAchievementsDataTable tableCraftAchievements;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CraftAchievementsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCraftAchievements = ((CraftAchievementsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Achievement_Name {
                get {
                    return ((string)(this[this.tableCraftAchievements.Achievement_NameColumn]));
                }
                set {
                    this[this.tableCraftAchievements.Achievement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Tier {
                get {
                    return ((int)(this[this.tableCraftAchievements.TierColumn]));
                }
                set {
                    this[this.tableCraftAchievements.TierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Rarity {
                get {
                    return ((string)(this[this.tableCraftAchievements.RarityColumn]));
                }
                set {
                    this[this.tableCraftAchievements.RarityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementsRow AchievementsRow {
                get {
                    return ((AchievementsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Achievements_CraftAchievements"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Achievements_CraftAchievements"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningAchievementsRow[] GetRefiningAchievementsRows() {
                if ((this.Table.ChildRelations["FK_CraftAchievements_RefiningAchievement"] == null)) {
                    return new RefiningAchievementsRow[0];
                }
                else {
                    return ((RefiningAchievementsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CraftAchievements_RefiningAchievement"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingAchievementsRow[] GetCraftingAchievementsRows() {
                if ((this.Table.ChildRelations["FK_CraftAchievements_CraftingAchievement"] == null)) {
                    return new CraftingAchievementsRow[0];
                }
                else {
                    return ((CraftingAchievementsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CraftAchievements_CraftingAchievement"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CraftingAchievementsRow : global::System.Data.DataRow {
            
            private CraftingAchievementsDataTable tableCraftingAchievements;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CraftingAchievementsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCraftingAchievements = ((CraftingAchievementsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Achievement_Name {
                get {
                    return ((string)(this[this.tableCraftingAchievements.Achievement_NameColumn]));
                }
                set {
                    this[this.tableCraftingAchievements.Achievement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CraftingSkill_Name {
                get {
                    return ((string)(this[this.tableCraftingAchievements.CraftingSkill_NameColumn]));
                }
                set {
                    this[this.tableCraftingAchievements.CraftingSkill_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementsRow CraftAchievementsRow {
                get {
                    return ((CraftAchievementsRow)(this.GetParentRow(this.Table.ParentRelations["FK_CraftAchievements_CraftingAchievement"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CraftAchievements_CraftingAchievement"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingSkillsRow CraftingSkillsRow {
                get {
                    return ((CraftingSkillsRow)(this.GetParentRow(this.Table.ParentRelations["FK_CraftingSkills_CraftingAchievement"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CraftingSkills_CraftingAchievement"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CraftingSkillsRow : global::System.Data.DataRow {
            
            private CraftingSkillsDataTable tableCraftingSkills;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CraftingSkillsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCraftingSkills = ((CraftingSkillsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Feat_Name {
                get {
                    return ((string)(this[this.tableCraftingSkills.Feat_NameColumn]));
                }
                set {
                    this[this.tableCraftingSkills.Feat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChanneledFeatsRow ChanneledFeatsRow {
                get {
                    return ((ChanneledFeatsRow)(this.GetParentRow(this.Table.ParentRelations["FK_ChanneledFeats_CraftingSkills"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ChanneledFeats_CraftingSkills"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingAchievementsRow[] GetCraftingAchievementRows() {
                if ((this.Table.ChildRelations["FK_CraftingSkills_CraftingAchievement"] == null)) {
                    return new CraftingAchievementsRow[0];
                }
                else {
                    return ((CraftingAchievementsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CraftingSkills_CraftingAchievement"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RefiningSkillsRow : global::System.Data.DataRow {
            
            private RefiningSkillsDataTable tableRefiningSkills;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RefiningSkillsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRefiningSkills = ((RefiningSkillsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Feat_Name {
                get {
                    return ((string)(this[this.tableRefiningSkills.Feat_NameColumn]));
                }
                set {
                    this[this.tableRefiningSkills.Feat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChanneledFeatsRow ChanneledFeatsRow {
                get {
                    return ((ChanneledFeatsRow)(this.GetParentRow(this.Table.ParentRelations["FK_ChanneledFeats_RefiningSkills"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ChanneledFeats_RefiningSkills"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningAchievementsRow[] GetRefiningAchievementsRows() {
                if ((this.Table.ChildRelations["FK_RefiningSkills_RefiningAchievement"] == null)) {
                    return new RefiningAchievementsRow[0];
                }
                else {
                    return ((RefiningAchievementsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_RefiningSkills_RefiningAchievement"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RefiningAchievementsRow : global::System.Data.DataRow {
            
            private RefiningAchievementsDataTable tableRefiningAchievements;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal RefiningAchievementsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRefiningAchievements = ((RefiningAchievementsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Achievement_Name {
                get {
                    return ((string)(this[this.tableRefiningAchievements.Achievement_NameColumn]));
                }
                set {
                    this[this.tableRefiningAchievements.Achievement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RefiningSkill_Name {
                get {
                    return ((string)(this[this.tableRefiningAchievements.RefiningSkill_NameColumn]));
                }
                set {
                    this[this.tableRefiningAchievements.RefiningSkill_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementsRow CraftAchievementsRow {
                get {
                    return ((CraftAchievementsRow)(this.GetParentRow(this.Table.ParentRelations["FK_CraftAchievements_RefiningAchievement"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CraftAchievements_RefiningAchievement"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningSkillsRow RefiningSkillsRow {
                get {
                    return ((RefiningSkillsRow)(this.GetParentRow(this.Table.ParentRelations["FK_RefiningSkills_RefiningAchievement"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_RefiningSkills_RefiningAchievement"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CounterAchievementLevelsRow : global::System.Data.DataRow {
            
            private CounterAchievementLevelsDataTable tableCounterAchievementLevels;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CounterAchievementLevelsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCounterAchievementLevels = ((CounterAchievementLevelsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Achievement_Name {
                get {
                    return ((string)(this[this.tableCounterAchievementLevels.Achievement_NameColumn]));
                }
                set {
                    this[this.tableCounterAchievementLevels.Achievement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Achievement_Level {
                get {
                    return ((int)(this[this.tableCounterAchievementLevels.Achievement_LevelColumn]));
                }
                set {
                    this[this.tableCounterAchievementLevels.Achievement_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CounterValue {
                get {
                    return ((int)(this[this.tableCounterAchievementLevels.CounterValueColumn]));
                }
                set {
                    this[this.tableCounterAchievementLevels.CounterValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelsRow AchievementLevelsRowParent {
                get {
                    return ((AchievementLevelsRow)(this.GetParentRow(this.Table.ParentRelations["FK_AchievementLevels_CounterAchievementLevels"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AchievementLevels_CounterAchievementLevels"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CraftAchievementLevelsRow : global::System.Data.DataRow {
            
            private CraftAchievementLevelsDataTable tableCraftAchievementLevels;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CraftAchievementLevelsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCraftAchievementLevels = ((CraftAchievementLevelsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Achievement_Name {
                get {
                    return ((string)(this[this.tableCraftAchievementLevels.Achievement_NameColumn]));
                }
                set {
                    this[this.tableCraftAchievementLevels.Achievement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Achievement_Level {
                get {
                    return ((int)(this[this.tableCraftAchievementLevels.Achievement_LevelColumn]));
                }
                set {
                    this[this.tableCraftAchievementLevels.Achievement_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UpgradePlus {
                get {
                    return ((int)(this[this.tableCraftAchievementLevels.UpgradePlusColumn]));
                }
                set {
                    this[this.tableCraftAchievementLevels.UpgradePlusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelsRow AchievementLevelsRowParent {
                get {
                    return ((AchievementLevelsRow)(this.GetParentRow(this.Table.ParentRelations["FK_AchievementLevels_CraftAchievementLevels"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AchievementLevels_CraftAchievementLevels"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AchLevelCatBonusesRow : global::System.Data.DataRow {
            
            private AchLevelCatBonusesDataTable tableAchLevelCatBonuses;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AchLevelCatBonusesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAchLevelCatBonuses = ((AchLevelCatBonusesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Achievement_Name {
                get {
                    return ((string)(this[this.tableAchLevelCatBonuses.Achievement_NameColumn]));
                }
                set {
                    this[this.tableAchLevelCatBonuses.Achievement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Achievement_Level {
                get {
                    return ((int)(this[this.tableAchLevelCatBonuses.Achievement_LevelColumn]));
                }
                set {
                    this[this.tableAchLevelCatBonuses.Achievement_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableAchLevelCatBonuses.FactTypeColumn]));
                }
                set {
                    this[this.tableAchLevelCatBonuses.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactNo {
                get {
                    return ((int)(this[this.tableAchLevelCatBonuses.FactNoColumn]));
                }
                set {
                    this[this.tableAchLevelCatBonuses.FactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OptionNo {
                get {
                    return ((int)(this[this.tableAchLevelCatBonuses.OptionNoColumn]));
                }
                set {
                    this[this.tableAchLevelCatBonuses.OptionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BonusCategory_Name {
                get {
                    return ((string)(this[this.tableAchLevelCatBonuses.BonusCategory_NameColumn]));
                }
                set {
                    this[this.tableAchLevelCatBonuses.BonusCategory_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BonusCategoryPoints {
                get {
                    return ((int)(this[this.tableAchLevelCatBonuses.BonusCategoryPointsColumn]));
                }
                set {
                    this[this.tableAchLevelCatBonuses.BonusCategoryPointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactsRow AchievementLevelFactsRowParent {
                get {
                    return ((AchievementLevelFactsRow)(this.GetParentRow(this.Table.ParentRelations["FK_AchievementLevelFacts_AchLevelCatBonuses"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AchievementLevelFacts_AchLevelCatBonuses"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementCategoriesRow AchievementCategoriesRow {
                get {
                    return ((AchievementCategoriesRow)(this.GetParentRow(this.Table.ParentRelations["FK_AchievementCategories_AchLevelCatBonuses"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AchievementCategories_AchLevelCatBonuses"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AchLevelAdvReqsRow : global::System.Data.DataRow {
            
            private AchLevelAdvReqsDataTable tableAchLevelAdvReqs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AchLevelAdvReqsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAchLevelAdvReqs = ((AchLevelAdvReqsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Achievement_Name {
                get {
                    return ((string)(this[this.tableAchLevelAdvReqs.Achievement_NameColumn]));
                }
                set {
                    this[this.tableAchLevelAdvReqs.Achievement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Achievement_Level {
                get {
                    return ((int)(this[this.tableAchLevelAdvReqs.Achievement_LevelColumn]));
                }
                set {
                    this[this.tableAchLevelAdvReqs.Achievement_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableAchLevelAdvReqs.FactTypeColumn]));
                }
                set {
                    this[this.tableAchLevelAdvReqs.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactNo {
                get {
                    return ((int)(this[this.tableAchLevelAdvReqs.FactNoColumn]));
                }
                set {
                    this[this.tableAchLevelAdvReqs.FactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OptionNo {
                get {
                    return ((int)(this[this.tableAchLevelAdvReqs.OptionNoColumn]));
                }
                set {
                    this[this.tableAchLevelAdvReqs.OptionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RequiredAdvancement_Name {
                get {
                    return ((string)(this[this.tableAchLevelAdvReqs.RequiredAdvancement_NameColumn]));
                }
                set {
                    this[this.tableAchLevelAdvReqs.RequiredAdvancement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RequiredAdvancement_Rank {
                get {
                    return ((int)(this[this.tableAchLevelAdvReqs.RequiredAdvancement_RankColumn]));
                }
                set {
                    this[this.tableAchLevelAdvReqs.RequiredAdvancement_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactsRow AchievementLevelFactsRowParent {
                get {
                    return ((AchievementLevelFactsRow)(this.GetParentRow(this.Table.ParentRelations["FK_AchievementLevelFacts_AchLevelAdvReqs"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AchievementLevelFacts_AchLevelAdvReqs"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRanksRow AdvancementRanksRowParent {
                get {
                    return ((AdvancementRanksRow)(this.GetParentRow(this.Table.ParentRelations["FK_AdvancementRanks_AchLevelAdvReqs"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AdvancementRanks_AchLevelAdvReqs"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AchievementLevelFactStringsRow : global::System.Data.DataRow {
            
            private AchievementLevelFactStringsDataTable tableAchievementLevelFactStrings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AchievementLevelFactStringsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAchievementLevelFactStrings = ((AchievementLevelFactStringsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Achievement_Name {
                get {
                    return ((string)(this[this.tableAchievementLevelFactStrings.Achievement_NameColumn]));
                }
                set {
                    this[this.tableAchievementLevelFactStrings.Achievement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Achievement_Level {
                get {
                    return ((int)(this[this.tableAchievementLevelFactStrings.Achievement_LevelColumn]));
                }
                set {
                    this[this.tableAchievementLevelFactStrings.Achievement_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableAchievementLevelFactStrings.FactTypeColumn]));
                }
                set {
                    this[this.tableAchievementLevelFactStrings.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactString {
                get {
                    return ((string)(this[this.tableAchievementLevelFactStrings.FactStringColumn]));
                }
                set {
                    this[this.tableAchievementLevelFactStrings.FactStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelsRow AchievementLevelsRowParent {
                get {
                    return ((AchievementLevelsRow)(this.GetParentRow(this.Table.ParentRelations["FK_AchievementLevels_AchievementLevelFactStrings"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AchievementLevels_AchievementLevelFactStrings"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FeatRanksRow : global::System.Data.DataRow {
            
            private FeatRanksDataTable tableFeatRanks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FeatRanksRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFeatRanks = ((FeatRanksDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Feat_Name {
                get {
                    return ((string)(this[this.tableFeatRanks.Feat_NameColumn]));
                }
                set {
                    this[this.tableFeatRanks.Feat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Rank {
                get {
                    return ((int)(this[this.tableFeatRanks.RankColumn]));
                }
                set {
                    this[this.tableFeatRanks.RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Advancement_Name {
                get {
                    return ((string)(this[this.tableFeatRanks.Advancement_NameColumn]));
                }
                set {
                    this[this.tableFeatRanks.Advancement_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatsRow FeatsRowByFK_Feats_FeatRanks {
                get {
                    return ((FeatsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Feats_FeatRanks"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Feats_FeatRanks"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatsRow FeatsRowParentByFK_Feats_FeatRanks1 {
                get {
                    return ((FeatsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Feats_FeatRanks1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Feats_FeatRanks1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRanksRow AdvancementRanksRowParent {
                get {
                    return ((AdvancementRanksRow)(this.GetParentRow(this.Table.ParentRelations["FK_AdvancementRanks_FeatRanks"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AdvancementRanks_FeatRanks"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankFactsRow[] GetFeatRankFactsRows() {
                if ((this.Table.ChildRelations["FK_FeatRanks_FeatRankFacts"] == null)) {
                    return new FeatRankFactsRow[0];
                }
                else {
                    return ((FeatRankFactsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FeatRanks_FeatRankFacts"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EffectDescriptionsRow : global::System.Data.DataRow {
            
            private EffectDescriptionsDataTable tableEffectDescriptions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EffectDescriptionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEffectDescriptions = ((EffectDescriptionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text {
                get {
                    return ((string)(this[this.tableEffectDescriptions.TextColumn]));
                }
                set {
                    this[this.tableEffectDescriptions.TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Effect_Name {
                get {
                    return ((string)(this[this.tableEffectDescriptions.Effect_NameColumn]));
                }
                set {
                    this[this.tableEffectDescriptions.Effect_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FormattedText {
                get {
                    return ((string)(this[this.tableEffectDescriptions.FormattedTextColumn]));
                }
                set {
                    this[this.tableEffectDescriptions.FormattedTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Descriptor {
                get {
                    try {
                        return ((string)(this[this.tableEffectDescriptions.DescriptorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descriptor\' in table \'EffectDescriptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEffectDescriptions.DescriptorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConditionalPrefix {
                get {
                    try {
                        return ((string)(this[this.tableEffectDescriptions.ConditionalPrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConditionalPrefix\' in table \'EffectDescriptions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableEffectDescriptions.ConditionalPrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Conditional_Name {
                get {
                    try {
                        return ((string)(this[this.tableEffectDescriptions.Conditional_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Conditional_Name\' in table \'EffectDescriptions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEffectDescriptions.Conditional_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConditionalSuffix {
                get {
                    try {
                        return ((string)(this[this.tableEffectDescriptions.ConditionalSuffixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConditionalSuffix\' in table \'EffectDescriptions\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableEffectDescriptions.ConditionalSuffixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectsRow EffectsRow {
                get {
                    return ((EffectsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Effects_EffectDescriptions"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Effects_EffectDescriptions"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConditionalsRow ConditionalsRow {
                get {
                    return ((ConditionalsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Conditionals_EffectDescriptions"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Conditionals_EffectDescriptions"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptorNull() {
                return this.IsNull(this.tableEffectDescriptions.DescriptorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptorNull() {
                this[this.tableEffectDescriptions.DescriptorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConditionalPrefixNull() {
                return this.IsNull(this.tableEffectDescriptions.ConditionalPrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConditionalPrefixNull() {
                this[this.tableEffectDescriptions.ConditionalPrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConditional_NameNull() {
                return this.IsNull(this.tableEffectDescriptions.Conditional_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConditional_NameNull() {
                this[this.tableEffectDescriptions.Conditional_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConditionalSuffixNull() {
                return this.IsNull(this.tableEffectDescriptions.ConditionalSuffixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConditionalSuffixNull() {
                this[this.tableEffectDescriptions.ConditionalSuffixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankEffectsRow[] GetFeatRankEffectsRows() {
                if ((this.Table.ChildRelations["FK_EffectDescriptions_FeatRankEffects"] == null)) {
                    return new FeatRankEffectsRow[0];
                }
                else {
                    return ((FeatRankEffectsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_EffectDescriptions_FeatRankEffects"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatEffectsRow[] GetFeatEffectsRows() {
                if ((this.Table.ChildRelations["FK_EffectDescriptions_FeatEffects"] == null)) {
                    return new FeatEffectsRow[0];
                }
                else {
                    return ((FeatEffectsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_EffectDescriptions_FeatEffects"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EffectTermsRow : global::System.Data.DataRow {
            
            private EffectTermsDataTable tableEffectTerms;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EffectTermsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEffectTerms = ((EffectTermsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableEffectTerms.NameColumn]));
                }
                set {
                    this[this.tableEffectTerms.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EffectType_Name {
                get {
                    return ((string)(this[this.tableEffectTerms.EffectType_NameColumn]));
                }
                set {
                    this[this.tableEffectTerms.EffectType_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableEffectTerms.DescriptionColumn]));
                }
                set {
                    this[this.tableEffectTerms.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MathSpecifics {
                get {
                    try {
                        return ((string)(this[this.tableEffectTerms.MathSpecificsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MathSpecifics\' in table \'EffectTerms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEffectTerms.MathSpecificsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Channel_Name {
                get {
                    try {
                        return ((string)(this[this.tableEffectTerms.Channel_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Channel_Name\' in table \'EffectTerms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEffectTerms.Channel_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectChannelsRow EffectChannelsRow {
                get {
                    return ((EffectChannelsRow)(this.GetParentRow(this.Table.ParentRelations["FK_EffectChannels_EffectTerms"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_EffectChannels_EffectTerms"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMathSpecificsNull() {
                return this.IsNull(this.tableEffectTerms.MathSpecificsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMathSpecificsNull() {
                this[this.tableEffectTerms.MathSpecificsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChannel_NameNull() {
                return this.IsNull(this.tableEffectTerms.Channel_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChannel_NameNull() {
                this[this.tableEffectTerms.Channel_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectsRow[] GetEffectsRows() {
                if ((this.Table.ChildRelations["FK_EffectTerms_Effects"] == null)) {
                    return new EffectsRow[0];
                }
                else {
                    return ((EffectsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_EffectTerms_Effects"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EffectsRow : global::System.Data.DataRow {
            
            private EffectsDataTable tableEffects;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EffectsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEffects = ((EffectsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableEffects.NameColumn]));
                }
                set {
                    this[this.tableEffects.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EffectTerm_Name {
                get {
                    try {
                        return ((string)(this[this.tableEffects.EffectTerm_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectTerm_Name\' in table \'Effects\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEffects.EffectTerm_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectTermsRow EffectTermsRow {
                get {
                    return ((EffectTermsRow)(this.GetParentRow(this.Table.ParentRelations["FK_EffectTerms_Effects"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_EffectTerms_Effects"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEffectTerm_NameNull() {
                return this.IsNull(this.tableEffects.EffectTerm_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEffectTerm_NameNull() {
                this[this.tableEffects.EffectTerm_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectConditionalsRow[] GetEffectConditionalsRows() {
                if ((this.Table.ChildRelations["FK_Effects_EffectConditionals"] == null)) {
                    return new EffectConditionalsRow[0];
                }
                else {
                    return ((EffectConditionalsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Effects_EffectConditionals"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectDescriptionsRow[] GetEffectDescriptionsRows() {
                if ((this.Table.ChildRelations["FK_Effects_EffectDescriptions"] == null)) {
                    return new EffectDescriptionsRow[0];
                }
                else {
                    return ((EffectDescriptionsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Effects_EffectDescriptions"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ConditionalsRow : global::System.Data.DataRow {
            
            private ConditionalsDataTable tableConditionals;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ConditionalsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableConditionals = ((ConditionalsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableConditionals.NameColumn]));
                }
                set {
                    this[this.tableConditionals.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectConditionalsRow[] GetEffectConditionalsRows() {
                if ((this.Table.ChildRelations["FK_Conditionals_EffectConditionals"] == null)) {
                    return new EffectConditionalsRow[0];
                }
                else {
                    return ((EffectConditionalsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Conditionals_EffectConditionals"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectDescriptionsRow[] GetEffectDescriptionsRows() {
                if ((this.Table.ChildRelations["FK_Conditionals_EffectDescriptions"] == null)) {
                    return new EffectDescriptionsRow[0];
                }
                else {
                    return ((EffectDescriptionsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Conditionals_EffectDescriptions"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EffectConditionalsRow : global::System.Data.DataRow {
            
            private EffectConditionalsDataTable tableEffectConditionals;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EffectConditionalsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEffectConditionals = ((EffectConditionalsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Conditional_Name {
                get {
                    return ((string)(this[this.tableEffectConditionals.Conditional_NameColumn]));
                }
                set {
                    this[this.tableEffectConditionals.Conditional_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConditionalsRow ConditionalsRow {
                get {
                    return ((ConditionalsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Conditionals_EffectConditionals"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Conditionals_EffectConditionals"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectsRow EffectsRow {
                get {
                    return ((EffectsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Effects_EffectConditionals"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Effects_EffectConditionals"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FeatFactsRow : global::System.Data.DataRow {
            
            private FeatFactsDataTable tableFeatFacts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FeatFactsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFeatFacts = ((FeatFactsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Feat_Name {
                get {
                    return ((string)(this[this.tableFeatFacts.Feat_NameColumn]));
                }
                set {
                    this[this.tableFeatFacts.Feat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableFeatFacts.FactTypeColumn]));
                }
                set {
                    this[this.tableFeatFacts.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactNo {
                get {
                    return ((int)(this[this.tableFeatFacts.FactNoColumn]));
                }
                set {
                    this[this.tableFeatFacts.FactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatsRow FeatsRow {
                get {
                    return ((FeatsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Feats_FeatFacts"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Feats_FeatFacts"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatEffectsRow[] GetFeatEffectsRows() {
                if ((this.Table.ChildRelations["FK_FeatFacts_FeatEffects"] == null)) {
                    return new FeatEffectsRow[0];
                }
                else {
                    return ((FeatEffectsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FeatFacts_FeatEffects"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FeatRankFactsRow : global::System.Data.DataRow {
            
            private FeatRankFactsDataTable tableFeatRankFacts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FeatRankFactsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFeatRankFacts = ((FeatRankFactsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Feat_Name {
                get {
                    return ((string)(this[this.tableFeatRankFacts.Feat_NameColumn]));
                }
                set {
                    this[this.tableFeatRankFacts.Feat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Feat_Rank {
                get {
                    return ((int)(this[this.tableFeatRankFacts.Feat_RankColumn]));
                }
                set {
                    this[this.tableFeatRankFacts.Feat_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableFeatRankFacts.FactTypeColumn]));
                }
                set {
                    this[this.tableFeatRankFacts.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactNo {
                get {
                    return ((int)(this[this.tableFeatRankFacts.FactNoColumn]));
                }
                set {
                    this[this.tableFeatRankFacts.FactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRanksRow FeatRanksRowParent {
                get {
                    return ((FeatRanksRow)(this.GetParentRow(this.Table.ParentRelations["FK_FeatRanks_FeatRankFacts"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FeatRanks_FeatRankFacts"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankKeywordRow[] GetFeatRankKeywordRows() {
                if ((this.Table.ChildRelations["FK_FeatRankFacts_FeatRankKeyword"] == null)) {
                    return new FeatRankKeywordRow[0];
                }
                else {
                    return ((FeatRankKeywordRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FeatRankFacts_FeatRankKeyword"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankEffectsRow[] GetFeatRankEffectsRows() {
                if ((this.Table.ChildRelations["FK_FeatRankFacts_FeatRankEffects"] == null)) {
                    return new FeatRankEffectsRow[0];
                }
                else {
                    return ((FeatRankEffectsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_FeatRankFacts_FeatRankEffects"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FeatEffectsRow : global::System.Data.DataRow {
            
            private FeatEffectsDataTable tableFeatEffects;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FeatEffectsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFeatEffects = ((FeatEffectsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Feat_Name {
                get {
                    return ((string)(this[this.tableFeatEffects.Feat_NameColumn]));
                }
                set {
                    this[this.tableFeatEffects.Feat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableFeatEffects.FactTypeColumn]));
                }
                set {
                    this[this.tableFeatEffects.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactNo {
                get {
                    return ((int)(this[this.tableFeatEffects.FactNoColumn]));
                }
                set {
                    this[this.tableFeatEffects.FactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EffectDescription_Text {
                get {
                    try {
                        return ((string)(this[this.tableFeatEffects.EffectDescription_TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectDescription_Text\' in table \'FeatEffects\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFeatEffects.EffectDescription_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectDescriptionsRow EffectDescriptionsRow {
                get {
                    return ((EffectDescriptionsRow)(this.GetParentRow(this.Table.ParentRelations["FK_EffectDescriptions_FeatEffects"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_EffectDescriptions_FeatEffects"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatFactsRow FeatFactsRowParent {
                get {
                    return ((FeatFactsRow)(this.GetParentRow(this.Table.ParentRelations["FK_FeatFacts_FeatEffects"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FeatFacts_FeatEffects"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEffectDescription_TextNull() {
                return this.IsNull(this.tableFeatEffects.EffectDescription_TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEffectDescription_TextNull() {
                this[this.tableFeatEffects.EffectDescription_TextColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FeatRankEffectsRow : global::System.Data.DataRow {
            
            private FeatRankEffectsDataTable tableFeatRankEffects;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FeatRankEffectsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFeatRankEffects = ((FeatRankEffectsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Feat_Name {
                get {
                    return ((string)(this[this.tableFeatRankEffects.Feat_NameColumn]));
                }
                set {
                    this[this.tableFeatRankEffects.Feat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Feat_Rank {
                get {
                    return ((int)(this[this.tableFeatRankEffects.Feat_RankColumn]));
                }
                set {
                    this[this.tableFeatRankEffects.Feat_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableFeatRankEffects.FactTypeColumn]));
                }
                set {
                    this[this.tableFeatRankEffects.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactNo {
                get {
                    return ((int)(this[this.tableFeatRankEffects.FactNoColumn]));
                }
                set {
                    this[this.tableFeatRankEffects.FactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EffectDescription_Text {
                get {
                    return ((string)(this[this.tableFeatRankEffects.EffectDescription_TextColumn]));
                }
                set {
                    this[this.tableFeatRankEffects.EffectDescription_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectDescriptionsRow EffectDescriptionsRow {
                get {
                    return ((EffectDescriptionsRow)(this.GetParentRow(this.Table.ParentRelations["FK_EffectDescriptions_FeatRankEffects"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_EffectDescriptions_FeatRankEffects"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankFactsRow FeatRankFactsRowParent {
                get {
                    return ((FeatRankFactsRow)(this.GetParentRow(this.Table.ParentRelations["FK_FeatRankFacts_FeatRankEffects"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FeatRankFacts_FeatRankEffects"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FeatRankKeywordRow : global::System.Data.DataRow {
            
            private FeatRankKeywordDataTable tableFeatRankKeyword;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FeatRankKeywordRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFeatRankKeyword = ((FeatRankKeywordDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Feat_Name {
                get {
                    return ((string)(this[this.tableFeatRankKeyword.Feat_NameColumn]));
                }
                set {
                    this[this.tableFeatRankKeyword.Feat_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Feat_Rank {
                get {
                    return ((int)(this[this.tableFeatRankKeyword.Feat_RankColumn]));
                }
                set {
                    this[this.tableFeatRankKeyword.Feat_RankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactType {
                get {
                    return ((string)(this[this.tableFeatRankKeyword.FactTypeColumn]));
                }
                set {
                    this[this.tableFeatRankKeyword.FactTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactNo {
                get {
                    return ((int)(this[this.tableFeatRankKeyword.FactNoColumn]));
                }
                set {
                    this[this.tableFeatRankKeyword.FactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KeywordType_Name {
                get {
                    return ((string)(this[this.tableFeatRankKeyword.KeywordType_NameColumn]));
                }
                set {
                    this[this.tableFeatRankKeyword.KeywordType_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Keyword_Name {
                get {
                    return ((string)(this[this.tableFeatRankKeyword.Keyword_NameColumn]));
                }
                set {
                    this[this.tableFeatRankKeyword.Keyword_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordsRow KeywordsRowParent {
                get {
                    return ((KeywordsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Keywords_FeatRankKeyword"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Keywords_FeatRankKeyword"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankFactsRow FeatRankFactsRowParent {
                get {
                    return ((FeatRankFactsRow)(this.GetParentRow(this.Table.ParentRelations["FK_FeatRankFacts_FeatRankKeyword"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_FeatRankFacts_FeatRankKeyword"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class KeywordTypesRow : global::System.Data.DataRow {
            
            private KeywordTypesDataTable tableKeywordTypes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal KeywordTypesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKeywordTypes = ((KeywordTypesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableKeywordTypes.NameColumn]));
                }
                set {
                    this[this.tableKeywordTypes.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordsRow[] GetKeywordsRows() {
                if ((this.Table.ChildRelations["FK_KeywordTypes_Keywords"] == null)) {
                    return new KeywordsRow[0];
                }
                else {
                    return ((KeywordsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_KeywordTypes_Keywords"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class KeywordsRow : global::System.Data.DataRow {
            
            private KeywordsDataTable tableKeywords;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal KeywordsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKeywords = ((KeywordsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Type_Name {
                get {
                    return ((string)(this[this.tableKeywords.Type_NameColumn]));
                }
                set {
                    this[this.tableKeywords.Type_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableKeywords.NameColumn]));
                }
                set {
                    this[this.tableKeywords.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Value_Name {
                get {
                    return ((string)(this[this.tableKeywords.Value_NameColumn]));
                }
                set {
                    this[this.tableKeywords.Value_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tableKeywords.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'Keywords\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKeywords.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordValuesRow KeywordValuesRow {
                get {
                    return ((KeywordValuesRow)(this.GetParentRow(this.Table.ParentRelations["FK_KeywordValues_Keywords"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_KeywordValues_Keywords"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordTypesRow KeywordTypesRow {
                get {
                    return ((KeywordTypesRow)(this.GetParentRow(this.Table.ParentRelations["FK_KeywordTypes_Keywords"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_KeywordTypes_Keywords"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tableKeywords.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotesNull() {
                this[this.tableKeywords.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankKeywordRow[] GetFeatRankKeywordRows() {
                if ((this.Table.ChildRelations["FK_Keywords_FeatRankKeyword"] == null)) {
                    return new FeatRankKeywordRow[0];
                }
                else {
                    return ((FeatRankKeywordRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Keywords_FeatRankKeyword"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class KeywordValuesRow : global::System.Data.DataRow {
            
            private KeywordValuesDataTable tableKeywordValues;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal KeywordValuesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKeywordValues = ((KeywordValuesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableKeywordValues.NameColumn]));
                }
                set {
                    this[this.tableKeywordValues.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Value {
                get {
                    try {
                        return ((decimal)(this[this.tableKeywordValues.ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value\' in table \'KeywordValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKeywordValues.ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValueNull() {
                return this.IsNull(this.tableKeywordValues.ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValueNull() {
                this[this.tableKeywordValues.ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordsRow[] GetKeywordsRows() {
                if ((this.Table.ChildRelations["FK_KeywordValues_Keywords"] == null)) {
                    return new KeywordsRow[0];
                }
                else {
                    return ((KeywordsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_KeywordValues_Keywords"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AdvancementsRowChangeEvent : global::System.EventArgs {
            
            private AdvancementsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementsRowChangeEvent(AdvancementsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AdvancementRanksRowChangeEvent : global::System.EventArgs {
            
            private AdvancementRanksRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRanksRowChangeEvent(AdvancementRanksRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRanksRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AdvancementRankFactsRowChangeEvent : global::System.EventArgs {
            
            private AdvancementRankFactsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactsRowChangeEvent(AdvancementRankFactsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AbilitiesRowChangeEvent : global::System.EventArgs {
            
            private AbilitiesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbilitiesRowChangeEvent(AbilitiesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbilitiesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AchievementCategoriesRowChangeEvent : global::System.EventArgs {
            
            private AchievementCategoriesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementCategoriesRowChangeEvent(AchievementCategoriesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementCategoriesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AchievementsRowChangeEvent : global::System.EventArgs {
            
            private AchievementsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementsRowChangeEvent(AchievementsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AchievementLevelsRowChangeEvent : global::System.EventArgs {
            
            private AchievementLevelsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelsRowChangeEvent(AchievementLevelsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AchievementLevelFactsRowChangeEvent : global::System.EventArgs {
            
            private AchievementLevelFactsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactsRowChangeEvent(AchievementLevelFactsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AdvRankCatReqsRowChangeEvent : global::System.EventArgs {
            
            private AdvRankCatReqsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankCatReqsRowChangeEvent(AdvRankCatReqsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankCatReqsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AdvRankAdvReqsRowChangeEvent : global::System.EventArgs {
            
            private AdvRankAdvReqsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAdvReqsRowChangeEvent(AdvRankAdvReqsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAdvReqsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AdvRankAchReqsRowChangeEvent : global::System.EventArgs {
            
            private AdvRankAchReqsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAchReqsRowChangeEvent(AdvRankAchReqsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAchReqsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AdvRankAbilReqsRowChangeEvent : global::System.EventArgs {
            
            private AdvRankAbilReqsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilReqsRowChangeEvent(AdvRankAbilReqsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilReqsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AdvRankAbilBonusesRowChangeEvent : global::System.EventArgs {
            
            private AdvRankAbilBonusesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilBonusesRowChangeEvent(AdvRankAbilBonusesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvRankAbilBonusesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AdvancementRankFactStringsRowChangeEvent : global::System.EventArgs {
            
            private AdvancementRankFactStringsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactStringsRowChangeEvent(AdvancementRankFactStringsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AdvancementRankFactStringsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FeatsRowChangeEvent : global::System.EventArgs {
            
            private FeatsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatsRowChangeEvent(FeatsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RolesRowChangeEvent : global::System.EventArgs {
            
            private RolesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RolesRowChangeEvent(RolesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RolesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AttackFormsRowChangeEvent : global::System.EventArgs {
            
            private AttackFormsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackFormsRowChangeEvent(AttackFormsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackFormsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class WeaponCategoriesRowChangeEvent : global::System.EventArgs {
            
            private WeaponCategoriesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WeaponCategoriesRowChangeEvent(WeaponCategoriesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WeaponCategoriesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SpecificWeaponsRowChangeEvent : global::System.EventArgs {
            
            private SpecificWeaponsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpecificWeaponsRowChangeEvent(SpecificWeaponsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpecificWeaponsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SchoolsRowChangeEvent : global::System.EventArgs {
            
            private SchoolsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SchoolsRowChangeEvent(SchoolsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SchoolsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EffectChannelsRowChangeEvent : global::System.EventArgs {
            
            private EffectChannelsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectChannelsRowChangeEvent(EffectChannelsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectChannelsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ActiveFeatsRowChangeEvent : global::System.EventArgs {
            
            private ActiveFeatsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActiveFeatsRowChangeEvent(ActiveFeatsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ActiveFeatsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class StandardAttacksRowChangeEvent : global::System.EventArgs {
            
            private StandardAttacksRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StandardAttacksRowChangeEvent(StandardAttacksRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public StandardAttacksRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PowerAttacksRowChangeEvent : global::System.EventArgs {
            
            private PowerAttacksRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PowerAttacksRowChangeEvent(PowerAttacksRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PowerAttacksRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CantripsRowChangeEvent : global::System.EventArgs {
            
            private CantripsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CantripsRowChangeEvent(CantripsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CantripsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ChanneledFeatsRowChangeEvent : global::System.EventArgs {
            
            private ChanneledFeatsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChanneledFeatsRowChangeEvent(ChanneledFeatsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ChanneledFeatsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AttackBonusesRowChangeEvent : global::System.EventArgs {
            
            private AttackBonusesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackBonusesRowChangeEvent(AttackBonusesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AttackBonusesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RoleAchievementsRowChangeEvent : global::System.EventArgs {
            
            private RoleAchievementsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RoleAchievementsRowChangeEvent(RoleAchievementsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RoleAchievementsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CraftAchievementsRowChangeEvent : global::System.EventArgs {
            
            private CraftAchievementsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementsRowChangeEvent(CraftAchievementsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CraftingAchievementsRowChangeEvent : global::System.EventArgs {
            
            private CraftingAchievementsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingAchievementsRowChangeEvent(CraftingAchievementsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingAchievementsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CraftingSkillsRowChangeEvent : global::System.EventArgs {
            
            private CraftingSkillsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingSkillsRowChangeEvent(CraftingSkillsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftingSkillsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RefiningSkillsRowChangeEvent : global::System.EventArgs {
            
            private RefiningSkillsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningSkillsRowChangeEvent(RefiningSkillsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningSkillsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class RefiningAchievementsRowChangeEvent : global::System.EventArgs {
            
            private RefiningAchievementsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningAchievementsRowChangeEvent(RefiningAchievementsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public RefiningAchievementsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CounterAchievementLevelsRowChangeEvent : global::System.EventArgs {
            
            private CounterAchievementLevelsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CounterAchievementLevelsRowChangeEvent(CounterAchievementLevelsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CounterAchievementLevelsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CraftAchievementLevelsRowChangeEvent : global::System.EventArgs {
            
            private CraftAchievementLevelsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementLevelsRowChangeEvent(CraftAchievementLevelsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CraftAchievementLevelsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AchLevelCatBonusesRowChangeEvent : global::System.EventArgs {
            
            private AchLevelCatBonusesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelCatBonusesRowChangeEvent(AchLevelCatBonusesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelCatBonusesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AchLevelAdvReqsRowChangeEvent : global::System.EventArgs {
            
            private AchLevelAdvReqsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelAdvReqsRowChangeEvent(AchLevelAdvReqsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchLevelAdvReqsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AchievementLevelFactStringsRowChangeEvent : global::System.EventArgs {
            
            private AchievementLevelFactStringsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactStringsRowChangeEvent(AchievementLevelFactStringsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AchievementLevelFactStringsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FeatRanksRowChangeEvent : global::System.EventArgs {
            
            private FeatRanksRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRanksRowChangeEvent(FeatRanksRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRanksRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EffectDescriptionsRowChangeEvent : global::System.EventArgs {
            
            private EffectDescriptionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectDescriptionsRowChangeEvent(EffectDescriptionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectDescriptionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EffectTermsRowChangeEvent : global::System.EventArgs {
            
            private EffectTermsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectTermsRowChangeEvent(EffectTermsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectTermsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EffectsRowChangeEvent : global::System.EventArgs {
            
            private EffectsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectsRowChangeEvent(EffectsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ConditionalsRowChangeEvent : global::System.EventArgs {
            
            private ConditionalsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConditionalsRowChangeEvent(ConditionalsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConditionalsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EffectConditionalsRowChangeEvent : global::System.EventArgs {
            
            private EffectConditionalsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectConditionalsRowChangeEvent(EffectConditionalsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EffectConditionalsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FeatFactsRowChangeEvent : global::System.EventArgs {
            
            private FeatFactsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatFactsRowChangeEvent(FeatFactsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatFactsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FeatRankFactsRowChangeEvent : global::System.EventArgs {
            
            private FeatRankFactsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankFactsRowChangeEvent(FeatRankFactsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankFactsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FeatEffectsRowChangeEvent : global::System.EventArgs {
            
            private FeatEffectsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatEffectsRowChangeEvent(FeatEffectsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatEffectsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FeatRankEffectsRowChangeEvent : global::System.EventArgs {
            
            private FeatRankEffectsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankEffectsRowChangeEvent(FeatRankEffectsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankEffectsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FeatRankKeywordRowChangeEvent : global::System.EventArgs {
            
            private FeatRankKeywordRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankKeywordRowChangeEvent(FeatRankKeywordRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FeatRankKeywordRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class KeywordTypesRowChangeEvent : global::System.EventArgs {
            
            private KeywordTypesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordTypesRowChangeEvent(KeywordTypesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordTypesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class KeywordsRowChangeEvent : global::System.EventArgs {
            
            private KeywordsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordsRowChangeEvent(KeywordsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class KeywordValuesRowChangeEvent : global::System.EventArgs {
            
            private KeywordValuesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordValuesRowChangeEvent(KeywordValuesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KeywordValuesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591